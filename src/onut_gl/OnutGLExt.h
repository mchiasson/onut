/*******************************************************************************
 * This file was generated by GLBrebis on 2017-07-15 10:50:25-0400
 * https://github.com/mchiasson/GLBrebis
 *******************************************************************************
 * GLBrebis License (MIT)
 *******************************************************************************
 * Copyright (c) 2015-2017 Mathieu-Andr√© Chiasson
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in 
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 ******************************************************************************/

/*******************************************************************************
 * The generated content of this file is the result of parsing the following
 * headers from Khronos Group Inc. 
 * https://www.khronos.org/registry/gles/api/GLES3/gl32.h
 * https://www.khronos.org/registry/gles/api/GLES2/gl2ext.h
 * https://www.opengl.org/registry/api/GL/glcorearb.h
 * https://www.opengl.org/registry/api/GL/glext.h
 *******************************************************************************
 * Khronos License
 *******************************************************************************
 * Copyright (c) 2013-2017 The Khronos Group Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and/or associated documentation files (the
 * "Materials"), to deal in the Materials without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Materials, and to
 * permit persons to whom the Materials are furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Materials.
 *
 * THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
 ******************************************************************************/
#ifndef _ONUT_GL_EXT_H_
#define _ONUT_GL_EXT_H_ 1

#include <onut_gl/OnutGL.h>

#if __native_client__ || __EMSCRIPTEN__
    #include <GLES2/gl2ext.h>
#else
#ifdef __cplusplus
extern "C" {
#endif

ONUT_FORCE_INLINE void _onutAccumxOES(GLenum op, GLfixed value) {
    onutGLAPI.onutAccumxOES(op, value);
}
#define glAccumxOES _onutAccumxOES

ONUT_FORCE_INLINE GLboolean _onutAcquireKeyedMutexWin32EXT(GLuint memory, GLuint64 key, GLuint timeout) {
    return onutGLAPI.onutAcquireKeyedMutexWin32EXT(memory, key, timeout);
}
#define glAcquireKeyedMutexWin32EXT _onutAcquireKeyedMutexWin32EXT

ONUT_FORCE_INLINE void _onutActiveProgramEXT(GLuint program) {
    onutGLAPI.onutActiveProgramEXT(program);
}
#define glActiveProgramEXT _onutActiveProgramEXT

ONUT_FORCE_INLINE void _onutActiveShaderProgramEXT(GLuint pipeline, GLuint program) {
    onutGLAPI.onutActiveShaderProgramEXT(pipeline, program);
}
#define glActiveShaderProgramEXT _onutActiveShaderProgramEXT

ONUT_FORCE_INLINE void _onutActiveStencilFaceEXT(GLenum face) {
    onutGLAPI.onutActiveStencilFaceEXT(face);
}
#define glActiveStencilFaceEXT _onutActiveStencilFaceEXT

ONUT_FORCE_INLINE void _onutActiveTextureARB(GLenum texture) {
    onutGLAPI.onutActiveTextureARB(texture);
}
#define glActiveTextureARB _onutActiveTextureARB

ONUT_FORCE_INLINE void _onutActiveVaryingNV(GLuint program, const GLchar *name) {
    onutGLAPI.onutActiveVaryingNV(program, name);
}
#define glActiveVaryingNV _onutActiveVaryingNV

ONUT_FORCE_INLINE void _onutAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod) {
    onutGLAPI.onutAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod);
}
#define glAlphaFragmentOp1ATI _onutAlphaFragmentOp1ATI

ONUT_FORCE_INLINE void _onutAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod) {
    onutGLAPI.onutAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);
}
#define glAlphaFragmentOp2ATI _onutAlphaFragmentOp2ATI

ONUT_FORCE_INLINE void _onutAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod) {
    onutGLAPI.onutAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);
}
#define glAlphaFragmentOp3ATI _onutAlphaFragmentOp3ATI

ONUT_FORCE_INLINE void _onutAlphaFuncQCOM(GLenum func, GLclampf ref) {
    onutGLAPI.onutAlphaFuncQCOM(func, ref);
}
#define glAlphaFuncQCOM _onutAlphaFuncQCOM

ONUT_FORCE_INLINE void _onutAlphaFuncxOES(GLenum func, GLfixed ref) {
    onutGLAPI.onutAlphaFuncxOES(func, ref);
}
#define glAlphaFuncxOES _onutAlphaFuncxOES

ONUT_FORCE_INLINE void _onutAlphaToCoverageDitherControlNV(GLenum mode) {
    onutGLAPI.onutAlphaToCoverageDitherControlNV(mode);
}
#define glAlphaToCoverageDitherControlNV _onutAlphaToCoverageDitherControlNV

ONUT_FORCE_INLINE void _onutApplyFramebufferAttachmentCMAAINTEL(void) {
    onutGLAPI.onutApplyFramebufferAttachmentCMAAINTEL();
}
#define glApplyFramebufferAttachmentCMAAINTEL _onutApplyFramebufferAttachmentCMAAINTEL

ONUT_FORCE_INLINE void _onutApplyTextureEXT(GLenum mode) {
    onutGLAPI.onutApplyTextureEXT(mode);
}
#define glApplyTextureEXT _onutApplyTextureEXT

ONUT_FORCE_INLINE GLboolean _onutAreProgramsResidentNV(GLsizei n, const GLuint *programs, GLboolean *residences) {
    return onutGLAPI.onutAreProgramsResidentNV(n, programs, residences);
}
#define glAreProgramsResidentNV _onutAreProgramsResidentNV

ONUT_FORCE_INLINE GLboolean _onutAreTexturesResidentEXT(GLsizei n, const GLuint *textures, GLboolean *residences) {
    return onutGLAPI.onutAreTexturesResidentEXT(n, textures, residences);
}
#define glAreTexturesResidentEXT _onutAreTexturesResidentEXT

ONUT_FORCE_INLINE void _onutArrayElementEXT(GLint i) {
    onutGLAPI.onutArrayElementEXT(i);
}
#define glArrayElementEXT _onutArrayElementEXT

ONUT_FORCE_INLINE void _onutArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset) {
    onutGLAPI.onutArrayObjectATI(array, size, type, stride, buffer, offset);
}
#define glArrayObjectATI _onutArrayObjectATI

ONUT_FORCE_INLINE void _onutAsyncMarkerSGIX(GLuint marker) {
    onutGLAPI.onutAsyncMarkerSGIX(marker);
}
#define glAsyncMarkerSGIX _onutAsyncMarkerSGIX

ONUT_FORCE_INLINE void _onutAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj) {
    onutGLAPI.onutAttachObjectARB(containerObj, obj);
}
#define glAttachObjectARB _onutAttachObjectARB

ONUT_FORCE_INLINE void _onutBeginConditionalRenderNV(GLuint id, GLenum mode) {
    onutGLAPI.onutBeginConditionalRenderNV(id, mode);
}
#define glBeginConditionalRenderNV _onutBeginConditionalRenderNV

ONUT_FORCE_INLINE void _onutBeginConditionalRenderNVX(GLuint id) {
    onutGLAPI.onutBeginConditionalRenderNVX(id);
}
#define glBeginConditionalRenderNVX _onutBeginConditionalRenderNVX

ONUT_FORCE_INLINE void _onutBeginFragmentShaderATI(void) {
    onutGLAPI.onutBeginFragmentShaderATI();
}
#define glBeginFragmentShaderATI _onutBeginFragmentShaderATI

ONUT_FORCE_INLINE void _onutBeginOcclusionQueryNV(GLuint id) {
    onutGLAPI.onutBeginOcclusionQueryNV(id);
}
#define glBeginOcclusionQueryNV _onutBeginOcclusionQueryNV

ONUT_FORCE_INLINE void _onutBeginPerfMonitorAMD(GLuint monitor) {
    onutGLAPI.onutBeginPerfMonitorAMD(monitor);
}
#define glBeginPerfMonitorAMD _onutBeginPerfMonitorAMD

ONUT_FORCE_INLINE void _onutBeginPerfQueryINTEL(GLuint queryHandle) {
    onutGLAPI.onutBeginPerfQueryINTEL(queryHandle);
}
#define glBeginPerfQueryINTEL _onutBeginPerfQueryINTEL

ONUT_FORCE_INLINE void _onutBeginQueryARB(GLenum target, GLuint id) {
    onutGLAPI.onutBeginQueryARB(target, id);
}
#define glBeginQueryARB _onutBeginQueryARB

ONUT_FORCE_INLINE void _onutBeginQueryEXT(GLenum target, GLuint id) {
    onutGLAPI.onutBeginQueryEXT(target, id);
}
#define glBeginQueryEXT _onutBeginQueryEXT

ONUT_FORCE_INLINE void _onutBeginTransformFeedbackEXT(GLenum primitiveMode) {
    onutGLAPI.onutBeginTransformFeedbackEXT(primitiveMode);
}
#define glBeginTransformFeedbackEXT _onutBeginTransformFeedbackEXT

ONUT_FORCE_INLINE void _onutBeginTransformFeedbackNV(GLenum primitiveMode) {
    onutGLAPI.onutBeginTransformFeedbackNV(primitiveMode);
}
#define glBeginTransformFeedbackNV _onutBeginTransformFeedbackNV

ONUT_FORCE_INLINE void _onutBeginVertexShaderEXT(void) {
    onutGLAPI.onutBeginVertexShaderEXT();
}
#define glBeginVertexShaderEXT _onutBeginVertexShaderEXT

ONUT_FORCE_INLINE void _onutBeginVideoCaptureNV(GLuint video_capture_slot) {
    onutGLAPI.onutBeginVideoCaptureNV(video_capture_slot);
}
#define glBeginVideoCaptureNV _onutBeginVideoCaptureNV

ONUT_FORCE_INLINE void _onutBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name) {
    onutGLAPI.onutBindAttribLocationARB(programObj, index, name);
}
#define glBindAttribLocationARB _onutBindAttribLocationARB

ONUT_FORCE_INLINE void _onutBindBufferARB(GLenum target, GLuint buffer) {
    onutGLAPI.onutBindBufferARB(target, buffer);
}
#define glBindBufferARB _onutBindBufferARB

ONUT_FORCE_INLINE void _onutBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer) {
    onutGLAPI.onutBindBufferBaseEXT(target, index, buffer);
}
#define glBindBufferBaseEXT _onutBindBufferBaseEXT

ONUT_FORCE_INLINE void _onutBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer) {
    onutGLAPI.onutBindBufferBaseNV(target, index, buffer);
}
#define glBindBufferBaseNV _onutBindBufferBaseNV

ONUT_FORCE_INLINE void _onutBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset) {
    onutGLAPI.onutBindBufferOffsetEXT(target, index, buffer, offset);
}
#define glBindBufferOffsetEXT _onutBindBufferOffsetEXT

ONUT_FORCE_INLINE void _onutBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset) {
    onutGLAPI.onutBindBufferOffsetNV(target, index, buffer, offset);
}
#define glBindBufferOffsetNV _onutBindBufferOffsetNV

ONUT_FORCE_INLINE void _onutBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) {
    onutGLAPI.onutBindBufferRangeEXT(target, index, buffer, offset, size);
}
#define glBindBufferRangeEXT _onutBindBufferRangeEXT

ONUT_FORCE_INLINE void _onutBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) {
    onutGLAPI.onutBindBufferRangeNV(target, index, buffer, offset, size);
}
#define glBindBufferRangeNV _onutBindBufferRangeNV

ONUT_FORCE_INLINE void _onutBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name) {
    onutGLAPI.onutBindFragDataLocationEXT(program, color, name);
}
#define glBindFragDataLocationEXT _onutBindFragDataLocationEXT

ONUT_FORCE_INLINE void _onutBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name) {
    onutGLAPI.onutBindFragDataLocationIndexedEXT(program, colorNumber, index, name);
}
#define glBindFragDataLocationIndexedEXT _onutBindFragDataLocationIndexedEXT

ONUT_FORCE_INLINE void _onutBindFragmentShaderATI(GLuint id) {
    onutGLAPI.onutBindFragmentShaderATI(id);
}
#define glBindFragmentShaderATI _onutBindFragmentShaderATI

ONUT_FORCE_INLINE void _onutBindFramebufferEXT(GLenum target, GLuint framebuffer) {
    onutGLAPI.onutBindFramebufferEXT(target, framebuffer);
}
#define glBindFramebufferEXT _onutBindFramebufferEXT

ONUT_FORCE_INLINE void _onutBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format) {
    onutGLAPI.onutBindImageTextureEXT(index, texture, level, layered, layer, access, format);
}
#define glBindImageTextureEXT _onutBindImageTextureEXT

ONUT_FORCE_INLINE GLuint _onutBindLightParameterEXT(GLenum light, GLenum value) {
    return onutGLAPI.onutBindLightParameterEXT(light, value);
}
#define glBindLightParameterEXT _onutBindLightParameterEXT

ONUT_FORCE_INLINE GLuint _onutBindMaterialParameterEXT(GLenum face, GLenum value) {
    return onutGLAPI.onutBindMaterialParameterEXT(face, value);
}
#define glBindMaterialParameterEXT _onutBindMaterialParameterEXT

ONUT_FORCE_INLINE void _onutBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture) {
    onutGLAPI.onutBindMultiTextureEXT(texunit, target, texture);
}
#define glBindMultiTextureEXT _onutBindMultiTextureEXT

ONUT_FORCE_INLINE GLuint _onutBindParameterEXT(GLenum value) {
    return onutGLAPI.onutBindParameterEXT(value);
}
#define glBindParameterEXT _onutBindParameterEXT

ONUT_FORCE_INLINE void _onutBindProgramARB(GLenum target, GLuint program) {
    onutGLAPI.onutBindProgramARB(target, program);
}
#define glBindProgramARB _onutBindProgramARB

ONUT_FORCE_INLINE void _onutBindProgramNV(GLenum target, GLuint id) {
    onutGLAPI.onutBindProgramNV(target, id);
}
#define glBindProgramNV _onutBindProgramNV

ONUT_FORCE_INLINE void _onutBindProgramPipelineEXT(GLuint pipeline) {
    onutGLAPI.onutBindProgramPipelineEXT(pipeline);
}
#define glBindProgramPipelineEXT _onutBindProgramPipelineEXT

ONUT_FORCE_INLINE void _onutBindRenderbufferEXT(GLenum target, GLuint renderbuffer) {
    onutGLAPI.onutBindRenderbufferEXT(target, renderbuffer);
}
#define glBindRenderbufferEXT _onutBindRenderbufferEXT

ONUT_FORCE_INLINE GLuint _onutBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value) {
    return onutGLAPI.onutBindTexGenParameterEXT(unit, coord, value);
}
#define glBindTexGenParameterEXT _onutBindTexGenParameterEXT

ONUT_FORCE_INLINE void _onutBindTextureEXT(GLenum target, GLuint texture) {
    onutGLAPI.onutBindTextureEXT(target, texture);
}
#define glBindTextureEXT _onutBindTextureEXT

ONUT_FORCE_INLINE GLuint _onutBindTextureUnitParameterEXT(GLenum unit, GLenum value) {
    return onutGLAPI.onutBindTextureUnitParameterEXT(unit, value);
}
#define glBindTextureUnitParameterEXT _onutBindTextureUnitParameterEXT

ONUT_FORCE_INLINE void _onutBindTransformFeedbackNV(GLenum target, GLuint id) {
    onutGLAPI.onutBindTransformFeedbackNV(target, id);
}
#define glBindTransformFeedbackNV _onutBindTransformFeedbackNV

ONUT_FORCE_INLINE void _onutBindVertexArrayAPPLE(GLuint array) {
    onutGLAPI.onutBindVertexArrayAPPLE(array);
}
#define glBindVertexArrayAPPLE _onutBindVertexArrayAPPLE

ONUT_FORCE_INLINE void _onutBindVertexArrayOES(GLuint array) {
    onutGLAPI.onutBindVertexArrayOES(array);
}
#define glBindVertexArrayOES _onutBindVertexArrayOES

ONUT_FORCE_INLINE void _onutBindVertexShaderEXT(GLuint id) {
    onutGLAPI.onutBindVertexShaderEXT(id);
}
#define glBindVertexShaderEXT _onutBindVertexShaderEXT

ONUT_FORCE_INLINE void _onutBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset) {
    onutGLAPI.onutBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset);
}
#define glBindVideoCaptureStreamBufferNV _onutBindVideoCaptureStreamBufferNV

ONUT_FORCE_INLINE void _onutBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture) {
    onutGLAPI.onutBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture);
}
#define glBindVideoCaptureStreamTextureNV _onutBindVideoCaptureStreamTextureNV

ONUT_FORCE_INLINE void _onutBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz) {
    onutGLAPI.onutBinormal3bEXT(bx, by, bz);
}
#define glBinormal3bEXT _onutBinormal3bEXT

ONUT_FORCE_INLINE void _onutBinormal3bvEXT(const GLbyte *v) {
    onutGLAPI.onutBinormal3bvEXT(v);
}
#define glBinormal3bvEXT _onutBinormal3bvEXT

ONUT_FORCE_INLINE void _onutBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz) {
    onutGLAPI.onutBinormal3dEXT(bx, by, bz);
}
#define glBinormal3dEXT _onutBinormal3dEXT

ONUT_FORCE_INLINE void _onutBinormal3dvEXT(const GLdouble *v) {
    onutGLAPI.onutBinormal3dvEXT(v);
}
#define glBinormal3dvEXT _onutBinormal3dvEXT

ONUT_FORCE_INLINE void _onutBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz) {
    onutGLAPI.onutBinormal3fEXT(bx, by, bz);
}
#define glBinormal3fEXT _onutBinormal3fEXT

ONUT_FORCE_INLINE void _onutBinormal3fvEXT(const GLfloat *v) {
    onutGLAPI.onutBinormal3fvEXT(v);
}
#define glBinormal3fvEXT _onutBinormal3fvEXT

ONUT_FORCE_INLINE void _onutBinormal3iEXT(GLint bx, GLint by, GLint bz) {
    onutGLAPI.onutBinormal3iEXT(bx, by, bz);
}
#define glBinormal3iEXT _onutBinormal3iEXT

ONUT_FORCE_INLINE void _onutBinormal3ivEXT(const GLint *v) {
    onutGLAPI.onutBinormal3ivEXT(v);
}
#define glBinormal3ivEXT _onutBinormal3ivEXT

ONUT_FORCE_INLINE void _onutBinormal3sEXT(GLshort bx, GLshort by, GLshort bz) {
    onutGLAPI.onutBinormal3sEXT(bx, by, bz);
}
#define glBinormal3sEXT _onutBinormal3sEXT

ONUT_FORCE_INLINE void _onutBinormal3svEXT(const GLshort *v) {
    onutGLAPI.onutBinormal3svEXT(v);
}
#define glBinormal3svEXT _onutBinormal3svEXT

ONUT_FORCE_INLINE void _onutBinormalPointerEXT(GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutBinormalPointerEXT(type, stride, pointer);
}
#define glBinormalPointerEXT _onutBinormalPointerEXT

ONUT_FORCE_INLINE void _onutBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap) {
    onutGLAPI.onutBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap);
}
#define glBitmapxOES _onutBitmapxOES

ONUT_FORCE_INLINE void _onutBlendBarrierKHR(void) {
    onutGLAPI.onutBlendBarrierKHR();
}
#define glBlendBarrierKHR _onutBlendBarrierKHR

ONUT_FORCE_INLINE void _onutBlendBarrierNV(void) {
    onutGLAPI.onutBlendBarrierNV();
}
#define glBlendBarrierNV _onutBlendBarrierNV

ONUT_FORCE_INLINE void _onutBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) {
    onutGLAPI.onutBlendColorEXT(red, green, blue, alpha);
}
#define glBlendColorEXT _onutBlendColorEXT

ONUT_FORCE_INLINE void _onutBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {
    onutGLAPI.onutBlendColorxOES(red, green, blue, alpha);
}
#define glBlendColorxOES _onutBlendColorxOES

ONUT_FORCE_INLINE void _onutBlendEquationEXT(GLenum mode) {
    onutGLAPI.onutBlendEquationEXT(mode);
}
#define glBlendEquationEXT _onutBlendEquationEXT

ONUT_FORCE_INLINE void _onutBlendEquationIndexedAMD(GLuint buf, GLenum mode) {
    onutGLAPI.onutBlendEquationIndexedAMD(buf, mode);
}
#define glBlendEquationIndexedAMD _onutBlendEquationIndexedAMD

ONUT_FORCE_INLINE void _onutBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha) {
    onutGLAPI.onutBlendEquationSeparateEXT(modeRGB, modeAlpha);
}
#define glBlendEquationSeparateEXT _onutBlendEquationSeparateEXT

ONUT_FORCE_INLINE void _onutBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha) {
    onutGLAPI.onutBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha);
}
#define glBlendEquationSeparateIndexedAMD _onutBlendEquationSeparateIndexedAMD

ONUT_FORCE_INLINE void _onutBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha) {
    onutGLAPI.onutBlendEquationSeparateiARB(buf, modeRGB, modeAlpha);
}
#define glBlendEquationSeparateiARB _onutBlendEquationSeparateiARB

ONUT_FORCE_INLINE void _onutBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha) {
    onutGLAPI.onutBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha);
}
#define glBlendEquationSeparateiEXT _onutBlendEquationSeparateiEXT

ONUT_FORCE_INLINE void _onutBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha) {
    onutGLAPI.onutBlendEquationSeparateiOES(buf, modeRGB, modeAlpha);
}
#define glBlendEquationSeparateiOES _onutBlendEquationSeparateiOES

ONUT_FORCE_INLINE void _onutBlendEquationiARB(GLuint buf, GLenum mode) {
    onutGLAPI.onutBlendEquationiARB(buf, mode);
}
#define glBlendEquationiARB _onutBlendEquationiARB

ONUT_FORCE_INLINE void _onutBlendEquationiEXT(GLuint buf, GLenum mode) {
    onutGLAPI.onutBlendEquationiEXT(buf, mode);
}
#define glBlendEquationiEXT _onutBlendEquationiEXT

ONUT_FORCE_INLINE void _onutBlendEquationiOES(GLuint buf, GLenum mode) {
    onutGLAPI.onutBlendEquationiOES(buf, mode);
}
#define glBlendEquationiOES _onutBlendEquationiOES

ONUT_FORCE_INLINE void _onutBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst) {
    onutGLAPI.onutBlendFuncIndexedAMD(buf, src, dst);
}
#define glBlendFuncIndexedAMD _onutBlendFuncIndexedAMD

ONUT_FORCE_INLINE void _onutBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) {
    onutGLAPI.onutBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}
#define glBlendFuncSeparateEXT _onutBlendFuncSeparateEXT

ONUT_FORCE_INLINE void _onutBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) {
    onutGLAPI.onutBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}
#define glBlendFuncSeparateINGR _onutBlendFuncSeparateINGR

ONUT_FORCE_INLINE void _onutBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) {
    onutGLAPI.onutBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}
#define glBlendFuncSeparateIndexedAMD _onutBlendFuncSeparateIndexedAMD

ONUT_FORCE_INLINE void _onutBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) {
    onutGLAPI.onutBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}
#define glBlendFuncSeparateiARB _onutBlendFuncSeparateiARB

ONUT_FORCE_INLINE void _onutBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) {
    onutGLAPI.onutBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}
#define glBlendFuncSeparateiEXT _onutBlendFuncSeparateiEXT

ONUT_FORCE_INLINE void _onutBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) {
    onutGLAPI.onutBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}
#define glBlendFuncSeparateiOES _onutBlendFuncSeparateiOES

ONUT_FORCE_INLINE void _onutBlendFunciARB(GLuint buf, GLenum src, GLenum dst) {
    onutGLAPI.onutBlendFunciARB(buf, src, dst);
}
#define glBlendFunciARB _onutBlendFunciARB

ONUT_FORCE_INLINE void _onutBlendFunciEXT(GLuint buf, GLenum src, GLenum dst) {
    onutGLAPI.onutBlendFunciEXT(buf, src, dst);
}
#define glBlendFunciEXT _onutBlendFunciEXT

ONUT_FORCE_INLINE void _onutBlendFunciOES(GLuint buf, GLenum src, GLenum dst) {
    onutGLAPI.onutBlendFunciOES(buf, src, dst);
}
#define glBlendFunciOES _onutBlendFunciOES

ONUT_FORCE_INLINE void _onutBlendParameteriNV(GLenum pname, GLint value) {
    onutGLAPI.onutBlendParameteriNV(pname, value);
}
#define glBlendParameteriNV _onutBlendParameteriNV

ONUT_FORCE_INLINE void _onutBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {
    onutGLAPI.onutBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}
#define glBlitFramebufferANGLE _onutBlitFramebufferANGLE

ONUT_FORCE_INLINE void _onutBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {
    onutGLAPI.onutBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}
#define glBlitFramebufferEXT _onutBlitFramebufferEXT

ONUT_FORCE_INLINE void _onutBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {
    onutGLAPI.onutBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}
#define glBlitFramebufferNV _onutBlitFramebufferNV

ONUT_FORCE_INLINE void _onutBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length) {
    onutGLAPI.onutBufferAddressRangeNV(pname, index, address, length);
}
#define glBufferAddressRangeNV _onutBufferAddressRangeNV

ONUT_FORCE_INLINE void _onutBufferDataARB(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage) {
    onutGLAPI.onutBufferDataARB(target, size, data, usage);
}
#define glBufferDataARB _onutBufferDataARB

ONUT_FORCE_INLINE void _onutBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit) {
    onutGLAPI.onutBufferPageCommitmentARB(target, offset, size, commit);
}
#define glBufferPageCommitmentARB _onutBufferPageCommitmentARB

ONUT_FORCE_INLINE void _onutBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutBufferParameteriAPPLE(target, pname, param);
}
#define glBufferParameteriAPPLE _onutBufferParameteriAPPLE

ONUT_FORCE_INLINE GLuint _onutBufferRegionEnabled(void) {
    return onutGLAPI.onutBufferRegionEnabled();
}
#define glBufferRegionEnabled _onutBufferRegionEnabled

ONUT_FORCE_INLINE void _onutBufferStorageEXT(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags) {
    onutGLAPI.onutBufferStorageEXT(target, size, data, flags);
}
#define glBufferStorageEXT _onutBufferStorageEXT

ONUT_FORCE_INLINE void _onutBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags) {
    onutGLAPI.onutBufferStorageExternalEXT(target, offset, size, clientBuffer, flags);
}
#define glBufferStorageExternalEXT _onutBufferStorageExternalEXT

ONUT_FORCE_INLINE void _onutBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutBufferStorageMemEXT(target, size, memory, offset);
}
#define glBufferStorageMemEXT _onutBufferStorageMemEXT

ONUT_FORCE_INLINE void _onutBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data) {
    onutGLAPI.onutBufferSubDataARB(target, offset, size, data);
}
#define glBufferSubDataARB _onutBufferSubDataARB

ONUT_FORCE_INLINE void _onutCallCommandListNV(GLuint list) {
    onutGLAPI.onutCallCommandListNV(list);
}
#define glCallCommandListNV _onutCallCommandListNV

ONUT_FORCE_INLINE GLenum _onutCheckFramebufferStatusEXT(GLenum target) {
    return onutGLAPI.onutCheckFramebufferStatusEXT(target);
}
#define glCheckFramebufferStatusEXT _onutCheckFramebufferStatusEXT

ONUT_FORCE_INLINE GLenum _onutCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target) {
    return onutGLAPI.onutCheckNamedFramebufferStatusEXT(framebuffer, target);
}
#define glCheckNamedFramebufferStatusEXT _onutCheckNamedFramebufferStatusEXT

ONUT_FORCE_INLINE void _onutClampColorARB(GLenum target, GLenum clamp) {
    onutGLAPI.onutClampColorARB(target, clamp);
}
#define glClampColorARB _onutClampColorARB

ONUT_FORCE_INLINE void _onutClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {
    onutGLAPI.onutClearAccumxOES(red, green, blue, alpha);
}
#define glClearAccumxOES _onutClearAccumxOES

ONUT_FORCE_INLINE void _onutClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha) {
    onutGLAPI.onutClearColorIiEXT(red, green, blue, alpha);
}
#define glClearColorIiEXT _onutClearColorIiEXT

ONUT_FORCE_INLINE void _onutClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha) {
    onutGLAPI.onutClearColorIuiEXT(red, green, blue, alpha);
}
#define glClearColorIuiEXT _onutClearColorIuiEXT

ONUT_FORCE_INLINE void _onutClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {
    onutGLAPI.onutClearColorxOES(red, green, blue, alpha);
}
#define glClearColorxOES _onutClearColorxOES

ONUT_FORCE_INLINE void _onutClearDepthdNV(GLdouble depth) {
    onutGLAPI.onutClearDepthdNV(depth);
}
#define glClearDepthdNV _onutClearDepthdNV

ONUT_FORCE_INLINE void _onutClearDepthfOES(GLclampf depth) {
    onutGLAPI.onutClearDepthfOES(depth);
}
#define glClearDepthfOES _onutClearDepthfOES

ONUT_FORCE_INLINE void _onutClearDepthxOES(GLfixed depth) {
    onutGLAPI.onutClearDepthxOES(depth);
}
#define glClearDepthxOES _onutClearDepthxOES

ONUT_FORCE_INLINE void _onutClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data) {
    onutGLAPI.onutClearNamedBufferDataEXT(buffer, internalformat, format, type, data);
}
#define glClearNamedBufferDataEXT _onutClearNamedBufferDataEXT

ONUT_FORCE_INLINE void _onutClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data) {
    onutGLAPI.onutClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data);
}
#define glClearNamedBufferSubDataEXT _onutClearNamedBufferSubDataEXT

ONUT_FORCE_INLINE void _onutClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint *values) {
    onutGLAPI.onutClearPixelLocalStorageuiEXT(offset, n, values);
}
#define glClearPixelLocalStorageuiEXT _onutClearPixelLocalStorageuiEXT

ONUT_FORCE_INLINE void _onutClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void *data) {
    onutGLAPI.onutClearTexImageEXT(texture, level, format, type, data);
}
#define glClearTexImageEXT _onutClearTexImageEXT

ONUT_FORCE_INLINE void _onutClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data) {
    onutGLAPI.onutClearTexSubImageEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data);
}
#define glClearTexSubImageEXT _onutClearTexSubImageEXT

ONUT_FORCE_INLINE void _onutClientActiveTextureARB(GLenum texture) {
    onutGLAPI.onutClientActiveTextureARB(texture);
}
#define glClientActiveTextureARB _onutClientActiveTextureARB

ONUT_FORCE_INLINE void _onutClientActiveVertexStreamATI(GLenum stream) {
    onutGLAPI.onutClientActiveVertexStreamATI(stream);
}
#define glClientActiveVertexStreamATI _onutClientActiveVertexStreamATI

ONUT_FORCE_INLINE void _onutClientAttribDefaultEXT(GLbitfield mask) {
    onutGLAPI.onutClientAttribDefaultEXT(mask);
}
#define glClientAttribDefaultEXT _onutClientAttribDefaultEXT

ONUT_FORCE_INLINE GLenum _onutClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout) {
    return onutGLAPI.onutClientWaitSyncAPPLE(sync, flags, timeout);
}
#define glClientWaitSyncAPPLE _onutClientWaitSyncAPPLE

ONUT_FORCE_INLINE void _onutClipPlanefOES(GLenum plane, const GLfloat *equation) {
    onutGLAPI.onutClipPlanefOES(plane, equation);
}
#define glClipPlanefOES _onutClipPlanefOES

ONUT_FORCE_INLINE void _onutClipPlanexOES(GLenum plane, const GLfixed *equation) {
    onutGLAPI.onutClipPlanexOES(plane, equation);
}
#define glClipPlanexOES _onutClipPlanexOES

ONUT_FORCE_INLINE void _onutColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutColor3fVertex3fSUN(r, g, b, x, y, z);
}
#define glColor3fVertex3fSUN _onutColor3fVertex3fSUN

ONUT_FORCE_INLINE void _onutColor3fVertex3fvSUN(const GLfloat *c, const GLfloat *v) {
    onutGLAPI.onutColor3fVertex3fvSUN(c, v);
}
#define glColor3fVertex3fvSUN _onutColor3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue) {
    onutGLAPI.onutColor3hNV(red, green, blue);
}
#define glColor3hNV _onutColor3hNV

ONUT_FORCE_INLINE void _onutColor3hvNV(const GLhalfNV *v) {
    onutGLAPI.onutColor3hvNV(v);
}
#define glColor3hvNV _onutColor3hvNV

ONUT_FORCE_INLINE void _onutColor3xOES(GLfixed red, GLfixed green, GLfixed blue) {
    onutGLAPI.onutColor3xOES(red, green, blue);
}
#define glColor3xOES _onutColor3xOES

ONUT_FORCE_INLINE void _onutColor3xvOES(const GLfixed *components) {
    onutGLAPI.onutColor3xvOES(components);
}
#define glColor3xvOES _onutColor3xvOES

ONUT_FORCE_INLINE void _onutColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z);
}
#define glColor4fNormal3fVertex3fSUN _onutColor4fNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutColor4fNormal3fVertex3fvSUN(const GLfloat *c, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutColor4fNormal3fVertex3fvSUN(c, n, v);
}
#define glColor4fNormal3fVertex3fvSUN _onutColor4fNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha) {
    onutGLAPI.onutColor4hNV(red, green, blue, alpha);
}
#define glColor4hNV _onutColor4hNV

ONUT_FORCE_INLINE void _onutColor4hvNV(const GLhalfNV *v) {
    onutGLAPI.onutColor4hvNV(v);
}
#define glColor4hvNV _onutColor4hvNV

ONUT_FORCE_INLINE void _onutColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y) {
    onutGLAPI.onutColor4ubVertex2fSUN(r, g, b, a, x, y);
}
#define glColor4ubVertex2fSUN _onutColor4ubVertex2fSUN

ONUT_FORCE_INLINE void _onutColor4ubVertex2fvSUN(const GLubyte *c, const GLfloat *v) {
    onutGLAPI.onutColor4ubVertex2fvSUN(c, v);
}
#define glColor4ubVertex2fvSUN _onutColor4ubVertex2fvSUN

ONUT_FORCE_INLINE void _onutColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutColor4ubVertex3fSUN(r, g, b, a, x, y, z);
}
#define glColor4ubVertex3fSUN _onutColor4ubVertex3fSUN

ONUT_FORCE_INLINE void _onutColor4ubVertex3fvSUN(const GLubyte *c, const GLfloat *v) {
    onutGLAPI.onutColor4ubVertex3fvSUN(c, v);
}
#define glColor4ubVertex3fvSUN _onutColor4ubVertex3fvSUN

ONUT_FORCE_INLINE void _onutColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {
    onutGLAPI.onutColor4xOES(red, green, blue, alpha);
}
#define glColor4xOES _onutColor4xOES

ONUT_FORCE_INLINE void _onutColor4xvOES(const GLfixed *components) {
    onutGLAPI.onutColor4xvOES(components);
}
#define glColor4xvOES _onutColor4xvOES

ONUT_FORCE_INLINE void _onutColorFormatNV(GLint size, GLenum type, GLsizei stride) {
    onutGLAPI.onutColorFormatNV(size, type, stride);
}
#define glColorFormatNV _onutColorFormatNV

ONUT_FORCE_INLINE void _onutColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod) {
    onutGLAPI.onutColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod);
}
#define glColorFragmentOp1ATI _onutColorFragmentOp1ATI

ONUT_FORCE_INLINE void _onutColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod) {
    onutGLAPI.onutColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);
}
#define glColorFragmentOp2ATI _onutColorFragmentOp2ATI

ONUT_FORCE_INLINE void _onutColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod) {
    onutGLAPI.onutColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);
}
#define glColorFragmentOp3ATI _onutColorFragmentOp3ATI

ONUT_FORCE_INLINE void _onutColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) {
    onutGLAPI.onutColorMaskIndexedEXT(index, r, g, b, a);
}
#define glColorMaskIndexedEXT _onutColorMaskIndexedEXT

ONUT_FORCE_INLINE void _onutColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) {
    onutGLAPI.onutColorMaskiEXT(index, r, g, b, a);
}
#define glColorMaskiEXT _onutColorMaskiEXT

ONUT_FORCE_INLINE void _onutColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) {
    onutGLAPI.onutColorMaskiOES(index, r, g, b, a);
}
#define glColorMaskiOES _onutColorMaskiOES

ONUT_FORCE_INLINE void _onutColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer) {
    onutGLAPI.onutColorPointerEXT(size, type, stride, count, pointer);
}
#define glColorPointerEXT _onutColorPointerEXT

ONUT_FORCE_INLINE void _onutColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutColorPointerListIBM(size, type, stride, pointer, ptrstride);
}
#define glColorPointerListIBM _onutColorPointerListIBM

ONUT_FORCE_INLINE void _onutColorPointervINTEL(GLint size, GLenum type, const void **pointer) {
    onutGLAPI.onutColorPointervINTEL(size, type, pointer);
}
#define glColorPointervINTEL _onutColorPointervINTEL

ONUT_FORCE_INLINE void _onutColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data) {
    onutGLAPI.onutColorSubTable(target, start, count, format, type, data);
}
#define glColorSubTable _onutColorSubTable

ONUT_FORCE_INLINE void _onutColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data) {
    onutGLAPI.onutColorSubTableEXT(target, start, count, format, type, data);
}
#define glColorSubTableEXT _onutColorSubTableEXT

ONUT_FORCE_INLINE void _onutColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table) {
    onutGLAPI.onutColorTable(target, internalformat, width, format, type, table);
}
#define glColorTable _onutColorTable

ONUT_FORCE_INLINE void _onutColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table) {
    onutGLAPI.onutColorTableEXT(target, internalFormat, width, format, type, table);
}
#define glColorTableEXT _onutColorTableEXT

ONUT_FORCE_INLINE void _onutColorTableParameterfv(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutColorTableParameterfv(target, pname, params);
}
#define glColorTableParameterfv _onutColorTableParameterfv

ONUT_FORCE_INLINE void _onutColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutColorTableParameterfvSGI(target, pname, params);
}
#define glColorTableParameterfvSGI _onutColorTableParameterfvSGI

ONUT_FORCE_INLINE void _onutColorTableParameteriv(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutColorTableParameteriv(target, pname, params);
}
#define glColorTableParameteriv _onutColorTableParameteriv

ONUT_FORCE_INLINE void _onutColorTableParameterivSGI(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutColorTableParameterivSGI(target, pname, params);
}
#define glColorTableParameterivSGI _onutColorTableParameterivSGI

ONUT_FORCE_INLINE void _onutColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table) {
    onutGLAPI.onutColorTableSGI(target, internalformat, width, format, type, table);
}
#define glColorTableSGI _onutColorTableSGI

ONUT_FORCE_INLINE void _onutCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) {
    onutGLAPI.onutCombinerInputNV(stage, portion, variable, input, mapping, componentUsage);
}
#define glCombinerInputNV _onutCombinerInputNV

ONUT_FORCE_INLINE void _onutCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum) {
    onutGLAPI.onutCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum);
}
#define glCombinerOutputNV _onutCombinerOutputNV

ONUT_FORCE_INLINE void _onutCombinerParameterfNV(GLenum pname, GLfloat param) {
    onutGLAPI.onutCombinerParameterfNV(pname, param);
}
#define glCombinerParameterfNV _onutCombinerParameterfNV

ONUT_FORCE_INLINE void _onutCombinerParameterfvNV(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutCombinerParameterfvNV(pname, params);
}
#define glCombinerParameterfvNV _onutCombinerParameterfvNV

ONUT_FORCE_INLINE void _onutCombinerParameteriNV(GLenum pname, GLint param) {
    onutGLAPI.onutCombinerParameteriNV(pname, param);
}
#define glCombinerParameteriNV _onutCombinerParameteriNV

ONUT_FORCE_INLINE void _onutCombinerParameterivNV(GLenum pname, const GLint *params) {
    onutGLAPI.onutCombinerParameterivNV(pname, params);
}
#define glCombinerParameterivNV _onutCombinerParameterivNV

ONUT_FORCE_INLINE void _onutCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutCombinerStageParameterfvNV(stage, pname, params);
}
#define glCombinerStageParameterfvNV _onutCombinerStageParameterfvNV

ONUT_FORCE_INLINE void _onutCommandListSegmentsNV(GLuint list, GLuint segments) {
    onutGLAPI.onutCommandListSegmentsNV(list, segments);
}
#define glCommandListSegmentsNV _onutCommandListSegmentsNV

ONUT_FORCE_INLINE void _onutCompileCommandListNV(GLuint list) {
    onutGLAPI.onutCompileCommandListNV(list);
}
#define glCompileCommandListNV _onutCompileCommandListNV

ONUT_FORCE_INLINE void _onutCompileShaderARB(GLhandleARB shaderObj) {
    onutGLAPI.onutCompileShaderARB(shaderObj);
}
#define glCompileShaderARB _onutCompileShaderARB

ONUT_FORCE_INLINE void _onutCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const *path, const GLint *length) {
    onutGLAPI.onutCompileShaderIncludeARB(shader, count, path, length);
}
#define glCompileShaderIncludeARB _onutCompileShaderIncludeARB

ONUT_FORCE_INLINE void _onutCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits);
}
#define glCompressedMultiTexImage1DEXT _onutCompressedMultiTexImage1DEXT

ONUT_FORCE_INLINE void _onutCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits);
}
#define glCompressedMultiTexImage2DEXT _onutCompressedMultiTexImage2DEXT

ONUT_FORCE_INLINE void _onutCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits);
}
#define glCompressedMultiTexImage3DEXT _onutCompressedMultiTexImage3DEXT

ONUT_FORCE_INLINE void _onutCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits);
}
#define glCompressedMultiTexSubImage1DEXT _onutCompressedMultiTexSubImage1DEXT

ONUT_FORCE_INLINE void _onutCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits);
}
#define glCompressedMultiTexSubImage2DEXT _onutCompressedMultiTexSubImage2DEXT

ONUT_FORCE_INLINE void _onutCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits);
}
#define glCompressedMultiTexSubImage3DEXT _onutCompressedMultiTexSubImage3DEXT

ONUT_FORCE_INLINE void _onutCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data);
}
#define glCompressedTexImage1DARB _onutCompressedTexImage1DARB

ONUT_FORCE_INLINE void _onutCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data);
}
#define glCompressedTexImage2DARB _onutCompressedTexImage2DARB

ONUT_FORCE_INLINE void _onutCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data);
}
#define glCompressedTexImage3DARB _onutCompressedTexImage3DARB

ONUT_FORCE_INLINE void _onutCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data);
}
#define glCompressedTexImage3DOES _onutCompressedTexImage3DOES

ONUT_FORCE_INLINE void _onutCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data);
}
#define glCompressedTexSubImage1DARB _onutCompressedTexSubImage1DARB

ONUT_FORCE_INLINE void _onutCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data);
}
#define glCompressedTexSubImage2DARB _onutCompressedTexSubImage2DARB

ONUT_FORCE_INLINE void _onutCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
}
#define glCompressedTexSubImage3DARB _onutCompressedTexSubImage3DARB

ONUT_FORCE_INLINE void _onutCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) {
    onutGLAPI.onutCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
}
#define glCompressedTexSubImage3DOES _onutCompressedTexSubImage3DOES

ONUT_FORCE_INLINE void _onutCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits);
}
#define glCompressedTextureImage1DEXT _onutCompressedTextureImage1DEXT

ONUT_FORCE_INLINE void _onutCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits);
}
#define glCompressedTextureImage2DEXT _onutCompressedTextureImage2DEXT

ONUT_FORCE_INLINE void _onutCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits);
}
#define glCompressedTextureImage3DEXT _onutCompressedTextureImage3DEXT

ONUT_FORCE_INLINE void _onutCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits);
}
#define glCompressedTextureSubImage1DEXT _onutCompressedTextureSubImage1DEXT

ONUT_FORCE_INLINE void _onutCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits);
}
#define glCompressedTextureSubImage2DEXT _onutCompressedTextureSubImage2DEXT

ONUT_FORCE_INLINE void _onutCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits) {
    onutGLAPI.onutCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits);
}
#define glCompressedTextureSubImage3DEXT _onutCompressedTextureSubImage3DEXT

ONUT_FORCE_INLINE void _onutConservativeRasterParameterfNV(GLenum pname, GLfloat value) {
    onutGLAPI.onutConservativeRasterParameterfNV(pname, value);
}
#define glConservativeRasterParameterfNV _onutConservativeRasterParameterfNV

ONUT_FORCE_INLINE void _onutConservativeRasterParameteriNV(GLenum pname, GLint param) {
    onutGLAPI.onutConservativeRasterParameteriNV(pname, param);
}
#define glConservativeRasterParameteriNV _onutConservativeRasterParameteriNV

ONUT_FORCE_INLINE void _onutConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image) {
    onutGLAPI.onutConvolutionFilter1D(target, internalformat, width, format, type, image);
}
#define glConvolutionFilter1D _onutConvolutionFilter1D

ONUT_FORCE_INLINE void _onutConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image) {
    onutGLAPI.onutConvolutionFilter1DEXT(target, internalformat, width, format, type, image);
}
#define glConvolutionFilter1DEXT _onutConvolutionFilter1DEXT

ONUT_FORCE_INLINE void _onutConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image) {
    onutGLAPI.onutConvolutionFilter2D(target, internalformat, width, height, format, type, image);
}
#define glConvolutionFilter2D _onutConvolutionFilter2D

ONUT_FORCE_INLINE void _onutConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image) {
    onutGLAPI.onutConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image);
}
#define glConvolutionFilter2DEXT _onutConvolutionFilter2DEXT

ONUT_FORCE_INLINE void _onutConvolutionParameterf(GLenum target, GLenum pname, GLfloat params) {
    onutGLAPI.onutConvolutionParameterf(target, pname, params);
}
#define glConvolutionParameterf _onutConvolutionParameterf

ONUT_FORCE_INLINE void _onutConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params) {
    onutGLAPI.onutConvolutionParameterfEXT(target, pname, params);
}
#define glConvolutionParameterfEXT _onutConvolutionParameterfEXT

ONUT_FORCE_INLINE void _onutConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutConvolutionParameterfv(target, pname, params);
}
#define glConvolutionParameterfv _onutConvolutionParameterfv

ONUT_FORCE_INLINE void _onutConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutConvolutionParameterfvEXT(target, pname, params);
}
#define glConvolutionParameterfvEXT _onutConvolutionParameterfvEXT

ONUT_FORCE_INLINE void _onutConvolutionParameteri(GLenum target, GLenum pname, GLint params) {
    onutGLAPI.onutConvolutionParameteri(target, pname, params);
}
#define glConvolutionParameteri _onutConvolutionParameteri

ONUT_FORCE_INLINE void _onutConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params) {
    onutGLAPI.onutConvolutionParameteriEXT(target, pname, params);
}
#define glConvolutionParameteriEXT _onutConvolutionParameteriEXT

ONUT_FORCE_INLINE void _onutConvolutionParameteriv(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutConvolutionParameteriv(target, pname, params);
}
#define glConvolutionParameteriv _onutConvolutionParameteriv

ONUT_FORCE_INLINE void _onutConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutConvolutionParameterivEXT(target, pname, params);
}
#define glConvolutionParameterivEXT _onutConvolutionParameterivEXT

ONUT_FORCE_INLINE void _onutConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param) {
    onutGLAPI.onutConvolutionParameterxOES(target, pname, param);
}
#define glConvolutionParameterxOES _onutConvolutionParameterxOES

ONUT_FORCE_INLINE void _onutConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed *params) {
    onutGLAPI.onutConvolutionParameterxvOES(target, pname, params);
}
#define glConvolutionParameterxvOES _onutConvolutionParameterxvOES

ONUT_FORCE_INLINE void _onutCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) {
    onutGLAPI.onutCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size);
}
#define glCopyBufferSubDataNV _onutCopyBufferSubDataNV

ONUT_FORCE_INLINE void _onutCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyColorSubTable(target, start, x, y, width);
}
#define glCopyColorSubTable _onutCopyColorSubTable

ONUT_FORCE_INLINE void _onutCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyColorSubTableEXT(target, start, x, y, width);
}
#define glCopyColorSubTableEXT _onutCopyColorSubTableEXT

ONUT_FORCE_INLINE void _onutCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyColorTable(target, internalformat, x, y, width);
}
#define glCopyColorTable _onutCopyColorTable

ONUT_FORCE_INLINE void _onutCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyColorTableSGI(target, internalformat, x, y, width);
}
#define glCopyColorTableSGI _onutCopyColorTableSGI

ONUT_FORCE_INLINE void _onutCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyConvolutionFilter1D(target, internalformat, x, y, width);
}
#define glCopyConvolutionFilter1D _onutCopyConvolutionFilter1D

ONUT_FORCE_INLINE void _onutCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyConvolutionFilter1DEXT(target, internalformat, x, y, width);
}
#define glCopyConvolutionFilter1DEXT _onutCopyConvolutionFilter1DEXT

ONUT_FORCE_INLINE void _onutCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyConvolutionFilter2D(target, internalformat, x, y, width, height);
}
#define glCopyConvolutionFilter2D _onutCopyConvolutionFilter2D

ONUT_FORCE_INLINE void _onutCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height);
}
#define glCopyConvolutionFilter2DEXT _onutCopyConvolutionFilter2DEXT

ONUT_FORCE_INLINE void _onutCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) {
    onutGLAPI.onutCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
}
#define glCopyImageSubDataEXT _onutCopyImageSubDataEXT

ONUT_FORCE_INLINE void _onutCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth) {
    onutGLAPI.onutCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
}
#define glCopyImageSubDataNV _onutCopyImageSubDataNV

ONUT_FORCE_INLINE void _onutCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) {
    onutGLAPI.onutCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
}
#define glCopyImageSubDataOES _onutCopyImageSubDataOES

ONUT_FORCE_INLINE void _onutCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) {
    onutGLAPI.onutCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border);
}
#define glCopyMultiTexImage1DEXT _onutCopyMultiTexImage1DEXT

ONUT_FORCE_INLINE void _onutCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) {
    onutGLAPI.onutCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border);
}
#define glCopyMultiTexImage2DEXT _onutCopyMultiTexImage2DEXT

ONUT_FORCE_INLINE void _onutCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width);
}
#define glCopyMultiTexSubImage1DEXT _onutCopyMultiTexSubImage1DEXT

ONUT_FORCE_INLINE void _onutCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height);
}
#define glCopyMultiTexSubImage2DEXT _onutCopyMultiTexSubImage2DEXT

ONUT_FORCE_INLINE void _onutCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height);
}
#define glCopyMultiTexSubImage3DEXT _onutCopyMultiTexSubImage3DEXT

ONUT_FORCE_INLINE void _onutCopyPathNV(GLuint resultPath, GLuint srcPath) {
    onutGLAPI.onutCopyPathNV(resultPath, srcPath);
}
#define glCopyPathNV _onutCopyPathNV

ONUT_FORCE_INLINE void _onutCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) {
    onutGLAPI.onutCopyTexImage1DEXT(target, level, internalformat, x, y, width, border);
}
#define glCopyTexImage1DEXT _onutCopyTexImage1DEXT

ONUT_FORCE_INLINE void _onutCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) {
    onutGLAPI.onutCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);
}
#define glCopyTexImage2DEXT _onutCopyTexImage2DEXT

ONUT_FORCE_INLINE void _onutCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyTexSubImage1DEXT(target, level, xoffset, x, y, width);
}
#define glCopyTexSubImage1DEXT _onutCopyTexSubImage1DEXT

ONUT_FORCE_INLINE void _onutCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);
}
#define glCopyTexSubImage2DEXT _onutCopyTexSubImage2DEXT

ONUT_FORCE_INLINE void _onutCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height);
}
#define glCopyTexSubImage3DEXT _onutCopyTexSubImage3DEXT

ONUT_FORCE_INLINE void _onutCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height);
}
#define glCopyTexSubImage3DOES _onutCopyTexSubImage3DOES

ONUT_FORCE_INLINE void _onutCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) {
    onutGLAPI.onutCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border);
}
#define glCopyTextureImage1DEXT _onutCopyTextureImage1DEXT

ONUT_FORCE_INLINE void _onutCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) {
    onutGLAPI.onutCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border);
}
#define glCopyTextureImage2DEXT _onutCopyTextureImage2DEXT

ONUT_FORCE_INLINE void _onutCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) {
    onutGLAPI.onutCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount);
}
#define glCopyTextureLevelsAPPLE _onutCopyTextureLevelsAPPLE

ONUT_FORCE_INLINE void _onutCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) {
    onutGLAPI.onutCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width);
}
#define glCopyTextureSubImage1DEXT _onutCopyTextureSubImage1DEXT

ONUT_FORCE_INLINE void _onutCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height);
}
#define glCopyTextureSubImage2DEXT _onutCopyTextureSubImage2DEXT

ONUT_FORCE_INLINE void _onutCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height);
}
#define glCopyTextureSubImage3DEXT _onutCopyTextureSubImage3DEXT

ONUT_FORCE_INLINE void _onutCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues);
}
#define glCoverFillPathInstancedNV _onutCoverFillPathInstancedNV

ONUT_FORCE_INLINE void _onutCoverFillPathNV(GLuint path, GLenum coverMode) {
    onutGLAPI.onutCoverFillPathNV(path, coverMode);
}
#define glCoverFillPathNV _onutCoverFillPathNV

ONUT_FORCE_INLINE void _onutCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues);
}
#define glCoverStrokePathInstancedNV _onutCoverStrokePathInstancedNV

ONUT_FORCE_INLINE void _onutCoverStrokePathNV(GLuint path, GLenum coverMode) {
    onutGLAPI.onutCoverStrokePathNV(path, coverMode);
}
#define glCoverStrokePathNV _onutCoverStrokePathNV

ONUT_FORCE_INLINE void _onutCoverageMaskNV(GLboolean mask) {
    onutGLAPI.onutCoverageMaskNV(mask);
}
#define glCoverageMaskNV _onutCoverageMaskNV

ONUT_FORCE_INLINE void _onutCoverageModulationNV(GLenum components) {
    onutGLAPI.onutCoverageModulationNV(components);
}
#define glCoverageModulationNV _onutCoverageModulationNV

ONUT_FORCE_INLINE void _onutCoverageModulationTableNV(GLsizei n, const GLfloat *v) {
    onutGLAPI.onutCoverageModulationTableNV(n, v);
}
#define glCoverageModulationTableNV _onutCoverageModulationTableNV

ONUT_FORCE_INLINE void _onutCoverageOperationNV(GLenum operation) {
    onutGLAPI.onutCoverageOperationNV(operation);
}
#define glCoverageOperationNV _onutCoverageOperationNV

ONUT_FORCE_INLINE void _onutCreateCommandListsNV(GLsizei n, GLuint *lists) {
    onutGLAPI.onutCreateCommandListsNV(n, lists);
}
#define glCreateCommandListsNV _onutCreateCommandListsNV

ONUT_FORCE_INLINE void _onutCreateMemoryObjectsEXT(GLsizei n, GLuint *memoryObjects) {
    onutGLAPI.onutCreateMemoryObjectsEXT(n, memoryObjects);
}
#define glCreateMemoryObjectsEXT _onutCreateMemoryObjectsEXT

ONUT_FORCE_INLINE void _onutCreatePerfQueryINTEL(GLuint queryId, GLuint *queryHandle) {
    onutGLAPI.onutCreatePerfQueryINTEL(queryId, queryHandle);
}
#define glCreatePerfQueryINTEL _onutCreatePerfQueryINTEL

ONUT_FORCE_INLINE GLhandleARB _onutCreateProgramObjectARB(void) {
    return onutGLAPI.onutCreateProgramObjectARB();
}
#define glCreateProgramObjectARB _onutCreateProgramObjectARB

ONUT_FORCE_INLINE GLhandleARB _onutCreateShaderObjectARB(GLenum shaderType) {
    return onutGLAPI.onutCreateShaderObjectARB(shaderType);
}
#define glCreateShaderObjectARB _onutCreateShaderObjectARB

ONUT_FORCE_INLINE GLuint _onutCreateShaderProgramEXT(GLenum type, const GLchar *string) {
    return onutGLAPI.onutCreateShaderProgramEXT(type, string);
}
#define glCreateShaderProgramEXT _onutCreateShaderProgramEXT

ONUT_FORCE_INLINE GLuint _onutCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar **strings) {
    return onutGLAPI.onutCreateShaderProgramvEXT(type, count, strings);
}
#define glCreateShaderProgramvEXT _onutCreateShaderProgramvEXT

ONUT_FORCE_INLINE void _onutCreateStatesNV(GLsizei n, GLuint *states) {
    onutGLAPI.onutCreateStatesNV(n, states);
}
#define glCreateStatesNV _onutCreateStatesNV

ONUT_FORCE_INLINE GLsync _onutCreateSyncFromCLeventARB(struct _cl_context *context, struct _cl_event *event, GLbitfield flags) {
    return onutGLAPI.onutCreateSyncFromCLeventARB(context, event, flags);
}
#define glCreateSyncFromCLeventARB _onutCreateSyncFromCLeventARB

ONUT_FORCE_INLINE void _onutCullParameterdvEXT(GLenum pname, GLdouble *params) {
    onutGLAPI.onutCullParameterdvEXT(pname, params);
}
#define glCullParameterdvEXT _onutCullParameterdvEXT

ONUT_FORCE_INLINE void _onutCullParameterfvEXT(GLenum pname, GLfloat *params) {
    onutGLAPI.onutCullParameterfvEXT(pname, params);
}
#define glCullParameterfvEXT _onutCullParameterfvEXT

ONUT_FORCE_INLINE void _onutCurrentPaletteMatrixARB(GLint index) {
    onutGLAPI.onutCurrentPaletteMatrixARB(index);
}
#define glCurrentPaletteMatrixARB _onutCurrentPaletteMatrixARB

ONUT_FORCE_INLINE void _onutDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void *userParam) {
    onutGLAPI.onutDebugMessageCallbackAMD(callback, userParam);
}
#define glDebugMessageCallbackAMD _onutDebugMessageCallbackAMD

ONUT_FORCE_INLINE void _onutDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void *userParam) {
    onutGLAPI.onutDebugMessageCallbackARB(callback, userParam);
}
#define glDebugMessageCallbackARB _onutDebugMessageCallbackARB

ONUT_FORCE_INLINE void _onutDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void *userParam) {
    onutGLAPI.onutDebugMessageCallbackKHR(callback, userParam);
}
#define glDebugMessageCallbackKHR _onutDebugMessageCallbackKHR

ONUT_FORCE_INLINE void _onutDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) {
    onutGLAPI.onutDebugMessageControlARB(source, type, severity, count, ids, enabled);
}
#define glDebugMessageControlARB _onutDebugMessageControlARB

ONUT_FORCE_INLINE void _onutDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) {
    onutGLAPI.onutDebugMessageControlKHR(source, type, severity, count, ids, enabled);
}
#define glDebugMessageControlKHR _onutDebugMessageControlKHR

ONUT_FORCE_INLINE void _onutDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled) {
    onutGLAPI.onutDebugMessageEnableAMD(category, severity, count, ids, enabled);
}
#define glDebugMessageEnableAMD _onutDebugMessageEnableAMD

ONUT_FORCE_INLINE void _onutDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf) {
    onutGLAPI.onutDebugMessageInsertAMD(category, severity, id, length, buf);
}
#define glDebugMessageInsertAMD _onutDebugMessageInsertAMD

ONUT_FORCE_INLINE void _onutDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf) {
    onutGLAPI.onutDebugMessageInsertARB(source, type, id, severity, length, buf);
}
#define glDebugMessageInsertARB _onutDebugMessageInsertARB

ONUT_FORCE_INLINE void _onutDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf) {
    onutGLAPI.onutDebugMessageInsertKHR(source, type, id, severity, length, buf);
}
#define glDebugMessageInsertKHR _onutDebugMessageInsertKHR

ONUT_FORCE_INLINE void _onutDeformSGIX(GLbitfield mask) {
    onutGLAPI.onutDeformSGIX(mask);
}
#define glDeformSGIX _onutDeformSGIX

ONUT_FORCE_INLINE void _onutDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points) {
    onutGLAPI.onutDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);
}
#define glDeformationMap3dSGIX _onutDeformationMap3dSGIX

ONUT_FORCE_INLINE void _onutDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points) {
    onutGLAPI.onutDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);
}
#define glDeformationMap3fSGIX _onutDeformationMap3fSGIX

ONUT_FORCE_INLINE void _onutDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range) {
    onutGLAPI.onutDeleteAsyncMarkersSGIX(marker, range);
}
#define glDeleteAsyncMarkersSGIX _onutDeleteAsyncMarkersSGIX

ONUT_FORCE_INLINE void _onutDeleteBufferRegion(GLenum region) {
    onutGLAPI.onutDeleteBufferRegion(region);
}
#define glDeleteBufferRegion _onutDeleteBufferRegion

ONUT_FORCE_INLINE void _onutDeleteBuffersARB(GLsizei n, const GLuint *buffers) {
    onutGLAPI.onutDeleteBuffersARB(n, buffers);
}
#define glDeleteBuffersARB _onutDeleteBuffersARB

ONUT_FORCE_INLINE void _onutDeleteCommandListsNV(GLsizei n, const GLuint *lists) {
    onutGLAPI.onutDeleteCommandListsNV(n, lists);
}
#define glDeleteCommandListsNV _onutDeleteCommandListsNV

ONUT_FORCE_INLINE void _onutDeleteFencesAPPLE(GLsizei n, const GLuint *fences) {
    onutGLAPI.onutDeleteFencesAPPLE(n, fences);
}
#define glDeleteFencesAPPLE _onutDeleteFencesAPPLE

ONUT_FORCE_INLINE void _onutDeleteFencesNV(GLsizei n, const GLuint *fences) {
    onutGLAPI.onutDeleteFencesNV(n, fences);
}
#define glDeleteFencesNV _onutDeleteFencesNV

ONUT_FORCE_INLINE void _onutDeleteFragmentShaderATI(GLuint id) {
    onutGLAPI.onutDeleteFragmentShaderATI(id);
}
#define glDeleteFragmentShaderATI _onutDeleteFragmentShaderATI

ONUT_FORCE_INLINE void _onutDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers) {
    onutGLAPI.onutDeleteFramebuffersEXT(n, framebuffers);
}
#define glDeleteFramebuffersEXT _onutDeleteFramebuffersEXT

ONUT_FORCE_INLINE void _onutDeleteMemoryObjectsEXT(GLsizei n, const GLuint *memoryObjects) {
    onutGLAPI.onutDeleteMemoryObjectsEXT(n, memoryObjects);
}
#define glDeleteMemoryObjectsEXT _onutDeleteMemoryObjectsEXT

ONUT_FORCE_INLINE void _onutDeleteNamedStringARB(GLint namelen, const GLchar *name) {
    onutGLAPI.onutDeleteNamedStringARB(namelen, name);
}
#define glDeleteNamedStringARB _onutDeleteNamedStringARB

ONUT_FORCE_INLINE void _onutDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint *names) {
    onutGLAPI.onutDeleteNamesAMD(identifier, num, names);
}
#define glDeleteNamesAMD _onutDeleteNamesAMD

ONUT_FORCE_INLINE void _onutDeleteObjectARB(GLhandleARB obj) {
    onutGLAPI.onutDeleteObjectARB(obj);
}
#define glDeleteObjectARB _onutDeleteObjectARB

ONUT_FORCE_INLINE void _onutDeleteOcclusionQueriesNV(GLsizei n, const GLuint *ids) {
    onutGLAPI.onutDeleteOcclusionQueriesNV(n, ids);
}
#define glDeleteOcclusionQueriesNV _onutDeleteOcclusionQueriesNV

ONUT_FORCE_INLINE void _onutDeletePathsNV(GLuint path, GLsizei range) {
    onutGLAPI.onutDeletePathsNV(path, range);
}
#define glDeletePathsNV _onutDeletePathsNV

ONUT_FORCE_INLINE void _onutDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors) {
    onutGLAPI.onutDeletePerfMonitorsAMD(n, monitors);
}
#define glDeletePerfMonitorsAMD _onutDeletePerfMonitorsAMD

ONUT_FORCE_INLINE void _onutDeletePerfQueryINTEL(GLuint queryHandle) {
    onutGLAPI.onutDeletePerfQueryINTEL(queryHandle);
}
#define glDeletePerfQueryINTEL _onutDeletePerfQueryINTEL

ONUT_FORCE_INLINE void _onutDeleteProgramPipelinesEXT(GLsizei n, const GLuint *pipelines) {
    onutGLAPI.onutDeleteProgramPipelinesEXT(n, pipelines);
}
#define glDeleteProgramPipelinesEXT _onutDeleteProgramPipelinesEXT

ONUT_FORCE_INLINE void _onutDeleteProgramsARB(GLsizei n, const GLuint *programs) {
    onutGLAPI.onutDeleteProgramsARB(n, programs);
}
#define glDeleteProgramsARB _onutDeleteProgramsARB

ONUT_FORCE_INLINE void _onutDeleteProgramsNV(GLsizei n, const GLuint *programs) {
    onutGLAPI.onutDeleteProgramsNV(n, programs);
}
#define glDeleteProgramsNV _onutDeleteProgramsNV

ONUT_FORCE_INLINE void _onutDeleteQueriesARB(GLsizei n, const GLuint *ids) {
    onutGLAPI.onutDeleteQueriesARB(n, ids);
}
#define glDeleteQueriesARB _onutDeleteQueriesARB

ONUT_FORCE_INLINE void _onutDeleteQueriesEXT(GLsizei n, const GLuint *ids) {
    onutGLAPI.onutDeleteQueriesEXT(n, ids);
}
#define glDeleteQueriesEXT _onutDeleteQueriesEXT

ONUT_FORCE_INLINE void _onutDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers) {
    onutGLAPI.onutDeleteRenderbuffersEXT(n, renderbuffers);
}
#define glDeleteRenderbuffersEXT _onutDeleteRenderbuffersEXT

ONUT_FORCE_INLINE void _onutDeleteSemaphoresEXT(GLsizei n, const GLuint *semaphores) {
    onutGLAPI.onutDeleteSemaphoresEXT(n, semaphores);
}
#define glDeleteSemaphoresEXT _onutDeleteSemaphoresEXT

ONUT_FORCE_INLINE void _onutDeleteStatesNV(GLsizei n, const GLuint *states) {
    onutGLAPI.onutDeleteStatesNV(n, states);
}
#define glDeleteStatesNV _onutDeleteStatesNV

ONUT_FORCE_INLINE void _onutDeleteSyncAPPLE(GLsync sync) {
    onutGLAPI.onutDeleteSyncAPPLE(sync);
}
#define glDeleteSyncAPPLE _onutDeleteSyncAPPLE

ONUT_FORCE_INLINE void _onutDeleteTexturesEXT(GLsizei n, const GLuint *textures) {
    onutGLAPI.onutDeleteTexturesEXT(n, textures);
}
#define glDeleteTexturesEXT _onutDeleteTexturesEXT

ONUT_FORCE_INLINE void _onutDeleteTransformFeedbacksNV(GLsizei n, const GLuint *ids) {
    onutGLAPI.onutDeleteTransformFeedbacksNV(n, ids);
}
#define glDeleteTransformFeedbacksNV _onutDeleteTransformFeedbacksNV

ONUT_FORCE_INLINE void _onutDeleteVertexArraysAPPLE(GLsizei n, const GLuint *arrays) {
    onutGLAPI.onutDeleteVertexArraysAPPLE(n, arrays);
}
#define glDeleteVertexArraysAPPLE _onutDeleteVertexArraysAPPLE

ONUT_FORCE_INLINE void _onutDeleteVertexArraysOES(GLsizei n, const GLuint *arrays) {
    onutGLAPI.onutDeleteVertexArraysOES(n, arrays);
}
#define glDeleteVertexArraysOES _onutDeleteVertexArraysOES

ONUT_FORCE_INLINE void _onutDeleteVertexShaderEXT(GLuint id) {
    onutGLAPI.onutDeleteVertexShaderEXT(id);
}
#define glDeleteVertexShaderEXT _onutDeleteVertexShaderEXT

ONUT_FORCE_INLINE void _onutDepthBoundsEXT(GLclampd zmin, GLclampd zmax) {
    onutGLAPI.onutDepthBoundsEXT(zmin, zmax);
}
#define glDepthBoundsEXT _onutDepthBoundsEXT

ONUT_FORCE_INLINE void _onutDepthBoundsdNV(GLdouble zmin, GLdouble zmax) {
    onutGLAPI.onutDepthBoundsdNV(zmin, zmax);
}
#define glDepthBoundsdNV _onutDepthBoundsdNV

ONUT_FORCE_INLINE void _onutDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutDepthRangeArrayfvNV(first, count, v);
}
#define glDepthRangeArrayfvNV _onutDepthRangeArrayfvNV

ONUT_FORCE_INLINE void _onutDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutDepthRangeArrayfvOES(first, count, v);
}
#define glDepthRangeArrayfvOES _onutDepthRangeArrayfvOES

ONUT_FORCE_INLINE void _onutDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f) {
    onutGLAPI.onutDepthRangeIndexedfNV(index, n, f);
}
#define glDepthRangeIndexedfNV _onutDepthRangeIndexedfNV

ONUT_FORCE_INLINE void _onutDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f) {
    onutGLAPI.onutDepthRangeIndexedfOES(index, n, f);
}
#define glDepthRangeIndexedfOES _onutDepthRangeIndexedfOES

ONUT_FORCE_INLINE void _onutDepthRangedNV(GLdouble zNear, GLdouble zFar) {
    onutGLAPI.onutDepthRangedNV(zNear, zFar);
}
#define glDepthRangedNV _onutDepthRangedNV

ONUT_FORCE_INLINE void _onutDepthRangefOES(GLclampf n, GLclampf f) {
    onutGLAPI.onutDepthRangefOES(n, f);
}
#define glDepthRangefOES _onutDepthRangefOES

ONUT_FORCE_INLINE void _onutDepthRangexOES(GLfixed n, GLfixed f) {
    onutGLAPI.onutDepthRangexOES(n, f);
}
#define glDepthRangexOES _onutDepthRangexOES

ONUT_FORCE_INLINE void _onutDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj) {
    onutGLAPI.onutDetachObjectARB(containerObj, attachedObj);
}
#define glDetachObjectARB _onutDetachObjectARB

ONUT_FORCE_INLINE void _onutDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points) {
    onutGLAPI.onutDetailTexFuncSGIS(target, n, points);
}
#define glDetailTexFuncSGIS _onutDetailTexFuncSGIS

ONUT_FORCE_INLINE void _onutDisableClientStateIndexedEXT(GLenum array, GLuint index) {
    onutGLAPI.onutDisableClientStateIndexedEXT(array, index);
}
#define glDisableClientStateIndexedEXT _onutDisableClientStateIndexedEXT

ONUT_FORCE_INLINE void _onutDisableClientStateiEXT(GLenum array, GLuint index) {
    onutGLAPI.onutDisableClientStateiEXT(array, index);
}
#define glDisableClientStateiEXT _onutDisableClientStateiEXT

ONUT_FORCE_INLINE void _onutDisableDriverControlQCOM(GLuint driverControl) {
    onutGLAPI.onutDisableDriverControlQCOM(driverControl);
}
#define glDisableDriverControlQCOM _onutDisableDriverControlQCOM

ONUT_FORCE_INLINE void _onutDisableIndexedEXT(GLenum target, GLuint index) {
    onutGLAPI.onutDisableIndexedEXT(target, index);
}
#define glDisableIndexedEXT _onutDisableIndexedEXT

ONUT_FORCE_INLINE void _onutDisableVariantClientStateEXT(GLuint id) {
    onutGLAPI.onutDisableVariantClientStateEXT(id);
}
#define glDisableVariantClientStateEXT _onutDisableVariantClientStateEXT

ONUT_FORCE_INLINE void _onutDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index) {
    onutGLAPI.onutDisableVertexArrayAttribEXT(vaobj, index);
}
#define glDisableVertexArrayAttribEXT _onutDisableVertexArrayAttribEXT

ONUT_FORCE_INLINE void _onutDisableVertexArrayEXT(GLuint vaobj, GLenum array) {
    onutGLAPI.onutDisableVertexArrayEXT(vaobj, array);
}
#define glDisableVertexArrayEXT _onutDisableVertexArrayEXT

ONUT_FORCE_INLINE void _onutDisableVertexAttribAPPLE(GLuint index, GLenum pname) {
    onutGLAPI.onutDisableVertexAttribAPPLE(index, pname);
}
#define glDisableVertexAttribAPPLE _onutDisableVertexAttribAPPLE

ONUT_FORCE_INLINE void _onutDisableVertexAttribArrayARB(GLuint index) {
    onutGLAPI.onutDisableVertexAttribArrayARB(index);
}
#define glDisableVertexAttribArrayARB _onutDisableVertexAttribArrayARB

ONUT_FORCE_INLINE void _onutDisableiEXT(GLenum target, GLuint index) {
    onutGLAPI.onutDisableiEXT(target, index);
}
#define glDisableiEXT _onutDisableiEXT

ONUT_FORCE_INLINE void _onutDisableiNV(GLenum target, GLuint index) {
    onutGLAPI.onutDisableiNV(target, index);
}
#define glDisableiNV _onutDisableiNV

ONUT_FORCE_INLINE void _onutDisableiOES(GLenum target, GLuint index) {
    onutGLAPI.onutDisableiOES(target, index);
}
#define glDisableiOES _onutDisableiOES

ONUT_FORCE_INLINE void _onutDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments) {
    onutGLAPI.onutDiscardFramebufferEXT(target, numAttachments, attachments);
}
#define glDiscardFramebufferEXT _onutDiscardFramebufferEXT

ONUT_FORCE_INLINE void _onutDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z) {
    onutGLAPI.onutDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z);
}
#define glDispatchComputeGroupSizeARB _onutDispatchComputeGroupSizeARB

ONUT_FORCE_INLINE void _onutDrawArraysEXT(GLenum mode, GLint first, GLsizei count) {
    onutGLAPI.onutDrawArraysEXT(mode, first, count);
}
#define glDrawArraysEXT _onutDrawArraysEXT

ONUT_FORCE_INLINE void _onutDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount) {
    onutGLAPI.onutDrawArraysInstancedANGLE(mode, first, count, primcount);
}
#define glDrawArraysInstancedANGLE _onutDrawArraysInstancedANGLE

ONUT_FORCE_INLINE void _onutDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount) {
    onutGLAPI.onutDrawArraysInstancedARB(mode, first, count, primcount);
}
#define glDrawArraysInstancedARB _onutDrawArraysInstancedARB

ONUT_FORCE_INLINE void _onutDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance) {
    onutGLAPI.onutDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance);
}
#define glDrawArraysInstancedBaseInstanceEXT _onutDrawArraysInstancedBaseInstanceEXT

ONUT_FORCE_INLINE void _onutDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount) {
    onutGLAPI.onutDrawArraysInstancedEXT(mode, start, count, primcount);
}
#define glDrawArraysInstancedEXT _onutDrawArraysInstancedEXT

ONUT_FORCE_INLINE void _onutDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount) {
    onutGLAPI.onutDrawArraysInstancedNV(mode, first, count, primcount);
}
#define glDrawArraysInstancedNV _onutDrawArraysInstancedNV

ONUT_FORCE_INLINE void _onutDrawBufferRegion(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest) {
    onutGLAPI.onutDrawBufferRegion(region, x, y, width, height, xDest, yDest);
}
#define glDrawBufferRegion _onutDrawBufferRegion

ONUT_FORCE_INLINE void _onutDrawBuffersARB(GLsizei n, const GLenum *bufs) {
    onutGLAPI.onutDrawBuffersARB(n, bufs);
}
#define glDrawBuffersARB _onutDrawBuffersARB

ONUT_FORCE_INLINE void _onutDrawBuffersATI(GLsizei n, const GLenum *bufs) {
    onutGLAPI.onutDrawBuffersATI(n, bufs);
}
#define glDrawBuffersATI _onutDrawBuffersATI

ONUT_FORCE_INLINE void _onutDrawBuffersEXT(GLsizei n, const GLenum *bufs) {
    onutGLAPI.onutDrawBuffersEXT(n, bufs);
}
#define glDrawBuffersEXT _onutDrawBuffersEXT

ONUT_FORCE_INLINE void _onutDrawBuffersIndexedEXT(GLint n, const GLenum *location, const GLint *indices) {
    onutGLAPI.onutDrawBuffersIndexedEXT(n, location, indices);
}
#define glDrawBuffersIndexedEXT _onutDrawBuffersIndexedEXT

ONUT_FORCE_INLINE void _onutDrawBuffersNV(GLsizei n, const GLenum *bufs) {
    onutGLAPI.onutDrawBuffersNV(n, bufs);
}
#define glDrawBuffersNV _onutDrawBuffersNV

ONUT_FORCE_INLINE void _onutDrawCommandsAddressNV(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count) {
    onutGLAPI.onutDrawCommandsAddressNV(primitiveMode, indirects, sizes, count);
}
#define glDrawCommandsAddressNV _onutDrawCommandsAddressNV

ONUT_FORCE_INLINE void _onutDrawCommandsNV(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count) {
    onutGLAPI.onutDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count);
}
#define glDrawCommandsNV _onutDrawCommandsNV

ONUT_FORCE_INLINE void _onutDrawCommandsStatesAddressNV(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count) {
    onutGLAPI.onutDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count);
}
#define glDrawCommandsStatesAddressNV _onutDrawCommandsStatesAddressNV

ONUT_FORCE_INLINE void _onutDrawCommandsStatesNV(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count) {
    onutGLAPI.onutDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count);
}
#define glDrawCommandsStatesNV _onutDrawCommandsStatesNV

ONUT_FORCE_INLINE void _onutDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count) {
    onutGLAPI.onutDrawElementArrayAPPLE(mode, first, count);
}
#define glDrawElementArrayAPPLE _onutDrawElementArrayAPPLE

ONUT_FORCE_INLINE void _onutDrawElementArrayATI(GLenum mode, GLsizei count) {
    onutGLAPI.onutDrawElementArrayATI(mode, count);
}
#define glDrawElementArrayATI _onutDrawElementArrayATI

ONUT_FORCE_INLINE void _onutDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex) {
    onutGLAPI.onutDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex);
}
#define glDrawElementsBaseVertexEXT _onutDrawElementsBaseVertexEXT

ONUT_FORCE_INLINE void _onutDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex) {
    onutGLAPI.onutDrawElementsBaseVertexOES(mode, count, type, indices, basevertex);
}
#define glDrawElementsBaseVertexOES _onutDrawElementsBaseVertexOES

ONUT_FORCE_INLINE void _onutDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) {
    onutGLAPI.onutDrawElementsInstancedANGLE(mode, count, type, indices, primcount);
}
#define glDrawElementsInstancedANGLE _onutDrawElementsInstancedANGLE

ONUT_FORCE_INLINE void _onutDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) {
    onutGLAPI.onutDrawElementsInstancedARB(mode, count, type, indices, primcount);
}
#define glDrawElementsInstancedARB _onutDrawElementsInstancedARB

ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance) {
    onutGLAPI.onutDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance);
}
#define glDrawElementsInstancedBaseInstanceEXT _onutDrawElementsInstancedBaseInstanceEXT

ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance) {
    onutGLAPI.onutDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance);
}
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT _onutDrawElementsInstancedBaseVertexBaseInstanceEXT

ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex) {
    onutGLAPI.onutDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex);
}
#define glDrawElementsInstancedBaseVertexEXT _onutDrawElementsInstancedBaseVertexEXT

ONUT_FORCE_INLINE void _onutDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex) {
    onutGLAPI.onutDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex);
}
#define glDrawElementsInstancedBaseVertexOES _onutDrawElementsInstancedBaseVertexOES

ONUT_FORCE_INLINE void _onutDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) {
    onutGLAPI.onutDrawElementsInstancedEXT(mode, count, type, indices, primcount);
}
#define glDrawElementsInstancedEXT _onutDrawElementsInstancedEXT

ONUT_FORCE_INLINE void _onutDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount) {
    onutGLAPI.onutDrawElementsInstancedNV(mode, count, type, indices, primcount);
}
#define glDrawElementsInstancedNV _onutDrawElementsInstancedNV

ONUT_FORCE_INLINE void _onutDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width) {
    onutGLAPI.onutDrawMeshArraysSUN(mode, first, count, width);
}
#define glDrawMeshArraysSUN _onutDrawMeshArraysSUN

ONUT_FORCE_INLINE void _onutDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count) {
    onutGLAPI.onutDrawRangeElementArrayAPPLE(mode, start, end, first, count);
}
#define glDrawRangeElementArrayAPPLE _onutDrawRangeElementArrayAPPLE

ONUT_FORCE_INLINE void _onutDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count) {
    onutGLAPI.onutDrawRangeElementArrayATI(mode, start, end, count);
}
#define glDrawRangeElementArrayATI _onutDrawRangeElementArrayATI

ONUT_FORCE_INLINE void _onutDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex) {
    onutGLAPI.onutDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex);
}
#define glDrawRangeElementsBaseVertexEXT _onutDrawRangeElementsBaseVertexEXT

ONUT_FORCE_INLINE void _onutDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex) {
    onutGLAPI.onutDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex);
}
#define glDrawRangeElementsBaseVertexOES _onutDrawRangeElementsBaseVertexOES

ONUT_FORCE_INLINE void _onutDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices) {
    onutGLAPI.onutDrawRangeElementsEXT(mode, start, end, count, type, indices);
}
#define glDrawRangeElementsEXT _onutDrawRangeElementsEXT

ONUT_FORCE_INLINE void _onutDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1) {
    onutGLAPI.onutDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1);
}
#define glDrawTextureNV _onutDrawTextureNV

ONUT_FORCE_INLINE void _onutDrawTransformFeedbackEXT(GLenum mode, GLuint id) {
    onutGLAPI.onutDrawTransformFeedbackEXT(mode, id);
}
#define glDrawTransformFeedbackEXT _onutDrawTransformFeedbackEXT

ONUT_FORCE_INLINE void _onutDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount) {
    onutGLAPI.onutDrawTransformFeedbackInstancedEXT(mode, id, instancecount);
}
#define glDrawTransformFeedbackInstancedEXT _onutDrawTransformFeedbackInstancedEXT

ONUT_FORCE_INLINE void _onutDrawTransformFeedbackNV(GLenum mode, GLuint id) {
    onutGLAPI.onutDrawTransformFeedbackNV(mode, id);
}
#define glDrawTransformFeedbackNV _onutDrawTransformFeedbackNV

ONUT_FORCE_INLINE void _onutDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1) {
    onutGLAPI.onutDrawVkImageNV(vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1);
}
#define glDrawVkImageNV _onutDrawVkImageNV

ONUT_FORCE_INLINE void _onutEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image) {
    onutGLAPI.onutEGLImageTargetRenderbufferStorageOES(target, image);
}
#define glEGLImageTargetRenderbufferStorageOES _onutEGLImageTargetRenderbufferStorageOES

ONUT_FORCE_INLINE void _onutEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image) {
    onutGLAPI.onutEGLImageTargetTexture2DOES(target, image);
}
#define glEGLImageTargetTexture2DOES _onutEGLImageTargetTexture2DOES

ONUT_FORCE_INLINE void _onutEdgeFlagFormatNV(GLsizei stride) {
    onutGLAPI.onutEdgeFlagFormatNV(stride);
}
#define glEdgeFlagFormatNV _onutEdgeFlagFormatNV

ONUT_FORCE_INLINE void _onutEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean *pointer) {
    onutGLAPI.onutEdgeFlagPointerEXT(stride, count, pointer);
}
#define glEdgeFlagPointerEXT _onutEdgeFlagPointerEXT

ONUT_FORCE_INLINE void _onutEdgeFlagPointerListIBM(GLint stride, const GLboolean **pointer, GLint ptrstride) {
    onutGLAPI.onutEdgeFlagPointerListIBM(stride, pointer, ptrstride);
}
#define glEdgeFlagPointerListIBM _onutEdgeFlagPointerListIBM

ONUT_FORCE_INLINE void _onutElementPointerAPPLE(GLenum type, const void *pointer) {
    onutGLAPI.onutElementPointerAPPLE(type, pointer);
}
#define glElementPointerAPPLE _onutElementPointerAPPLE

ONUT_FORCE_INLINE void _onutElementPointerATI(GLenum type, const void *pointer) {
    onutGLAPI.onutElementPointerATI(type, pointer);
}
#define glElementPointerATI _onutElementPointerATI

ONUT_FORCE_INLINE void _onutEnableClientStateIndexedEXT(GLenum array, GLuint index) {
    onutGLAPI.onutEnableClientStateIndexedEXT(array, index);
}
#define glEnableClientStateIndexedEXT _onutEnableClientStateIndexedEXT

ONUT_FORCE_INLINE void _onutEnableClientStateiEXT(GLenum array, GLuint index) {
    onutGLAPI.onutEnableClientStateiEXT(array, index);
}
#define glEnableClientStateiEXT _onutEnableClientStateiEXT

ONUT_FORCE_INLINE void _onutEnableDriverControlQCOM(GLuint driverControl) {
    onutGLAPI.onutEnableDriverControlQCOM(driverControl);
}
#define glEnableDriverControlQCOM _onutEnableDriverControlQCOM

ONUT_FORCE_INLINE void _onutEnableIndexedEXT(GLenum target, GLuint index) {
    onutGLAPI.onutEnableIndexedEXT(target, index);
}
#define glEnableIndexedEXT _onutEnableIndexedEXT

ONUT_FORCE_INLINE void _onutEnableVariantClientStateEXT(GLuint id) {
    onutGLAPI.onutEnableVariantClientStateEXT(id);
}
#define glEnableVariantClientStateEXT _onutEnableVariantClientStateEXT

ONUT_FORCE_INLINE void _onutEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index) {
    onutGLAPI.onutEnableVertexArrayAttribEXT(vaobj, index);
}
#define glEnableVertexArrayAttribEXT _onutEnableVertexArrayAttribEXT

ONUT_FORCE_INLINE void _onutEnableVertexArrayEXT(GLuint vaobj, GLenum array) {
    onutGLAPI.onutEnableVertexArrayEXT(vaobj, array);
}
#define glEnableVertexArrayEXT _onutEnableVertexArrayEXT

ONUT_FORCE_INLINE void _onutEnableVertexAttribAPPLE(GLuint index, GLenum pname) {
    onutGLAPI.onutEnableVertexAttribAPPLE(index, pname);
}
#define glEnableVertexAttribAPPLE _onutEnableVertexAttribAPPLE

ONUT_FORCE_INLINE void _onutEnableVertexAttribArrayARB(GLuint index) {
    onutGLAPI.onutEnableVertexAttribArrayARB(index);
}
#define glEnableVertexAttribArrayARB _onutEnableVertexAttribArrayARB

ONUT_FORCE_INLINE void _onutEnableiEXT(GLenum target, GLuint index) {
    onutGLAPI.onutEnableiEXT(target, index);
}
#define glEnableiEXT _onutEnableiEXT

ONUT_FORCE_INLINE void _onutEnableiNV(GLenum target, GLuint index) {
    onutGLAPI.onutEnableiNV(target, index);
}
#define glEnableiNV _onutEnableiNV

ONUT_FORCE_INLINE void _onutEnableiOES(GLenum target, GLuint index) {
    onutGLAPI.onutEnableiOES(target, index);
}
#define glEnableiOES _onutEnableiOES

ONUT_FORCE_INLINE void _onutEndConditionalRenderNV(void) {
    onutGLAPI.onutEndConditionalRenderNV();
}
#define glEndConditionalRenderNV _onutEndConditionalRenderNV

ONUT_FORCE_INLINE void _onutEndConditionalRenderNVX(void) {
    onutGLAPI.onutEndConditionalRenderNVX();
}
#define glEndConditionalRenderNVX _onutEndConditionalRenderNVX

ONUT_FORCE_INLINE void _onutEndFragmentShaderATI(void) {
    onutGLAPI.onutEndFragmentShaderATI();
}
#define glEndFragmentShaderATI _onutEndFragmentShaderATI

ONUT_FORCE_INLINE void _onutEndOcclusionQueryNV(void) {
    onutGLAPI.onutEndOcclusionQueryNV();
}
#define glEndOcclusionQueryNV _onutEndOcclusionQueryNV

ONUT_FORCE_INLINE void _onutEndPerfMonitorAMD(GLuint monitor) {
    onutGLAPI.onutEndPerfMonitorAMD(monitor);
}
#define glEndPerfMonitorAMD _onutEndPerfMonitorAMD

ONUT_FORCE_INLINE void _onutEndPerfQueryINTEL(GLuint queryHandle) {
    onutGLAPI.onutEndPerfQueryINTEL(queryHandle);
}
#define glEndPerfQueryINTEL _onutEndPerfQueryINTEL

ONUT_FORCE_INLINE void _onutEndQueryARB(GLenum target) {
    onutGLAPI.onutEndQueryARB(target);
}
#define glEndQueryARB _onutEndQueryARB

ONUT_FORCE_INLINE void _onutEndQueryEXT(GLenum target) {
    onutGLAPI.onutEndQueryEXT(target);
}
#define glEndQueryEXT _onutEndQueryEXT

ONUT_FORCE_INLINE void _onutEndTilingQCOM(GLbitfield preserveMask) {
    onutGLAPI.onutEndTilingQCOM(preserveMask);
}
#define glEndTilingQCOM _onutEndTilingQCOM

ONUT_FORCE_INLINE void _onutEndTransformFeedbackEXT(void) {
    onutGLAPI.onutEndTransformFeedbackEXT();
}
#define glEndTransformFeedbackEXT _onutEndTransformFeedbackEXT

ONUT_FORCE_INLINE void _onutEndTransformFeedbackNV(void) {
    onutGLAPI.onutEndTransformFeedbackNV();
}
#define glEndTransformFeedbackNV _onutEndTransformFeedbackNV

ONUT_FORCE_INLINE void _onutEndVertexShaderEXT(void) {
    onutGLAPI.onutEndVertexShaderEXT();
}
#define glEndVertexShaderEXT _onutEndVertexShaderEXT

ONUT_FORCE_INLINE void _onutEndVideoCaptureNV(GLuint video_capture_slot) {
    onutGLAPI.onutEndVideoCaptureNV(video_capture_slot);
}
#define glEndVideoCaptureNV _onutEndVideoCaptureNV

ONUT_FORCE_INLINE void _onutEvalCoord1xOES(GLfixed u) {
    onutGLAPI.onutEvalCoord1xOES(u);
}
#define glEvalCoord1xOES _onutEvalCoord1xOES

ONUT_FORCE_INLINE void _onutEvalCoord1xvOES(const GLfixed *coords) {
    onutGLAPI.onutEvalCoord1xvOES(coords);
}
#define glEvalCoord1xvOES _onutEvalCoord1xvOES

ONUT_FORCE_INLINE void _onutEvalCoord2xOES(GLfixed u, GLfixed v) {
    onutGLAPI.onutEvalCoord2xOES(u, v);
}
#define glEvalCoord2xOES _onutEvalCoord2xOES

ONUT_FORCE_INLINE void _onutEvalCoord2xvOES(const GLfixed *coords) {
    onutGLAPI.onutEvalCoord2xvOES(coords);
}
#define glEvalCoord2xvOES _onutEvalCoord2xvOES

ONUT_FORCE_INLINE void _onutEvalMapsNV(GLenum target, GLenum mode) {
    onutGLAPI.onutEvalMapsNV(target, mode);
}
#define glEvalMapsNV _onutEvalMapsNV

ONUT_FORCE_INLINE void _onutEvaluateDepthValuesARB(void) {
    onutGLAPI.onutEvaluateDepthValuesARB();
}
#define glEvaluateDepthValuesARB _onutEvaluateDepthValuesARB

ONUT_FORCE_INLINE void _onutExecuteProgramNV(GLenum target, GLuint id, const GLfloat *params) {
    onutGLAPI.onutExecuteProgramNV(target, id, params);
}
#define glExecuteProgramNV _onutExecuteProgramNV

ONUT_FORCE_INLINE void _onutExtGetBufferPointervQCOM(GLenum target, void **params) {
    onutGLAPI.onutExtGetBufferPointervQCOM(target, params);
}
#define glExtGetBufferPointervQCOM _onutExtGetBufferPointervQCOM

ONUT_FORCE_INLINE void _onutExtGetBuffersQCOM(GLuint *buffers, GLint maxBuffers, GLint *numBuffers) {
    onutGLAPI.onutExtGetBuffersQCOM(buffers, maxBuffers, numBuffers);
}
#define glExtGetBuffersQCOM _onutExtGetBuffersQCOM

ONUT_FORCE_INLINE void _onutExtGetFramebuffersQCOM(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers) {
    onutGLAPI.onutExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers);
}
#define glExtGetFramebuffersQCOM _onutExtGetFramebuffersQCOM

ONUT_FORCE_INLINE void _onutExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar *source, GLint *length) {
    onutGLAPI.onutExtGetProgramBinarySourceQCOM(program, shadertype, source, length);
}
#define glExtGetProgramBinarySourceQCOM _onutExtGetProgramBinarySourceQCOM

ONUT_FORCE_INLINE void _onutExtGetProgramsQCOM(GLuint *programs, GLint maxPrograms, GLint *numPrograms) {
    onutGLAPI.onutExtGetProgramsQCOM(programs, maxPrograms, numPrograms);
}
#define glExtGetProgramsQCOM _onutExtGetProgramsQCOM

ONUT_FORCE_INLINE void _onutExtGetRenderbuffersQCOM(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers) {
    onutGLAPI.onutExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers);
}
#define glExtGetRenderbuffersQCOM _onutExtGetRenderbuffersQCOM

ONUT_FORCE_INLINE void _onutExtGetShadersQCOM(GLuint *shaders, GLint maxShaders, GLint *numShaders) {
    onutGLAPI.onutExtGetShadersQCOM(shaders, maxShaders, numShaders);
}
#define glExtGetShadersQCOM _onutExtGetShadersQCOM

ONUT_FORCE_INLINE void _onutExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params) {
    onutGLAPI.onutExtGetTexLevelParameterivQCOM(texture, face, level, pname, params);
}
#define glExtGetTexLevelParameterivQCOM _onutExtGetTexLevelParameterivQCOM

ONUT_FORCE_INLINE void _onutExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels) {
    onutGLAPI.onutExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels);
}
#define glExtGetTexSubImageQCOM _onutExtGetTexSubImageQCOM

ONUT_FORCE_INLINE void _onutExtGetTexturesQCOM(GLuint *textures, GLint maxTextures, GLint *numTextures) {
    onutGLAPI.onutExtGetTexturesQCOM(textures, maxTextures, numTextures);
}
#define glExtGetTexturesQCOM _onutExtGetTexturesQCOM

ONUT_FORCE_INLINE GLboolean _onutExtIsProgramBinaryQCOM(GLuint program) {
    return onutGLAPI.onutExtIsProgramBinaryQCOM(program);
}
#define glExtIsProgramBinaryQCOM _onutExtIsProgramBinaryQCOM

ONUT_FORCE_INLINE void _onutExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutExtTexObjectStateOverrideiQCOM(target, pname, param);
}
#define glExtTexObjectStateOverrideiQCOM _onutExtTexObjectStateOverrideiQCOM

ONUT_FORCE_INLINE void _onutExtractComponentEXT(GLuint res, GLuint src, GLuint num) {
    onutGLAPI.onutExtractComponentEXT(res, src, num);
}
#define glExtractComponentEXT _onutExtractComponentEXT

ONUT_FORCE_INLINE void _onutFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed *buffer) {
    onutGLAPI.onutFeedbackBufferxOES(n, type, buffer);
}
#define glFeedbackBufferxOES _onutFeedbackBufferxOES

ONUT_FORCE_INLINE GLsync _onutFenceSyncAPPLE(GLenum condition, GLbitfield flags) {
    return onutGLAPI.onutFenceSyncAPPLE(condition, flags);
}
#define glFenceSyncAPPLE _onutFenceSyncAPPLE

ONUT_FORCE_INLINE void _onutFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage) {
    onutGLAPI.onutFinalCombinerInputNV(variable, input, mapping, componentUsage);
}
#define glFinalCombinerInputNV _onutFinalCombinerInputNV

ONUT_FORCE_INLINE GLint _onutFinishAsyncSGIX(GLuint *markerp) {
    return onutGLAPI.onutFinishAsyncSGIX(markerp);
}
#define glFinishAsyncSGIX _onutFinishAsyncSGIX

ONUT_FORCE_INLINE void _onutFinishFenceAPPLE(GLuint fence) {
    onutGLAPI.onutFinishFenceAPPLE(fence);
}
#define glFinishFenceAPPLE _onutFinishFenceAPPLE

ONUT_FORCE_INLINE void _onutFinishFenceNV(GLuint fence) {
    onutGLAPI.onutFinishFenceNV(fence);
}
#define glFinishFenceNV _onutFinishFenceNV

ONUT_FORCE_INLINE void _onutFinishObjectAPPLE(GLenum object, GLint name) {
    onutGLAPI.onutFinishObjectAPPLE(object, name);
}
#define glFinishObjectAPPLE _onutFinishObjectAPPLE

ONUT_FORCE_INLINE void _onutFinishTextureSUNX(void) {
    onutGLAPI.onutFinishTextureSUNX();
}
#define glFinishTextureSUNX _onutFinishTextureSUNX

ONUT_FORCE_INLINE void _onutFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size) {
    onutGLAPI.onutFlushMappedBufferRangeAPPLE(target, offset, size);
}
#define glFlushMappedBufferRangeAPPLE _onutFlushMappedBufferRangeAPPLE

ONUT_FORCE_INLINE void _onutFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length) {
    onutGLAPI.onutFlushMappedBufferRangeEXT(target, offset, length);
}
#define glFlushMappedBufferRangeEXT _onutFlushMappedBufferRangeEXT

ONUT_FORCE_INLINE void _onutFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length) {
    onutGLAPI.onutFlushMappedNamedBufferRangeEXT(buffer, offset, length);
}
#define glFlushMappedNamedBufferRangeEXT _onutFlushMappedNamedBufferRangeEXT

ONUT_FORCE_INLINE void _onutFlushPixelDataRangeNV(GLenum target) {
    onutGLAPI.onutFlushPixelDataRangeNV(target);
}
#define glFlushPixelDataRangeNV _onutFlushPixelDataRangeNV

ONUT_FORCE_INLINE void _onutFlushRasterSGIX(void) {
    onutGLAPI.onutFlushRasterSGIX();
}
#define glFlushRasterSGIX _onutFlushRasterSGIX

ONUT_FORCE_INLINE void _onutFlushStaticDataIBM(GLenum target) {
    onutGLAPI.onutFlushStaticDataIBM(target);
}
#define glFlushStaticDataIBM _onutFlushStaticDataIBM

ONUT_FORCE_INLINE void _onutFlushVertexArrayRangeAPPLE(GLsizei length, void *pointer) {
    onutGLAPI.onutFlushVertexArrayRangeAPPLE(length, pointer);
}
#define glFlushVertexArrayRangeAPPLE _onutFlushVertexArrayRangeAPPLE

ONUT_FORCE_INLINE void _onutFlushVertexArrayRangeNV(void) {
    onutGLAPI.onutFlushVertexArrayRangeNV();
}
#define glFlushVertexArrayRangeNV _onutFlushVertexArrayRangeNV

ONUT_FORCE_INLINE void _onutFogCoordFormatNV(GLenum type, GLsizei stride) {
    onutGLAPI.onutFogCoordFormatNV(type, stride);
}
#define glFogCoordFormatNV _onutFogCoordFormatNV

ONUT_FORCE_INLINE void _onutFogCoordPointerEXT(GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutFogCoordPointerEXT(type, stride, pointer);
}
#define glFogCoordPointerEXT _onutFogCoordPointerEXT

ONUT_FORCE_INLINE void _onutFogCoordPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutFogCoordPointerListIBM(type, stride, pointer, ptrstride);
}
#define glFogCoordPointerListIBM _onutFogCoordPointerListIBM

ONUT_FORCE_INLINE void _onutFogCoorddEXT(GLdouble coord) {
    onutGLAPI.onutFogCoorddEXT(coord);
}
#define glFogCoorddEXT _onutFogCoorddEXT

ONUT_FORCE_INLINE void _onutFogCoorddvEXT(const GLdouble *coord) {
    onutGLAPI.onutFogCoorddvEXT(coord);
}
#define glFogCoorddvEXT _onutFogCoorddvEXT

ONUT_FORCE_INLINE void _onutFogCoordfEXT(GLfloat coord) {
    onutGLAPI.onutFogCoordfEXT(coord);
}
#define glFogCoordfEXT _onutFogCoordfEXT

ONUT_FORCE_INLINE void _onutFogCoordfvEXT(const GLfloat *coord) {
    onutGLAPI.onutFogCoordfvEXT(coord);
}
#define glFogCoordfvEXT _onutFogCoordfvEXT

ONUT_FORCE_INLINE void _onutFogCoordhNV(GLhalfNV fog) {
    onutGLAPI.onutFogCoordhNV(fog);
}
#define glFogCoordhNV _onutFogCoordhNV

ONUT_FORCE_INLINE void _onutFogCoordhvNV(const GLhalfNV *fog) {
    onutGLAPI.onutFogCoordhvNV(fog);
}
#define glFogCoordhvNV _onutFogCoordhvNV

ONUT_FORCE_INLINE void _onutFogFuncSGIS(GLsizei n, const GLfloat *points) {
    onutGLAPI.onutFogFuncSGIS(n, points);
}
#define glFogFuncSGIS _onutFogFuncSGIS

ONUT_FORCE_INLINE void _onutFogxOES(GLenum pname, GLfixed param) {
    onutGLAPI.onutFogxOES(pname, param);
}
#define glFogxOES _onutFogxOES

ONUT_FORCE_INLINE void _onutFogxvOES(GLenum pname, const GLfixed *param) {
    onutGLAPI.onutFogxvOES(pname, param);
}
#define glFogxvOES _onutFogxvOES

ONUT_FORCE_INLINE void _onutFragmentColorMaterialSGIX(GLenum face, GLenum mode) {
    onutGLAPI.onutFragmentColorMaterialSGIX(face, mode);
}
#define glFragmentColorMaterialSGIX _onutFragmentColorMaterialSGIX

ONUT_FORCE_INLINE void _onutFragmentCoverageColorNV(GLuint color) {
    onutGLAPI.onutFragmentCoverageColorNV(color);
}
#define glFragmentCoverageColorNV _onutFragmentCoverageColorNV

ONUT_FORCE_INLINE void _onutFragmentLightModelfSGIX(GLenum pname, GLfloat param) {
    onutGLAPI.onutFragmentLightModelfSGIX(pname, param);
}
#define glFragmentLightModelfSGIX _onutFragmentLightModelfSGIX

ONUT_FORCE_INLINE void _onutFragmentLightModelfvSGIX(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutFragmentLightModelfvSGIX(pname, params);
}
#define glFragmentLightModelfvSGIX _onutFragmentLightModelfvSGIX

ONUT_FORCE_INLINE void _onutFragmentLightModeliSGIX(GLenum pname, GLint param) {
    onutGLAPI.onutFragmentLightModeliSGIX(pname, param);
}
#define glFragmentLightModeliSGIX _onutFragmentLightModeliSGIX

ONUT_FORCE_INLINE void _onutFragmentLightModelivSGIX(GLenum pname, const GLint *params) {
    onutGLAPI.onutFragmentLightModelivSGIX(pname, params);
}
#define glFragmentLightModelivSGIX _onutFragmentLightModelivSGIX

ONUT_FORCE_INLINE void _onutFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param) {
    onutGLAPI.onutFragmentLightfSGIX(light, pname, param);
}
#define glFragmentLightfSGIX _onutFragmentLightfSGIX

ONUT_FORCE_INLINE void _onutFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutFragmentLightfvSGIX(light, pname, params);
}
#define glFragmentLightfvSGIX _onutFragmentLightfvSGIX

ONUT_FORCE_INLINE void _onutFragmentLightiSGIX(GLenum light, GLenum pname, GLint param) {
    onutGLAPI.onutFragmentLightiSGIX(light, pname, param);
}
#define glFragmentLightiSGIX _onutFragmentLightiSGIX

ONUT_FORCE_INLINE void _onutFragmentLightivSGIX(GLenum light, GLenum pname, const GLint *params) {
    onutGLAPI.onutFragmentLightivSGIX(light, pname, params);
}
#define glFragmentLightivSGIX _onutFragmentLightivSGIX

ONUT_FORCE_INLINE void _onutFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param) {
    onutGLAPI.onutFragmentMaterialfSGIX(face, pname, param);
}
#define glFragmentMaterialfSGIX _onutFragmentMaterialfSGIX

ONUT_FORCE_INLINE void _onutFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutFragmentMaterialfvSGIX(face, pname, params);
}
#define glFragmentMaterialfvSGIX _onutFragmentMaterialfvSGIX

ONUT_FORCE_INLINE void _onutFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param) {
    onutGLAPI.onutFragmentMaterialiSGIX(face, pname, param);
}
#define glFragmentMaterialiSGIX _onutFragmentMaterialiSGIX

ONUT_FORCE_INLINE void _onutFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint *params) {
    onutGLAPI.onutFragmentMaterialivSGIX(face, pname, params);
}
#define glFragmentMaterialivSGIX _onutFragmentMaterialivSGIX

ONUT_FORCE_INLINE void _onutFrameTerminatorGREMEDY(void) {
    onutGLAPI.onutFrameTerminatorGREMEDY();
}
#define glFrameTerminatorGREMEDY _onutFrameTerminatorGREMEDY

ONUT_FORCE_INLINE void _onutFrameZoomSGIX(GLint factor) {
    onutGLAPI.onutFrameZoomSGIX(factor);
}
#define glFrameZoomSGIX _onutFrameZoomSGIX

ONUT_FORCE_INLINE void _onutFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode) {
    onutGLAPI.onutFramebufferDrawBufferEXT(framebuffer, mode);
}
#define glFramebufferDrawBufferEXT _onutFramebufferDrawBufferEXT

ONUT_FORCE_INLINE void _onutFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum *bufs) {
    onutGLAPI.onutFramebufferDrawBuffersEXT(framebuffer, n, bufs);
}
#define glFramebufferDrawBuffersEXT _onutFramebufferDrawBuffersEXT

ONUT_FORCE_INLINE void _onutFramebufferFetchBarrierQCOM(void) {
    onutGLAPI.onutFramebufferFetchBarrierQCOM();
}
#define glFramebufferFetchBarrierQCOM _onutFramebufferFetchBarrierQCOM

ONUT_FORCE_INLINE void _onutFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint *providedFeatures) {
    onutGLAPI.onutFramebufferFoveationConfigQCOM(framebuffer, numLayers, focalPointsPerLayer, requestedFeatures, providedFeatures);
}
#define glFramebufferFoveationConfigQCOM _onutFramebufferFoveationConfigQCOM

ONUT_FORCE_INLINE void _onutFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea) {
    onutGLAPI.onutFramebufferFoveationParametersQCOM(framebuffer, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea);
}
#define glFramebufferFoveationParametersQCOM _onutFramebufferFoveationParametersQCOM

ONUT_FORCE_INLINE void _onutFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size) {
    onutGLAPI.onutFramebufferPixelLocalStorageSizeEXT(target, size);
}
#define glFramebufferPixelLocalStorageSizeEXT _onutFramebufferPixelLocalStorageSizeEXT

ONUT_FORCE_INLINE void _onutFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode) {
    onutGLAPI.onutFramebufferReadBufferEXT(framebuffer, mode);
}
#define glFramebufferReadBufferEXT _onutFramebufferReadBufferEXT

ONUT_FORCE_INLINE void _onutFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) {
    onutGLAPI.onutFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer);
}
#define glFramebufferRenderbufferEXT _onutFramebufferRenderbufferEXT

ONUT_FORCE_INLINE void _onutFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutFramebufferSampleLocationsfvARB(target, start, count, v);
}
#define glFramebufferSampleLocationsfvARB _onutFramebufferSampleLocationsfvARB

ONUT_FORCE_INLINE void _onutFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutFramebufferSampleLocationsfvNV(target, start, count, v);
}
#define glFramebufferSampleLocationsfvNV _onutFramebufferSampleLocationsfvNV

ONUT_FORCE_INLINE void _onutFramebufferSamplePositionsfvAMD(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values) {
    onutGLAPI.onutFramebufferSamplePositionsfvAMD(target, numsamples, pixelindex, values);
}
#define glFramebufferSamplePositionsfvAMD _onutFramebufferSamplePositionsfvAMD

ONUT_FORCE_INLINE void _onutFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) {
    onutGLAPI.onutFramebufferTexture1DEXT(target, attachment, textarget, texture, level);
}
#define glFramebufferTexture1DEXT _onutFramebufferTexture1DEXT

ONUT_FORCE_INLINE void _onutFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale) {
    onutGLAPI.onutFramebufferTexture2DDownsampleIMG(target, attachment, textarget, texture, level, xscale, yscale);
}
#define glFramebufferTexture2DDownsampleIMG _onutFramebufferTexture2DDownsampleIMG

ONUT_FORCE_INLINE void _onutFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) {
    onutGLAPI.onutFramebufferTexture2DEXT(target, attachment, textarget, texture, level);
}
#define glFramebufferTexture2DEXT _onutFramebufferTexture2DEXT

ONUT_FORCE_INLINE void _onutFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples) {
    onutGLAPI.onutFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples);
}
#define glFramebufferTexture2DMultisampleEXT _onutFramebufferTexture2DMultisampleEXT

ONUT_FORCE_INLINE void _onutFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples) {
    onutGLAPI.onutFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples);
}
#define glFramebufferTexture2DMultisampleIMG _onutFramebufferTexture2DMultisampleIMG

ONUT_FORCE_INLINE void _onutFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) {
    onutGLAPI.onutFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset);
}
#define glFramebufferTexture3DEXT _onutFramebufferTexture3DEXT

ONUT_FORCE_INLINE void _onutFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) {
    onutGLAPI.onutFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset);
}
#define glFramebufferTexture3DOES _onutFramebufferTexture3DOES

ONUT_FORCE_INLINE void _onutFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level) {
    onutGLAPI.onutFramebufferTextureARB(target, attachment, texture, level);
}
#define glFramebufferTextureARB _onutFramebufferTextureARB

ONUT_FORCE_INLINE void _onutFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level) {
    onutGLAPI.onutFramebufferTextureEXT(target, attachment, texture, level);
}
#define glFramebufferTextureEXT _onutFramebufferTextureEXT

ONUT_FORCE_INLINE void _onutFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face) {
    onutGLAPI.onutFramebufferTextureFaceARB(target, attachment, texture, level, face);
}
#define glFramebufferTextureFaceARB _onutFramebufferTextureFaceARB

ONUT_FORCE_INLINE void _onutFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face) {
    onutGLAPI.onutFramebufferTextureFaceEXT(target, attachment, texture, level, face);
}
#define glFramebufferTextureFaceEXT _onutFramebufferTextureFaceEXT

ONUT_FORCE_INLINE void _onutFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) {
    onutGLAPI.onutFramebufferTextureLayerARB(target, attachment, texture, level, layer);
}
#define glFramebufferTextureLayerARB _onutFramebufferTextureLayerARB

ONUT_FORCE_INLINE void _onutFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale) {
    onutGLAPI.onutFramebufferTextureLayerDownsampleIMG(target, attachment, texture, level, layer, xscale, yscale);
}
#define glFramebufferTextureLayerDownsampleIMG _onutFramebufferTextureLayerDownsampleIMG

ONUT_FORCE_INLINE void _onutFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) {
    onutGLAPI.onutFramebufferTextureLayerEXT(target, attachment, texture, level, layer);
}
#define glFramebufferTextureLayerEXT _onutFramebufferTextureLayerEXT

ONUT_FORCE_INLINE void _onutFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews) {
    onutGLAPI.onutFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews);
}
#define glFramebufferTextureMultisampleMultiviewOVR _onutFramebufferTextureMultisampleMultiviewOVR

ONUT_FORCE_INLINE void _onutFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews) {
    onutGLAPI.onutFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews);
}
#define glFramebufferTextureMultiviewOVR _onutFramebufferTextureMultiviewOVR

ONUT_FORCE_INLINE void _onutFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level) {
    onutGLAPI.onutFramebufferTextureOES(target, attachment, texture, level);
}
#define glFramebufferTextureOES _onutFramebufferTextureOES

ONUT_FORCE_INLINE void _onutFreeObjectBufferATI(GLuint buffer) {
    onutGLAPI.onutFreeObjectBufferATI(buffer);
}
#define glFreeObjectBufferATI _onutFreeObjectBufferATI

ONUT_FORCE_INLINE void _onutFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) {
    onutGLAPI.onutFrustumfOES(l, r, b, t, n, f);
}
#define glFrustumfOES _onutFrustumfOES

ONUT_FORCE_INLINE void _onutFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) {
    onutGLAPI.onutFrustumxOES(l, r, b, t, n, f);
}
#define glFrustumxOES _onutFrustumxOES

ONUT_FORCE_INLINE GLuint _onutGenAsyncMarkersSGIX(GLsizei range) {
    return onutGLAPI.onutGenAsyncMarkersSGIX(range);
}
#define glGenAsyncMarkersSGIX _onutGenAsyncMarkersSGIX

ONUT_FORCE_INLINE void _onutGenBuffersARB(GLsizei n, GLuint *buffers) {
    onutGLAPI.onutGenBuffersARB(n, buffers);
}
#define glGenBuffersARB _onutGenBuffersARB

ONUT_FORCE_INLINE void _onutGenFencesAPPLE(GLsizei n, GLuint *fences) {
    onutGLAPI.onutGenFencesAPPLE(n, fences);
}
#define glGenFencesAPPLE _onutGenFencesAPPLE

ONUT_FORCE_INLINE void _onutGenFencesNV(GLsizei n, GLuint *fences) {
    onutGLAPI.onutGenFencesNV(n, fences);
}
#define glGenFencesNV _onutGenFencesNV

ONUT_FORCE_INLINE GLuint _onutGenFragmentShadersATI(GLuint range) {
    return onutGLAPI.onutGenFragmentShadersATI(range);
}
#define glGenFragmentShadersATI _onutGenFragmentShadersATI

ONUT_FORCE_INLINE void _onutGenFramebuffersEXT(GLsizei n, GLuint *framebuffers) {
    onutGLAPI.onutGenFramebuffersEXT(n, framebuffers);
}
#define glGenFramebuffersEXT _onutGenFramebuffersEXT

ONUT_FORCE_INLINE void _onutGenNamesAMD(GLenum identifier, GLuint num, GLuint *names) {
    onutGLAPI.onutGenNamesAMD(identifier, num, names);
}
#define glGenNamesAMD _onutGenNamesAMD

ONUT_FORCE_INLINE void _onutGenOcclusionQueriesNV(GLsizei n, GLuint *ids) {
    onutGLAPI.onutGenOcclusionQueriesNV(n, ids);
}
#define glGenOcclusionQueriesNV _onutGenOcclusionQueriesNV

ONUT_FORCE_INLINE GLuint _onutGenPathsNV(GLsizei range) {
    return onutGLAPI.onutGenPathsNV(range);
}
#define glGenPathsNV _onutGenPathsNV

ONUT_FORCE_INLINE void _onutGenPerfMonitorsAMD(GLsizei n, GLuint *monitors) {
    onutGLAPI.onutGenPerfMonitorsAMD(n, monitors);
}
#define glGenPerfMonitorsAMD _onutGenPerfMonitorsAMD

ONUT_FORCE_INLINE void _onutGenProgramPipelinesEXT(GLsizei n, GLuint *pipelines) {
    onutGLAPI.onutGenProgramPipelinesEXT(n, pipelines);
}
#define glGenProgramPipelinesEXT _onutGenProgramPipelinesEXT

ONUT_FORCE_INLINE void _onutGenProgramsARB(GLsizei n, GLuint *programs) {
    onutGLAPI.onutGenProgramsARB(n, programs);
}
#define glGenProgramsARB _onutGenProgramsARB

ONUT_FORCE_INLINE void _onutGenProgramsNV(GLsizei n, GLuint *programs) {
    onutGLAPI.onutGenProgramsNV(n, programs);
}
#define glGenProgramsNV _onutGenProgramsNV

ONUT_FORCE_INLINE void _onutGenQueriesARB(GLsizei n, GLuint *ids) {
    onutGLAPI.onutGenQueriesARB(n, ids);
}
#define glGenQueriesARB _onutGenQueriesARB

ONUT_FORCE_INLINE void _onutGenQueriesEXT(GLsizei n, GLuint *ids) {
    onutGLAPI.onutGenQueriesEXT(n, ids);
}
#define glGenQueriesEXT _onutGenQueriesEXT

ONUT_FORCE_INLINE void _onutGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers) {
    onutGLAPI.onutGenRenderbuffersEXT(n, renderbuffers);
}
#define glGenRenderbuffersEXT _onutGenRenderbuffersEXT

ONUT_FORCE_INLINE void _onutGenSemaphoresEXT(GLsizei n, GLuint *semaphores) {
    onutGLAPI.onutGenSemaphoresEXT(n, semaphores);
}
#define glGenSemaphoresEXT _onutGenSemaphoresEXT

ONUT_FORCE_INLINE GLuint _onutGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components) {
    return onutGLAPI.onutGenSymbolsEXT(datatype, storagetype, range, components);
}
#define glGenSymbolsEXT _onutGenSymbolsEXT

ONUT_FORCE_INLINE void _onutGenTexturesEXT(GLsizei n, GLuint *textures) {
    onutGLAPI.onutGenTexturesEXT(n, textures);
}
#define glGenTexturesEXT _onutGenTexturesEXT

ONUT_FORCE_INLINE void _onutGenTransformFeedbacksNV(GLsizei n, GLuint *ids) {
    onutGLAPI.onutGenTransformFeedbacksNV(n, ids);
}
#define glGenTransformFeedbacksNV _onutGenTransformFeedbacksNV

ONUT_FORCE_INLINE void _onutGenVertexArraysAPPLE(GLsizei n, GLuint *arrays) {
    onutGLAPI.onutGenVertexArraysAPPLE(n, arrays);
}
#define glGenVertexArraysAPPLE _onutGenVertexArraysAPPLE

ONUT_FORCE_INLINE void _onutGenVertexArraysOES(GLsizei n, GLuint *arrays) {
    onutGLAPI.onutGenVertexArraysOES(n, arrays);
}
#define glGenVertexArraysOES _onutGenVertexArraysOES

ONUT_FORCE_INLINE GLuint _onutGenVertexShadersEXT(GLuint range) {
    return onutGLAPI.onutGenVertexShadersEXT(range);
}
#define glGenVertexShadersEXT _onutGenVertexShadersEXT

ONUT_FORCE_INLINE void _onutGenerateMipmapEXT(GLenum target) {
    onutGLAPI.onutGenerateMipmapEXT(target);
}
#define glGenerateMipmapEXT _onutGenerateMipmapEXT

ONUT_FORCE_INLINE void _onutGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target) {
    onutGLAPI.onutGenerateMultiTexMipmapEXT(texunit, target);
}
#define glGenerateMultiTexMipmapEXT _onutGenerateMultiTexMipmapEXT

ONUT_FORCE_INLINE void _onutGenerateTextureMipmapEXT(GLuint texture, GLenum target) {
    onutGLAPI.onutGenerateTextureMipmapEXT(texture, target);
}
#define glGenerateTextureMipmapEXT _onutGenerateTextureMipmapEXT

ONUT_FORCE_INLINE void _onutGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name) {
    onutGLAPI.onutGetActiveAttribARB(programObj, index, maxLength, length, size, type, name);
}
#define glGetActiveAttribARB _onutGetActiveAttribARB

ONUT_FORCE_INLINE void _onutGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name) {
    onutGLAPI.onutGetActiveUniformARB(programObj, index, maxLength, length, size, type, name);
}
#define glGetActiveUniformARB _onutGetActiveUniformARB

ONUT_FORCE_INLINE void _onutGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) {
    onutGLAPI.onutGetActiveVaryingNV(program, index, bufSize, length, size, type, name);
}
#define glGetActiveVaryingNV _onutGetActiveVaryingNV

ONUT_FORCE_INLINE void _onutGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetArrayObjectfvATI(array, pname, params);
}
#define glGetArrayObjectfvATI _onutGetArrayObjectfvATI

ONUT_FORCE_INLINE void _onutGetArrayObjectivATI(GLenum array, GLenum pname, GLint *params) {
    onutGLAPI.onutGetArrayObjectivATI(array, pname, params);
}
#define glGetArrayObjectivATI _onutGetArrayObjectivATI

ONUT_FORCE_INLINE void _onutGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj) {
    onutGLAPI.onutGetAttachedObjectsARB(containerObj, maxCount, count, obj);
}
#define glGetAttachedObjectsARB _onutGetAttachedObjectsARB

ONUT_FORCE_INLINE GLint _onutGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name) {
    return onutGLAPI.onutGetAttribLocationARB(programObj, name);
}
#define glGetAttribLocationARB _onutGetAttribLocationARB

ONUT_FORCE_INLINE void _onutGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean *data) {
    onutGLAPI.onutGetBooleanIndexedvEXT(target, index, data);
}
#define glGetBooleanIndexedvEXT _onutGetBooleanIndexedvEXT

ONUT_FORCE_INLINE void _onutGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetBufferParameterivARB(target, pname, params);
}
#define glGetBufferParameterivARB _onutGetBufferParameterivARB

ONUT_FORCE_INLINE void _onutGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT *params) {
    onutGLAPI.onutGetBufferParameterui64vNV(target, pname, params);
}
#define glGetBufferParameterui64vNV _onutGetBufferParameterui64vNV

ONUT_FORCE_INLINE void _onutGetBufferPointervARB(GLenum target, GLenum pname, void **params) {
    onutGLAPI.onutGetBufferPointervARB(target, pname, params);
}
#define glGetBufferPointervARB _onutGetBufferPointervARB

ONUT_FORCE_INLINE void _onutGetBufferPointervOES(GLenum target, GLenum pname, void **params) {
    onutGLAPI.onutGetBufferPointervOES(target, pname, params);
}
#define glGetBufferPointervOES _onutGetBufferPointervOES

ONUT_FORCE_INLINE void _onutGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data) {
    onutGLAPI.onutGetBufferSubDataARB(target, offset, size, data);
}
#define glGetBufferSubDataARB _onutGetBufferSubDataARB

ONUT_FORCE_INLINE void _onutGetClipPlanefOES(GLenum plane, GLfloat *equation) {
    onutGLAPI.onutGetClipPlanefOES(plane, equation);
}
#define glGetClipPlanefOES _onutGetClipPlanefOES

ONUT_FORCE_INLINE void _onutGetClipPlanexOES(GLenum plane, GLfixed *equation) {
    onutGLAPI.onutGetClipPlanexOES(plane, equation);
}
#define glGetClipPlanexOES _onutGetClipPlanexOES

ONUT_FORCE_INLINE void _onutGetColorTable(GLenum target, GLenum format, GLenum type, void *table) {
    onutGLAPI.onutGetColorTable(target, format, type, table);
}
#define glGetColorTable _onutGetColorTable

ONUT_FORCE_INLINE void _onutGetColorTableEXT(GLenum target, GLenum format, GLenum type, void *data) {
    onutGLAPI.onutGetColorTableEXT(target, format, type, data);
}
#define glGetColorTableEXT _onutGetColorTableEXT

ONUT_FORCE_INLINE void _onutGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetColorTableParameterfv(target, pname, params);
}
#define glGetColorTableParameterfv _onutGetColorTableParameterfv

ONUT_FORCE_INLINE void _onutGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetColorTableParameterfvEXT(target, pname, params);
}
#define glGetColorTableParameterfvEXT _onutGetColorTableParameterfvEXT

ONUT_FORCE_INLINE void _onutGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetColorTableParameterfvSGI(target, pname, params);
}
#define glGetColorTableParameterfvSGI _onutGetColorTableParameterfvSGI

ONUT_FORCE_INLINE void _onutGetColorTableParameteriv(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetColorTableParameteriv(target, pname, params);
}
#define glGetColorTableParameteriv _onutGetColorTableParameteriv

ONUT_FORCE_INLINE void _onutGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetColorTableParameterivEXT(target, pname, params);
}
#define glGetColorTableParameterivEXT _onutGetColorTableParameterivEXT

ONUT_FORCE_INLINE void _onutGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetColorTableParameterivSGI(target, pname, params);
}
#define glGetColorTableParameterivSGI _onutGetColorTableParameterivSGI

ONUT_FORCE_INLINE void _onutGetColorTableSGI(GLenum target, GLenum format, GLenum type, void *table) {
    onutGLAPI.onutGetColorTableSGI(target, format, type, table);
}
#define glGetColorTableSGI _onutGetColorTableSGI

ONUT_FORCE_INLINE void _onutGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetCombinerInputParameterfvNV(stage, portion, variable, pname, params);
}
#define glGetCombinerInputParameterfvNV _onutGetCombinerInputParameterfvNV

ONUT_FORCE_INLINE void _onutGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params) {
    onutGLAPI.onutGetCombinerInputParameterivNV(stage, portion, variable, pname, params);
}
#define glGetCombinerInputParameterivNV _onutGetCombinerInputParameterivNV

ONUT_FORCE_INLINE void _onutGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetCombinerOutputParameterfvNV(stage, portion, pname, params);
}
#define glGetCombinerOutputParameterfvNV _onutGetCombinerOutputParameterfvNV

ONUT_FORCE_INLINE void _onutGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint *params) {
    onutGLAPI.onutGetCombinerOutputParameterivNV(stage, portion, pname, params);
}
#define glGetCombinerOutputParameterivNV _onutGetCombinerOutputParameterivNV

ONUT_FORCE_INLINE void _onutGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetCombinerStageParameterfvNV(stage, pname, params);
}
#define glGetCombinerStageParameterfvNV _onutGetCombinerStageParameterfvNV

ONUT_FORCE_INLINE GLuint _onutGetCommandHeaderNV(GLenum tokenID, GLuint size) {
    return onutGLAPI.onutGetCommandHeaderNV(tokenID, size);
}
#define glGetCommandHeaderNV _onutGetCommandHeaderNV

ONUT_FORCE_INLINE void _onutGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void *img) {
    onutGLAPI.onutGetCompressedMultiTexImageEXT(texunit, target, lod, img);
}
#define glGetCompressedMultiTexImageEXT _onutGetCompressedMultiTexImageEXT

ONUT_FORCE_INLINE void _onutGetCompressedTexImageARB(GLenum target, GLint level, void *img) {
    onutGLAPI.onutGetCompressedTexImageARB(target, level, img);
}
#define glGetCompressedTexImageARB _onutGetCompressedTexImageARB

ONUT_FORCE_INLINE void _onutGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void *img) {
    onutGLAPI.onutGetCompressedTextureImageEXT(texture, target, lod, img);
}
#define glGetCompressedTextureImageEXT _onutGetCompressedTextureImageEXT

ONUT_FORCE_INLINE void _onutGetConvolutionFilter(GLenum target, GLenum format, GLenum type, void *image) {
    onutGLAPI.onutGetConvolutionFilter(target, format, type, image);
}
#define glGetConvolutionFilter _onutGetConvolutionFilter

ONUT_FORCE_INLINE void _onutGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void *image) {
    onutGLAPI.onutGetConvolutionFilterEXT(target, format, type, image);
}
#define glGetConvolutionFilterEXT _onutGetConvolutionFilterEXT

ONUT_FORCE_INLINE void _onutGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetConvolutionParameterfv(target, pname, params);
}
#define glGetConvolutionParameterfv _onutGetConvolutionParameterfv

ONUT_FORCE_INLINE void _onutGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetConvolutionParameterfvEXT(target, pname, params);
}
#define glGetConvolutionParameterfvEXT _onutGetConvolutionParameterfvEXT

ONUT_FORCE_INLINE void _onutGetConvolutionParameteriv(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetConvolutionParameteriv(target, pname, params);
}
#define glGetConvolutionParameteriv _onutGetConvolutionParameteriv

ONUT_FORCE_INLINE void _onutGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetConvolutionParameterivEXT(target, pname, params);
}
#define glGetConvolutionParameterivEXT _onutGetConvolutionParameterivEXT

ONUT_FORCE_INLINE void _onutGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetConvolutionParameterxvOES(target, pname, params);
}
#define glGetConvolutionParameterxvOES _onutGetConvolutionParameterxvOES

ONUT_FORCE_INLINE void _onutGetCoverageModulationTableNV(GLsizei bufsize, GLfloat *v) {
    onutGLAPI.onutGetCoverageModulationTableNV(bufsize, v);
}
#define glGetCoverageModulationTableNV _onutGetCoverageModulationTableNV

ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLogAMD(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message) {
    return onutGLAPI.onutGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message);
}
#define glGetDebugMessageLogAMD _onutGetDebugMessageLogAMD

ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog) {
    return onutGLAPI.onutGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog);
}
#define glGetDebugMessageLogARB _onutGetDebugMessageLogARB

ONUT_FORCE_INLINE GLuint _onutGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog) {
    return onutGLAPI.onutGetDebugMessageLogKHR(count, bufSize, sources, types, ids, severities, lengths, messageLog);
}
#define glGetDebugMessageLogKHR _onutGetDebugMessageLogKHR

ONUT_FORCE_INLINE void _onutGetDetailTexFuncSGIS(GLenum target, GLfloat *points) {
    onutGLAPI.onutGetDetailTexFuncSGIS(target, points);
}
#define glGetDetailTexFuncSGIS _onutGetDetailTexFuncSGIS

ONUT_FORCE_INLINE void _onutGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble *data) {
    onutGLAPI.onutGetDoubleIndexedvEXT(target, index, data);
}
#define glGetDoubleIndexedvEXT _onutGetDoubleIndexedvEXT

ONUT_FORCE_INLINE void _onutGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble *params) {
    onutGLAPI.onutGetDoublei_vEXT(pname, index, params);
}
#define glGetDoublei_vEXT _onutGetDoublei_vEXT

ONUT_FORCE_INLINE void _onutGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString) {
    onutGLAPI.onutGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString);
}
#define glGetDriverControlStringQCOM _onutGetDriverControlStringQCOM

ONUT_FORCE_INLINE void _onutGetDriverControlsQCOM(GLint *num, GLsizei size, GLuint *driverControls) {
    onutGLAPI.onutGetDriverControlsQCOM(num, size, driverControls);
}
#define glGetDriverControlsQCOM _onutGetDriverControlsQCOM

ONUT_FORCE_INLINE void _onutGetFenceivNV(GLuint fence, GLenum pname, GLint *params) {
    onutGLAPI.onutGetFenceivNV(fence, pname, params);
}
#define glGetFenceivNV _onutGetFenceivNV

ONUT_FORCE_INLINE void _onutGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetFinalCombinerInputParameterfvNV(variable, pname, params);
}
#define glGetFinalCombinerInputParameterfvNV _onutGetFinalCombinerInputParameterfvNV

ONUT_FORCE_INLINE void _onutGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint *params) {
    onutGLAPI.onutGetFinalCombinerInputParameterivNV(variable, pname, params);
}
#define glGetFinalCombinerInputParameterivNV _onutGetFinalCombinerInputParameterivNV

ONUT_FORCE_INLINE void _onutGetFirstPerfQueryIdINTEL(GLuint *queryId) {
    onutGLAPI.onutGetFirstPerfQueryIdINTEL(queryId);
}
#define glGetFirstPerfQueryIdINTEL _onutGetFirstPerfQueryIdINTEL

ONUT_FORCE_INLINE void _onutGetFixedvOES(GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetFixedvOES(pname, params);
}
#define glGetFixedvOES _onutGetFixedvOES

ONUT_FORCE_INLINE void _onutGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat *data) {
    onutGLAPI.onutGetFloatIndexedvEXT(target, index, data);
}
#define glGetFloatIndexedvEXT _onutGetFloatIndexedvEXT

ONUT_FORCE_INLINE void _onutGetFloati_vEXT(GLenum pname, GLuint index, GLfloat *params) {
    onutGLAPI.onutGetFloati_vEXT(pname, index, params);
}
#define glGetFloati_vEXT _onutGetFloati_vEXT

ONUT_FORCE_INLINE void _onutGetFloati_vNV(GLenum target, GLuint index, GLfloat *data) {
    onutGLAPI.onutGetFloati_vNV(target, index, data);
}
#define glGetFloati_vNV _onutGetFloati_vNV

ONUT_FORCE_INLINE void _onutGetFloati_vOES(GLenum target, GLuint index, GLfloat *data) {
    onutGLAPI.onutGetFloati_vOES(target, index, data);
}
#define glGetFloati_vOES _onutGetFloati_vOES

ONUT_FORCE_INLINE void _onutGetFogFuncSGIS(GLfloat *points) {
    onutGLAPI.onutGetFogFuncSGIS(points);
}
#define glGetFogFuncSGIS _onutGetFogFuncSGIS

ONUT_FORCE_INLINE GLint _onutGetFragDataIndexEXT(GLuint program, const GLchar *name) {
    return onutGLAPI.onutGetFragDataIndexEXT(program, name);
}
#define glGetFragDataIndexEXT _onutGetFragDataIndexEXT

ONUT_FORCE_INLINE GLint _onutGetFragDataLocationEXT(GLuint program, const GLchar *name) {
    return onutGLAPI.onutGetFragDataLocationEXT(program, name);
}
#define glGetFragDataLocationEXT _onutGetFragDataLocationEXT

ONUT_FORCE_INLINE void _onutGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetFragmentLightfvSGIX(light, pname, params);
}
#define glGetFragmentLightfvSGIX _onutGetFragmentLightfvSGIX

ONUT_FORCE_INLINE void _onutGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint *params) {
    onutGLAPI.onutGetFragmentLightivSGIX(light, pname, params);
}
#define glGetFragmentLightivSGIX _onutGetFragmentLightivSGIX

ONUT_FORCE_INLINE void _onutGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetFragmentMaterialfvSGIX(face, pname, params);
}
#define glGetFragmentMaterialfvSGIX _onutGetFragmentMaterialfvSGIX

ONUT_FORCE_INLINE void _onutGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint *params) {
    onutGLAPI.onutGetFragmentMaterialivSGIX(face, pname, params);
}
#define glGetFragmentMaterialivSGIX _onutGetFragmentMaterialivSGIX

ONUT_FORCE_INLINE void _onutGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params) {
    onutGLAPI.onutGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);
}
#define glGetFramebufferAttachmentParameterivEXT _onutGetFramebufferAttachmentParameterivEXT

ONUT_FORCE_INLINE void _onutGetFramebufferParameterfvAMD(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values) {
    onutGLAPI.onutGetFramebufferParameterfvAMD(target, pname, numsamples, pixelindex, size, values);
}
#define glGetFramebufferParameterfvAMD _onutGetFramebufferParameterfvAMD

ONUT_FORCE_INLINE void _onutGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params) {
    onutGLAPI.onutGetFramebufferParameterivEXT(framebuffer, pname, params);
}
#define glGetFramebufferParameterivEXT _onutGetFramebufferParameterivEXT

ONUT_FORCE_INLINE GLsizei _onutGetFramebufferPixelLocalStorageSizeEXT(GLuint target) {
    return onutGLAPI.onutGetFramebufferPixelLocalStorageSizeEXT(target);
}
#define glGetFramebufferPixelLocalStorageSizeEXT _onutGetFramebufferPixelLocalStorageSizeEXT

ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatusARB(void) {
    return onutGLAPI.onutGetGraphicsResetStatusARB();
}
#define glGetGraphicsResetStatusARB _onutGetGraphicsResetStatusARB

ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatusEXT(void) {
    return onutGLAPI.onutGetGraphicsResetStatusEXT();
}
#define glGetGraphicsResetStatusEXT _onutGetGraphicsResetStatusEXT

ONUT_FORCE_INLINE GLenum _onutGetGraphicsResetStatusKHR(void) {
    return onutGLAPI.onutGetGraphicsResetStatusKHR();
}
#define glGetGraphicsResetStatusKHR _onutGetGraphicsResetStatusKHR

ONUT_FORCE_INLINE GLhandleARB _onutGetHandleARB(GLenum pname) {
    return onutGLAPI.onutGetHandleARB(pname);
}
#define glGetHandleARB _onutGetHandleARB

ONUT_FORCE_INLINE void _onutGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) {
    onutGLAPI.onutGetHistogram(target, reset, format, type, values);
}
#define glGetHistogram _onutGetHistogram

ONUT_FORCE_INLINE void _onutGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) {
    onutGLAPI.onutGetHistogramEXT(target, reset, format, type, values);
}
#define glGetHistogramEXT _onutGetHistogramEXT

ONUT_FORCE_INLINE void _onutGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetHistogramParameterfv(target, pname, params);
}
#define glGetHistogramParameterfv _onutGetHistogramParameterfv

ONUT_FORCE_INLINE void _onutGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetHistogramParameterfvEXT(target, pname, params);
}
#define glGetHistogramParameterfvEXT _onutGetHistogramParameterfvEXT

ONUT_FORCE_INLINE void _onutGetHistogramParameteriv(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetHistogramParameteriv(target, pname, params);
}
#define glGetHistogramParameteriv _onutGetHistogramParameteriv

ONUT_FORCE_INLINE void _onutGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetHistogramParameterivEXT(target, pname, params);
}
#define glGetHistogramParameterivEXT _onutGetHistogramParameterivEXT

ONUT_FORCE_INLINE void _onutGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetHistogramParameterxvOES(target, pname, params);
}
#define glGetHistogramParameterxvOES _onutGetHistogramParameterxvOES

ONUT_FORCE_INLINE GLuint64 _onutGetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format) {
    return onutGLAPI.onutGetImageHandleARB(texture, level, layered, layer, format);
}
#define glGetImageHandleARB _onutGetImageHandleARB

ONUT_FORCE_INLINE GLuint64 _onutGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format) {
    return onutGLAPI.onutGetImageHandleNV(texture, level, layered, layer, format);
}
#define glGetImageHandleNV _onutGetImageHandleNV

ONUT_FORCE_INLINE void _onutGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetImageTransformParameterfvHP(target, pname, params);
}
#define glGetImageTransformParameterfvHP _onutGetImageTransformParameterfvHP

ONUT_FORCE_INLINE void _onutGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetImageTransformParameterivHP(target, pname, params);
}
#define glGetImageTransformParameterivHP _onutGetImageTransformParameterivHP

ONUT_FORCE_INLINE void _onutGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog) {
    onutGLAPI.onutGetInfoLogARB(obj, maxLength, length, infoLog);
}
#define glGetInfoLogARB _onutGetInfoLogARB

ONUT_FORCE_INLINE GLint _onutGetInstrumentsSGIX(void) {
    return onutGLAPI.onutGetInstrumentsSGIX();
}
#define glGetInstrumentsSGIX _onutGetInstrumentsSGIX

ONUT_FORCE_INLINE void _onutGetInteger64vAPPLE(GLenum pname, GLint64 *params) {
    onutGLAPI.onutGetInteger64vAPPLE(pname, params);
}
#define glGetInteger64vAPPLE _onutGetInteger64vAPPLE

ONUT_FORCE_INLINE void _onutGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint *data) {
    onutGLAPI.onutGetIntegerIndexedvEXT(target, index, data);
}
#define glGetIntegerIndexedvEXT _onutGetIntegerIndexedvEXT

ONUT_FORCE_INLINE void _onutGetIntegeri_vEXT(GLenum target, GLuint index, GLint *data) {
    onutGLAPI.onutGetIntegeri_vEXT(target, index, data);
}
#define glGetIntegeri_vEXT _onutGetIntegeri_vEXT

ONUT_FORCE_INLINE void _onutGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT *result) {
    onutGLAPI.onutGetIntegerui64i_vNV(value, index, result);
}
#define glGetIntegerui64i_vNV _onutGetIntegerui64i_vNV

ONUT_FORCE_INLINE void _onutGetIntegerui64vNV(GLenum value, GLuint64EXT *result) {
    onutGLAPI.onutGetIntegerui64vNV(value, result);
}
#define glGetIntegerui64vNV _onutGetIntegerui64vNV

ONUT_FORCE_INLINE void _onutGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params) {
    onutGLAPI.onutGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params);
}
#define glGetInternalformatSampleivNV _onutGetInternalformatSampleivNV

ONUT_FORCE_INLINE void _onutGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data) {
    onutGLAPI.onutGetInvariantBooleanvEXT(id, value, data);
}
#define glGetInvariantBooleanvEXT _onutGetInvariantBooleanvEXT

ONUT_FORCE_INLINE void _onutGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat *data) {
    onutGLAPI.onutGetInvariantFloatvEXT(id, value, data);
}
#define glGetInvariantFloatvEXT _onutGetInvariantFloatvEXT

ONUT_FORCE_INLINE void _onutGetInvariantIntegervEXT(GLuint id, GLenum value, GLint *data) {
    onutGLAPI.onutGetInvariantIntegervEXT(id, value, data);
}
#define glGetInvariantIntegervEXT _onutGetInvariantIntegervEXT

ONUT_FORCE_INLINE void _onutGetLightxOES(GLenum light, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetLightxOES(light, pname, params);
}
#define glGetLightxOES _onutGetLightxOES

ONUT_FORCE_INLINE void _onutGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetListParameterfvSGIX(list, pname, params);
}
#define glGetListParameterfvSGIX _onutGetListParameterfvSGIX

ONUT_FORCE_INLINE void _onutGetListParameterivSGIX(GLuint list, GLenum pname, GLint *params) {
    onutGLAPI.onutGetListParameterivSGIX(list, pname, params);
}
#define glGetListParameterivSGIX _onutGetListParameterivSGIX

ONUT_FORCE_INLINE void _onutGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean *data) {
    onutGLAPI.onutGetLocalConstantBooleanvEXT(id, value, data);
}
#define glGetLocalConstantBooleanvEXT _onutGetLocalConstantBooleanvEXT

ONUT_FORCE_INLINE void _onutGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat *data) {
    onutGLAPI.onutGetLocalConstantFloatvEXT(id, value, data);
}
#define glGetLocalConstantFloatvEXT _onutGetLocalConstantFloatvEXT

ONUT_FORCE_INLINE void _onutGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint *data) {
    onutGLAPI.onutGetLocalConstantIntegervEXT(id, value, data);
}
#define glGetLocalConstantIntegervEXT _onutGetLocalConstantIntegervEXT

ONUT_FORCE_INLINE void _onutGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMapAttribParameterfvNV(target, index, pname, params);
}
#define glGetMapAttribParameterfvNV _onutGetMapAttribParameterfvNV

ONUT_FORCE_INLINE void _onutGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMapAttribParameterivNV(target, index, pname, params);
}
#define glGetMapAttribParameterivNV _onutGetMapAttribParameterivNV

ONUT_FORCE_INLINE void _onutGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points) {
    onutGLAPI.onutGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points);
}
#define glGetMapControlPointsNV _onutGetMapControlPointsNV

ONUT_FORCE_INLINE void _onutGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMapParameterfvNV(target, pname, params);
}
#define glGetMapParameterfvNV _onutGetMapParameterfvNV

ONUT_FORCE_INLINE void _onutGetMapParameterivNV(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMapParameterivNV(target, pname, params);
}
#define glGetMapParameterivNV _onutGetMapParameterivNV

ONUT_FORCE_INLINE void _onutGetMapxvOES(GLenum target, GLenum query, GLfixed *v) {
    onutGLAPI.onutGetMapxvOES(target, query, v);
}
#define glGetMapxvOES _onutGetMapxvOES

ONUT_FORCE_INLINE void _onutGetMaterialxOES(GLenum face, GLenum pname, GLfixed param) {
    onutGLAPI.onutGetMaterialxOES(face, pname, param);
}
#define glGetMaterialxOES _onutGetMaterialxOES

ONUT_FORCE_INLINE void _onutGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMemoryObjectParameterivEXT(memoryObject, pname, params);
}
#define glGetMemoryObjectParameterivEXT _onutGetMemoryObjectParameterivEXT

ONUT_FORCE_INLINE void _onutGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) {
    onutGLAPI.onutGetMinmax(target, reset, format, type, values);
}
#define glGetMinmax _onutGetMinmax

ONUT_FORCE_INLINE void _onutGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values) {
    onutGLAPI.onutGetMinmaxEXT(target, reset, format, type, values);
}
#define glGetMinmaxEXT _onutGetMinmaxEXT

ONUT_FORCE_INLINE void _onutGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMinmaxParameterfv(target, pname, params);
}
#define glGetMinmaxParameterfv _onutGetMinmaxParameterfv

ONUT_FORCE_INLINE void _onutGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMinmaxParameterfvEXT(target, pname, params);
}
#define glGetMinmaxParameterfvEXT _onutGetMinmaxParameterfvEXT

ONUT_FORCE_INLINE void _onutGetMinmaxParameteriv(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMinmaxParameteriv(target, pname, params);
}
#define glGetMinmaxParameteriv _onutGetMinmaxParameteriv

ONUT_FORCE_INLINE void _onutGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMinmaxParameterivEXT(target, pname, params);
}
#define glGetMinmaxParameterivEXT _onutGetMinmaxParameterivEXT

ONUT_FORCE_INLINE void _onutGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMultiTexEnvfvEXT(texunit, target, pname, params);
}
#define glGetMultiTexEnvfvEXT _onutGetMultiTexEnvfvEXT

ONUT_FORCE_INLINE void _onutGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMultiTexEnvivEXT(texunit, target, pname, params);
}
#define glGetMultiTexEnvivEXT _onutGetMultiTexEnvivEXT

ONUT_FORCE_INLINE void _onutGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params) {
    onutGLAPI.onutGetMultiTexGendvEXT(texunit, coord, pname, params);
}
#define glGetMultiTexGendvEXT _onutGetMultiTexGendvEXT

ONUT_FORCE_INLINE void _onutGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMultiTexGenfvEXT(texunit, coord, pname, params);
}
#define glGetMultiTexGenfvEXT _onutGetMultiTexGenfvEXT

ONUT_FORCE_INLINE void _onutGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMultiTexGenivEXT(texunit, coord, pname, params);
}
#define glGetMultiTexGenivEXT _onutGetMultiTexGenivEXT

ONUT_FORCE_INLINE void _onutGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels) {
    onutGLAPI.onutGetMultiTexImageEXT(texunit, target, level, format, type, pixels);
}
#define glGetMultiTexImageEXT _onutGetMultiTexImageEXT

ONUT_FORCE_INLINE void _onutGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params);
}
#define glGetMultiTexLevelParameterfvEXT _onutGetMultiTexLevelParameterfvEXT

ONUT_FORCE_INLINE void _onutGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params);
}
#define glGetMultiTexLevelParameterivEXT _onutGetMultiTexLevelParameterivEXT

ONUT_FORCE_INLINE void _onutGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMultiTexParameterIivEXT(texunit, target, pname, params);
}
#define glGetMultiTexParameterIivEXT _onutGetMultiTexParameterIivEXT

ONUT_FORCE_INLINE void _onutGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetMultiTexParameterIuivEXT(texunit, target, pname, params);
}
#define glGetMultiTexParameterIuivEXT _onutGetMultiTexParameterIuivEXT

ONUT_FORCE_INLINE void _onutGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetMultiTexParameterfvEXT(texunit, target, pname, params);
}
#define glGetMultiTexParameterfvEXT _onutGetMultiTexParameterfvEXT

ONUT_FORCE_INLINE void _onutGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetMultiTexParameterivEXT(texunit, target, pname, params);
}
#define glGetMultiTexParameterivEXT _onutGetMultiTexParameterivEXT

ONUT_FORCE_INLINE void _onutGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat *val) {
    onutGLAPI.onutGetMultisamplefvNV(pname, index, val);
}
#define glGetMultisamplefvNV _onutGetMultisamplefvNV

ONUT_FORCE_INLINE void _onutGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint *params) {
    onutGLAPI.onutGetNamedBufferParameterivEXT(buffer, pname, params);
}
#define glGetNamedBufferParameterivEXT _onutGetNamedBufferParameterivEXT

ONUT_FORCE_INLINE void _onutGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT *params) {
    onutGLAPI.onutGetNamedBufferParameterui64vNV(buffer, pname, params);
}
#define glGetNamedBufferParameterui64vNV _onutGetNamedBufferParameterui64vNV

ONUT_FORCE_INLINE void _onutGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void **params) {
    onutGLAPI.onutGetNamedBufferPointervEXT(buffer, pname, params);
}
#define glGetNamedBufferPointervEXT _onutGetNamedBufferPointervEXT

ONUT_FORCE_INLINE void _onutGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data) {
    onutGLAPI.onutGetNamedBufferSubDataEXT(buffer, offset, size, data);
}
#define glGetNamedBufferSubDataEXT _onutGetNamedBufferSubDataEXT

ONUT_FORCE_INLINE void _onutGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params) {
    onutGLAPI.onutGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params);
}
#define glGetNamedFramebufferAttachmentParameterivEXT _onutGetNamedFramebufferAttachmentParameterivEXT

ONUT_FORCE_INLINE void _onutGetNamedFramebufferParameterfvAMD(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values) {
    onutGLAPI.onutGetNamedFramebufferParameterfvAMD(framebuffer, pname, numsamples, pixelindex, size, values);
}
#define glGetNamedFramebufferParameterfvAMD _onutGetNamedFramebufferParameterfvAMD

ONUT_FORCE_INLINE void _onutGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params) {
    onutGLAPI.onutGetNamedFramebufferParameterivEXT(framebuffer, pname, params);
}
#define glGetNamedFramebufferParameterivEXT _onutGetNamedFramebufferParameterivEXT

ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint *params) {
    onutGLAPI.onutGetNamedProgramLocalParameterIivEXT(program, target, index, params);
}
#define glGetNamedProgramLocalParameterIivEXT _onutGetNamedProgramLocalParameterIivEXT

ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint *params) {
    onutGLAPI.onutGetNamedProgramLocalParameterIuivEXT(program, target, index, params);
}
#define glGetNamedProgramLocalParameterIuivEXT _onutGetNamedProgramLocalParameterIuivEXT

ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble *params) {
    onutGLAPI.onutGetNamedProgramLocalParameterdvEXT(program, target, index, params);
}
#define glGetNamedProgramLocalParameterdvEXT _onutGetNamedProgramLocalParameterdvEXT

ONUT_FORCE_INLINE void _onutGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat *params) {
    onutGLAPI.onutGetNamedProgramLocalParameterfvEXT(program, target, index, params);
}
#define glGetNamedProgramLocalParameterfvEXT _onutGetNamedProgramLocalParameterfvEXT

ONUT_FORCE_INLINE void _onutGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void *string) {
    onutGLAPI.onutGetNamedProgramStringEXT(program, target, pname, string);
}
#define glGetNamedProgramStringEXT _onutGetNamedProgramStringEXT

ONUT_FORCE_INLINE void _onutGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetNamedProgramivEXT(program, target, pname, params);
}
#define glGetNamedProgramivEXT _onutGetNamedProgramivEXT

ONUT_FORCE_INLINE void _onutGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint *params) {
    onutGLAPI.onutGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params);
}
#define glGetNamedRenderbufferParameterivEXT _onutGetNamedRenderbufferParameterivEXT

ONUT_FORCE_INLINE void _onutGetNamedStringARB(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string) {
    onutGLAPI.onutGetNamedStringARB(namelen, name, bufSize, stringlen, string);
}
#define glGetNamedStringARB _onutGetNamedStringARB

ONUT_FORCE_INLINE void _onutGetNamedStringivARB(GLint namelen, const GLchar *name, GLenum pname, GLint *params) {
    onutGLAPI.onutGetNamedStringivARB(namelen, name, pname, params);
}
#define glGetNamedStringivARB _onutGetNamedStringivARB

ONUT_FORCE_INLINE void _onutGetNextPerfQueryIdINTEL(GLuint queryId, GLuint *nextQueryId) {
    onutGLAPI.onutGetNextPerfQueryIdINTEL(queryId, nextQueryId);
}
#define glGetNextPerfQueryIdINTEL _onutGetNextPerfQueryIdINTEL

ONUT_FORCE_INLINE void _onutGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetObjectBufferfvATI(buffer, pname, params);
}
#define glGetObjectBufferfvATI _onutGetObjectBufferfvATI

ONUT_FORCE_INLINE void _onutGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint *params) {
    onutGLAPI.onutGetObjectBufferivATI(buffer, pname, params);
}
#define glGetObjectBufferivATI _onutGetObjectBufferivATI

ONUT_FORCE_INLINE void _onutGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label) {
    onutGLAPI.onutGetObjectLabelEXT(type, object, bufSize, length, label);
}
#define glGetObjectLabelEXT _onutGetObjectLabelEXT

ONUT_FORCE_INLINE void _onutGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label) {
    onutGLAPI.onutGetObjectLabelKHR(identifier, name, bufSize, length, label);
}
#define glGetObjectLabelKHR _onutGetObjectLabelKHR

ONUT_FORCE_INLINE void _onutGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetObjectParameterfvARB(obj, pname, params);
}
#define glGetObjectParameterfvARB _onutGetObjectParameterfvARB

ONUT_FORCE_INLINE void _onutGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint *params) {
    onutGLAPI.onutGetObjectParameterivAPPLE(objectType, name, pname, params);
}
#define glGetObjectParameterivAPPLE _onutGetObjectParameterivAPPLE

ONUT_FORCE_INLINE void _onutGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params) {
    onutGLAPI.onutGetObjectParameterivARB(obj, pname, params);
}
#define glGetObjectParameterivARB _onutGetObjectParameterivARB

ONUT_FORCE_INLINE void _onutGetObjectPtrLabelKHR(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label) {
    onutGLAPI.onutGetObjectPtrLabelKHR(ptr, bufSize, length, label);
}
#define glGetObjectPtrLabelKHR _onutGetObjectPtrLabelKHR

ONUT_FORCE_INLINE void _onutGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint *params) {
    onutGLAPI.onutGetOcclusionQueryivNV(id, pname, params);
}
#define glGetOcclusionQueryivNV _onutGetOcclusionQueryivNV

ONUT_FORCE_INLINE void _onutGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetOcclusionQueryuivNV(id, pname, params);
}
#define glGetOcclusionQueryuivNV _onutGetOcclusionQueryuivNV

ONUT_FORCE_INLINE void _onutGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat *value) {
    onutGLAPI.onutGetPathColorGenfvNV(color, pname, value);
}
#define glGetPathColorGenfvNV _onutGetPathColorGenfvNV

ONUT_FORCE_INLINE void _onutGetPathColorGenivNV(GLenum color, GLenum pname, GLint *value) {
    onutGLAPI.onutGetPathColorGenivNV(color, pname, value);
}
#define glGetPathColorGenivNV _onutGetPathColorGenivNV

ONUT_FORCE_INLINE void _onutGetPathCommandsNV(GLuint path, GLubyte *commands) {
    onutGLAPI.onutGetPathCommandsNV(path, commands);
}
#define glGetPathCommandsNV _onutGetPathCommandsNV

ONUT_FORCE_INLINE void _onutGetPathCoordsNV(GLuint path, GLfloat *coords) {
    onutGLAPI.onutGetPathCoordsNV(path, coords);
}
#define glGetPathCoordsNV _onutGetPathCoordsNV

ONUT_FORCE_INLINE void _onutGetPathDashArrayNV(GLuint path, GLfloat *dashArray) {
    onutGLAPI.onutGetPathDashArrayNV(path, dashArray);
}
#define glGetPathDashArrayNV _onutGetPathDashArrayNV

ONUT_FORCE_INLINE GLfloat _onutGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments) {
    return onutGLAPI.onutGetPathLengthNV(path, startSegment, numSegments);
}
#define glGetPathLengthNV _onutGetPathLengthNV

ONUT_FORCE_INLINE void _onutGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics) {
    onutGLAPI.onutGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics);
}
#define glGetPathMetricRangeNV _onutGetPathMetricRangeNV

ONUT_FORCE_INLINE void _onutGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics) {
    onutGLAPI.onutGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics);
}
#define glGetPathMetricsNV _onutGetPathMetricsNV

ONUT_FORCE_INLINE void _onutGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat *value) {
    onutGLAPI.onutGetPathParameterfvNV(path, pname, value);
}
#define glGetPathParameterfvNV _onutGetPathParameterfvNV

ONUT_FORCE_INLINE void _onutGetPathParameterivNV(GLuint path, GLenum pname, GLint *value) {
    onutGLAPI.onutGetPathParameterivNV(path, pname, value);
}
#define glGetPathParameterivNV _onutGetPathParameterivNV

ONUT_FORCE_INLINE void _onutGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing) {
    onutGLAPI.onutGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing);
}
#define glGetPathSpacingNV _onutGetPathSpacingNV

ONUT_FORCE_INLINE void _onutGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat *value) {
    onutGLAPI.onutGetPathTexGenfvNV(texCoordSet, pname, value);
}
#define glGetPathTexGenfvNV _onutGetPathTexGenfvNV

ONUT_FORCE_INLINE void _onutGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint *value) {
    onutGLAPI.onutGetPathTexGenivNV(texCoordSet, pname, value);
}
#define glGetPathTexGenivNV _onutGetPathTexGenivNV

ONUT_FORCE_INLINE void _onutGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue) {
    onutGLAPI.onutGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
}
#define glGetPerfCounterInfoINTEL _onutGetPerfCounterInfoINTEL

ONUT_FORCE_INLINE void _onutGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten) {
    onutGLAPI.onutGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten);
}
#define glGetPerfMonitorCounterDataAMD _onutGetPerfMonitorCounterDataAMD

ONUT_FORCE_INLINE void _onutGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void *data) {
    onutGLAPI.onutGetPerfMonitorCounterInfoAMD(group, counter, pname, data);
}
#define glGetPerfMonitorCounterInfoAMD _onutGetPerfMonitorCounterInfoAMD

ONUT_FORCE_INLINE void _onutGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString) {
    onutGLAPI.onutGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString);
}
#define glGetPerfMonitorCounterStringAMD _onutGetPerfMonitorCounterStringAMD

ONUT_FORCE_INLINE void _onutGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters) {
    onutGLAPI.onutGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters);
}
#define glGetPerfMonitorCountersAMD _onutGetPerfMonitorCountersAMD

ONUT_FORCE_INLINE void _onutGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString) {
    onutGLAPI.onutGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString);
}
#define glGetPerfMonitorGroupStringAMD _onutGetPerfMonitorGroupStringAMD

ONUT_FORCE_INLINE void _onutGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups) {
    onutGLAPI.onutGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups);
}
#define glGetPerfMonitorGroupsAMD _onutGetPerfMonitorGroupsAMD

ONUT_FORCE_INLINE void _onutGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten) {
    onutGLAPI.onutGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten);
}
#define glGetPerfQueryDataINTEL _onutGetPerfQueryDataINTEL

ONUT_FORCE_INLINE void _onutGetPerfQueryIdByNameINTEL(GLchar *queryName, GLuint *queryId) {
    onutGLAPI.onutGetPerfQueryIdByNameINTEL(queryName, queryId);
}
#define glGetPerfQueryIdByNameINTEL _onutGetPerfQueryIdByNameINTEL

ONUT_FORCE_INLINE void _onutGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask) {
    onutGLAPI.onutGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask);
}
#define glGetPerfQueryInfoINTEL _onutGetPerfQueryInfoINTEL

ONUT_FORCE_INLINE void _onutGetPixelMapxv(GLenum map, GLint size, GLfixed *values) {
    onutGLAPI.onutGetPixelMapxv(map, size, values);
}
#define glGetPixelMapxv _onutGetPixelMapxv

ONUT_FORCE_INLINE void _onutGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetPixelTexGenParameterfvSGIS(pname, params);
}
#define glGetPixelTexGenParameterfvSGIS _onutGetPixelTexGenParameterfvSGIS

ONUT_FORCE_INLINE void _onutGetPixelTexGenParameterivSGIS(GLenum pname, GLint *params) {
    onutGLAPI.onutGetPixelTexGenParameterivSGIS(pname, params);
}
#define glGetPixelTexGenParameterivSGIS _onutGetPixelTexGenParameterivSGIS

ONUT_FORCE_INLINE void _onutGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetPixelTransformParameterfvEXT(target, pname, params);
}
#define glGetPixelTransformParameterfvEXT _onutGetPixelTransformParameterfvEXT

ONUT_FORCE_INLINE void _onutGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetPixelTransformParameterivEXT(target, pname, params);
}
#define glGetPixelTransformParameterivEXT _onutGetPixelTransformParameterivEXT

ONUT_FORCE_INLINE void _onutGetPointerIndexedvEXT(GLenum target, GLuint index, void **data) {
    onutGLAPI.onutGetPointerIndexedvEXT(target, index, data);
}
#define glGetPointerIndexedvEXT _onutGetPointerIndexedvEXT

ONUT_FORCE_INLINE void _onutGetPointeri_vEXT(GLenum pname, GLuint index, void **params) {
    onutGLAPI.onutGetPointeri_vEXT(pname, index, params);
}
#define glGetPointeri_vEXT _onutGetPointeri_vEXT

ONUT_FORCE_INLINE void _onutGetPointervEXT(GLenum pname, void **params) {
    onutGLAPI.onutGetPointervEXT(pname, params);
}
#define glGetPointervEXT _onutGetPointervEXT

ONUT_FORCE_INLINE void _onutGetPointervKHR(GLenum pname, void **params) {
    onutGLAPI.onutGetPointervKHR(pname, params);
}
#define glGetPointervKHR _onutGetPointervKHR

ONUT_FORCE_INLINE void _onutGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary) {
    onutGLAPI.onutGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary);
}
#define glGetProgramBinaryOES _onutGetProgramBinaryOES

ONUT_FORCE_INLINE void _onutGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint *params) {
    onutGLAPI.onutGetProgramEnvParameterIivNV(target, index, params);
}
#define glGetProgramEnvParameterIivNV _onutGetProgramEnvParameterIivNV

ONUT_FORCE_INLINE void _onutGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint *params) {
    onutGLAPI.onutGetProgramEnvParameterIuivNV(target, index, params);
}
#define glGetProgramEnvParameterIuivNV _onutGetProgramEnvParameterIuivNV

ONUT_FORCE_INLINE void _onutGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params) {
    onutGLAPI.onutGetProgramEnvParameterdvARB(target, index, params);
}
#define glGetProgramEnvParameterdvARB _onutGetProgramEnvParameterdvARB

ONUT_FORCE_INLINE void _onutGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params) {
    onutGLAPI.onutGetProgramEnvParameterfvARB(target, index, params);
}
#define glGetProgramEnvParameterfvARB _onutGetProgramEnvParameterfvARB

ONUT_FORCE_INLINE void _onutGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint *params) {
    onutGLAPI.onutGetProgramLocalParameterIivNV(target, index, params);
}
#define glGetProgramLocalParameterIivNV _onutGetProgramLocalParameterIivNV

ONUT_FORCE_INLINE void _onutGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint *params) {
    onutGLAPI.onutGetProgramLocalParameterIuivNV(target, index, params);
}
#define glGetProgramLocalParameterIuivNV _onutGetProgramLocalParameterIuivNV

ONUT_FORCE_INLINE void _onutGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params) {
    onutGLAPI.onutGetProgramLocalParameterdvARB(target, index, params);
}
#define glGetProgramLocalParameterdvARB _onutGetProgramLocalParameterdvARB

ONUT_FORCE_INLINE void _onutGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params) {
    onutGLAPI.onutGetProgramLocalParameterfvARB(target, index, params);
}
#define glGetProgramLocalParameterfvARB _onutGetProgramLocalParameterfvARB

ONUT_FORCE_INLINE void _onutGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params) {
    onutGLAPI.onutGetProgramNamedParameterdvNV(id, len, name, params);
}
#define glGetProgramNamedParameterdvNV _onutGetProgramNamedParameterdvNV

ONUT_FORCE_INLINE void _onutGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params) {
    onutGLAPI.onutGetProgramNamedParameterfvNV(id, len, name, params);
}
#define glGetProgramNamedParameterfvNV _onutGetProgramNamedParameterfvNV

ONUT_FORCE_INLINE void _onutGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble *params) {
    onutGLAPI.onutGetProgramParameterdvNV(target, index, pname, params);
}
#define glGetProgramParameterdvNV _onutGetProgramParameterdvNV

ONUT_FORCE_INLINE void _onutGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetProgramParameterfvNV(target, index, pname, params);
}
#define glGetProgramParameterfvNV _onutGetProgramParameterfvNV

ONUT_FORCE_INLINE void _onutGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog) {
    onutGLAPI.onutGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog);
}
#define glGetProgramPipelineInfoLogEXT _onutGetProgramPipelineInfoLogEXT

ONUT_FORCE_INLINE void _onutGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint *params) {
    onutGLAPI.onutGetProgramPipelineivEXT(pipeline, pname, params);
}
#define glGetProgramPipelineivEXT _onutGetProgramPipelineivEXT

ONUT_FORCE_INLINE GLint _onutGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar *name) {
    return onutGLAPI.onutGetProgramResourceLocationIndexEXT(program, programInterface, name);
}
#define glGetProgramResourceLocationIndexEXT _onutGetProgramResourceLocationIndexEXT

ONUT_FORCE_INLINE void _onutGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params) {
    onutGLAPI.onutGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params);
}
#define glGetProgramResourcefvNV _onutGetProgramResourcefvNV

ONUT_FORCE_INLINE void _onutGetProgramStringARB(GLenum target, GLenum pname, void *string) {
    onutGLAPI.onutGetProgramStringARB(target, pname, string);
}
#define glGetProgramStringARB _onutGetProgramStringARB

ONUT_FORCE_INLINE void _onutGetProgramStringNV(GLuint id, GLenum pname, GLubyte *program) {
    onutGLAPI.onutGetProgramStringNV(id, pname, program);
}
#define glGetProgramStringNV _onutGetProgramStringNV

ONUT_FORCE_INLINE void _onutGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint *param) {
    onutGLAPI.onutGetProgramSubroutineParameteruivNV(target, index, param);
}
#define glGetProgramSubroutineParameteruivNV _onutGetProgramSubroutineParameteruivNV

ONUT_FORCE_INLINE void _onutGetProgramivARB(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetProgramivARB(target, pname, params);
}
#define glGetProgramivARB _onutGetProgramivARB

ONUT_FORCE_INLINE void _onutGetProgramivNV(GLuint id, GLenum pname, GLint *params) {
    onutGLAPI.onutGetProgramivNV(id, pname, params);
}
#define glGetProgramivNV _onutGetProgramivNV

ONUT_FORCE_INLINE void _onutGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 *params) {
    onutGLAPI.onutGetQueryObjecti64vEXT(id, pname, params);
}
#define glGetQueryObjecti64vEXT _onutGetQueryObjecti64vEXT

ONUT_FORCE_INLINE void _onutGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params) {
    onutGLAPI.onutGetQueryObjectivARB(id, pname, params);
}
#define glGetQueryObjectivARB _onutGetQueryObjectivARB

ONUT_FORCE_INLINE void _onutGetQueryObjectivEXT(GLuint id, GLenum pname, GLint *params) {
    onutGLAPI.onutGetQueryObjectivEXT(id, pname, params);
}
#define glGetQueryObjectivEXT _onutGetQueryObjectivEXT

ONUT_FORCE_INLINE void _onutGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 *params) {
    onutGLAPI.onutGetQueryObjectui64vEXT(id, pname, params);
}
#define glGetQueryObjectui64vEXT _onutGetQueryObjectui64vEXT

ONUT_FORCE_INLINE void _onutGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetQueryObjectuivARB(id, pname, params);
}
#define glGetQueryObjectuivARB _onutGetQueryObjectuivARB

ONUT_FORCE_INLINE void _onutGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetQueryObjectuivEXT(id, pname, params);
}
#define glGetQueryObjectuivEXT _onutGetQueryObjectuivEXT

ONUT_FORCE_INLINE void _onutGetQueryivARB(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetQueryivARB(target, pname, params);
}
#define glGetQueryivARB _onutGetQueryivARB

ONUT_FORCE_INLINE void _onutGetQueryivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetQueryivEXT(target, pname, params);
}
#define glGetQueryivEXT _onutGetQueryivEXT

ONUT_FORCE_INLINE void _onutGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetRenderbufferParameterivEXT(target, pname, params);
}
#define glGetRenderbufferParameterivEXT _onutGetRenderbufferParameterivEXT

ONUT_FORCE_INLINE void _onutGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint *params) {
    onutGLAPI.onutGetSamplerParameterIivEXT(sampler, pname, params);
}
#define glGetSamplerParameterIivEXT _onutGetSamplerParameterIivEXT

ONUT_FORCE_INLINE void _onutGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint *params) {
    onutGLAPI.onutGetSamplerParameterIivOES(sampler, pname, params);
}
#define glGetSamplerParameterIivOES _onutGetSamplerParameterIivOES

ONUT_FORCE_INLINE void _onutGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetSamplerParameterIuivEXT(sampler, pname, params);
}
#define glGetSamplerParameterIuivEXT _onutGetSamplerParameterIuivEXT

ONUT_FORCE_INLINE void _onutGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetSamplerParameterIuivOES(sampler, pname, params);
}
#define glGetSamplerParameterIuivOES _onutGetSamplerParameterIuivOES

ONUT_FORCE_INLINE void _onutGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 *params) {
    onutGLAPI.onutGetSemaphoreParameterui64vEXT(semaphore, pname, params);
}
#define glGetSemaphoreParameterui64vEXT _onutGetSemaphoreParameterui64vEXT

ONUT_FORCE_INLINE void _onutGetSeparableFilter(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span) {
    onutGLAPI.onutGetSeparableFilter(target, format, type, row, column, span);
}
#define glGetSeparableFilter _onutGetSeparableFilter

ONUT_FORCE_INLINE void _onutGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span) {
    onutGLAPI.onutGetSeparableFilterEXT(target, format, type, row, column, span);
}
#define glGetSeparableFilterEXT _onutGetSeparableFilterEXT

ONUT_FORCE_INLINE void _onutGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source) {
    onutGLAPI.onutGetShaderSourceARB(obj, maxLength, length, source);
}
#define glGetShaderSourceARB _onutGetShaderSourceARB

ONUT_FORCE_INLINE void _onutGetSharpenTexFuncSGIS(GLenum target, GLfloat *points) {
    onutGLAPI.onutGetSharpenTexFuncSGIS(target, points);
}
#define glGetSharpenTexFuncSGIS _onutGetSharpenTexFuncSGIS

ONUT_FORCE_INLINE GLushort _onutGetStageIndexNV(GLenum shadertype) {
    return onutGLAPI.onutGetStageIndexNV(shadertype);
}
#define glGetStageIndexNV _onutGetStageIndexNV

ONUT_FORCE_INLINE void _onutGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) {
    onutGLAPI.onutGetSyncivAPPLE(sync, pname, bufSize, length, values);
}
#define glGetSyncivAPPLE _onutGetSyncivAPPLE

ONUT_FORCE_INLINE void _onutGetTexBumpParameterfvATI(GLenum pname, GLfloat *param) {
    onutGLAPI.onutGetTexBumpParameterfvATI(pname, param);
}
#define glGetTexBumpParameterfvATI _onutGetTexBumpParameterfvATI

ONUT_FORCE_INLINE void _onutGetTexBumpParameterivATI(GLenum pname, GLint *param) {
    onutGLAPI.onutGetTexBumpParameterivATI(pname, param);
}
#define glGetTexBumpParameterivATI _onutGetTexBumpParameterivATI

ONUT_FORCE_INLINE void _onutGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetTexEnvxvOES(target, pname, params);
}
#define glGetTexEnvxvOES _onutGetTexEnvxvOES

ONUT_FORCE_INLINE void _onutGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat *weights) {
    onutGLAPI.onutGetTexFilterFuncSGIS(target, filter, weights);
}
#define glGetTexFilterFuncSGIS _onutGetTexFilterFuncSGIS

ONUT_FORCE_INLINE void _onutGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetTexGenxvOES(coord, pname, params);
}
#define glGetTexGenxvOES _onutGetTexGenxvOES

ONUT_FORCE_INLINE void _onutGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetTexLevelParameterxvOES(target, level, pname, params);
}
#define glGetTexLevelParameterxvOES _onutGetTexLevelParameterxvOES

ONUT_FORCE_INLINE void _onutGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetTexParameterIivEXT(target, pname, params);
}
#define glGetTexParameterIivEXT _onutGetTexParameterIivEXT

ONUT_FORCE_INLINE void _onutGetTexParameterIivOES(GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetTexParameterIivOES(target, pname, params);
}
#define glGetTexParameterIivOES _onutGetTexParameterIivOES

ONUT_FORCE_INLINE void _onutGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetTexParameterIuivEXT(target, pname, params);
}
#define glGetTexParameterIuivEXT _onutGetTexParameterIuivEXT

ONUT_FORCE_INLINE void _onutGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetTexParameterIuivOES(target, pname, params);
}
#define glGetTexParameterIuivOES _onutGetTexParameterIuivOES

ONUT_FORCE_INLINE void _onutGetTexParameterPointervAPPLE(GLenum target, GLenum pname, void **params) {
    onutGLAPI.onutGetTexParameterPointervAPPLE(target, pname, params);
}
#define glGetTexParameterPointervAPPLE _onutGetTexParameterPointervAPPLE

ONUT_FORCE_INLINE void _onutGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params) {
    onutGLAPI.onutGetTexParameterxvOES(target, pname, params);
}
#define glGetTexParameterxvOES _onutGetTexParameterxvOES

ONUT_FORCE_INLINE GLuint64 _onutGetTextureHandleARB(GLuint texture) {
    return onutGLAPI.onutGetTextureHandleARB(texture);
}
#define glGetTextureHandleARB _onutGetTextureHandleARB

ONUT_FORCE_INLINE GLuint64 _onutGetTextureHandleIMG(GLuint texture) {
    return onutGLAPI.onutGetTextureHandleIMG(texture);
}
#define glGetTextureHandleIMG _onutGetTextureHandleIMG

ONUT_FORCE_INLINE GLuint64 _onutGetTextureHandleNV(GLuint texture) {
    return onutGLAPI.onutGetTextureHandleNV(texture);
}
#define glGetTextureHandleNV _onutGetTextureHandleNV

ONUT_FORCE_INLINE void _onutGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels) {
    onutGLAPI.onutGetTextureImageEXT(texture, target, level, format, type, pixels);
}
#define glGetTextureImageEXT _onutGetTextureImageEXT

ONUT_FORCE_INLINE void _onutGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetTextureLevelParameterfvEXT(texture, target, level, pname, params);
}
#define glGetTextureLevelParameterfvEXT _onutGetTextureLevelParameterfvEXT

ONUT_FORCE_INLINE void _onutGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params) {
    onutGLAPI.onutGetTextureLevelParameterivEXT(texture, target, level, pname, params);
}
#define glGetTextureLevelParameterivEXT _onutGetTextureLevelParameterivEXT

ONUT_FORCE_INLINE void _onutGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetTextureParameterIivEXT(texture, target, pname, params);
}
#define glGetTextureParameterIivEXT _onutGetTextureParameterIivEXT

ONUT_FORCE_INLINE void _onutGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetTextureParameterIuivEXT(texture, target, pname, params);
}
#define glGetTextureParameterIuivEXT _onutGetTextureParameterIuivEXT

ONUT_FORCE_INLINE void _onutGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetTextureParameterfvEXT(texture, target, pname, params);
}
#define glGetTextureParameterfvEXT _onutGetTextureParameterfvEXT

ONUT_FORCE_INLINE void _onutGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params) {
    onutGLAPI.onutGetTextureParameterivEXT(texture, target, pname, params);
}
#define glGetTextureParameterivEXT _onutGetTextureParameterivEXT

ONUT_FORCE_INLINE GLuint64 _onutGetTextureSamplerHandleARB(GLuint texture, GLuint sampler) {
    return onutGLAPI.onutGetTextureSamplerHandleARB(texture, sampler);
}
#define glGetTextureSamplerHandleARB _onutGetTextureSamplerHandleARB

ONUT_FORCE_INLINE GLuint64 _onutGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler) {
    return onutGLAPI.onutGetTextureSamplerHandleIMG(texture, sampler);
}
#define glGetTextureSamplerHandleIMG _onutGetTextureSamplerHandleIMG

ONUT_FORCE_INLINE GLuint64 _onutGetTextureSamplerHandleNV(GLuint texture, GLuint sampler) {
    return onutGLAPI.onutGetTextureSamplerHandleNV(texture, sampler);
}
#define glGetTextureSamplerHandleNV _onutGetTextureSamplerHandleNV

ONUT_FORCE_INLINE void _onutGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint *params) {
    onutGLAPI.onutGetTrackMatrixivNV(target, address, pname, params);
}
#define glGetTrackMatrixivNV _onutGetTrackMatrixivNV

ONUT_FORCE_INLINE void _onutGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) {
    onutGLAPI.onutGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name);
}
#define glGetTransformFeedbackVaryingEXT _onutGetTransformFeedbackVaryingEXT

ONUT_FORCE_INLINE void _onutGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint *location) {
    onutGLAPI.onutGetTransformFeedbackVaryingNV(program, index, location);
}
#define glGetTransformFeedbackVaryingNV _onutGetTransformFeedbackVaryingNV

ONUT_FORCE_INLINE void _onutGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source) {
    onutGLAPI.onutGetTranslatedShaderSourceANGLE(shader, bufsize, length, source);
}
#define glGetTranslatedShaderSourceANGLE _onutGetTranslatedShaderSourceANGLE

ONUT_FORCE_INLINE GLint _onutGetUniformBufferSizeEXT(GLuint program, GLint location) {
    return onutGLAPI.onutGetUniformBufferSizeEXT(program, location);
}
#define glGetUniformBufferSizeEXT _onutGetUniformBufferSizeEXT

ONUT_FORCE_INLINE GLint _onutGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name) {
    return onutGLAPI.onutGetUniformLocationARB(programObj, name);
}
#define glGetUniformLocationARB _onutGetUniformLocationARB

ONUT_FORCE_INLINE GLintptr _onutGetUniformOffsetEXT(GLuint program, GLint location) {
    return onutGLAPI.onutGetUniformOffsetEXT(program, location);
}
#define glGetUniformOffsetEXT _onutGetUniformOffsetEXT

ONUT_FORCE_INLINE void _onutGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params) {
    onutGLAPI.onutGetUniformfvARB(programObj, location, params);
}
#define glGetUniformfvARB _onutGetUniformfvARB

ONUT_FORCE_INLINE void _onutGetUniformi64vARB(GLuint program, GLint location, GLint64 *params) {
    onutGLAPI.onutGetUniformi64vARB(program, location, params);
}
#define glGetUniformi64vARB _onutGetUniformi64vARB

ONUT_FORCE_INLINE void _onutGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params) {
    onutGLAPI.onutGetUniformi64vNV(program, location, params);
}
#define glGetUniformi64vNV _onutGetUniformi64vNV

ONUT_FORCE_INLINE void _onutGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params) {
    onutGLAPI.onutGetUniformivARB(programObj, location, params);
}
#define glGetUniformivARB _onutGetUniformivARB

ONUT_FORCE_INLINE void _onutGetUniformui64vARB(GLuint program, GLint location, GLuint64 *params) {
    onutGLAPI.onutGetUniformui64vARB(program, location, params);
}
#define glGetUniformui64vARB _onutGetUniformui64vARB

ONUT_FORCE_INLINE void _onutGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT *params) {
    onutGLAPI.onutGetUniformui64vNV(program, location, params);
}
#define glGetUniformui64vNV _onutGetUniformui64vNV

ONUT_FORCE_INLINE void _onutGetUniformuivEXT(GLuint program, GLint location, GLuint *params) {
    onutGLAPI.onutGetUniformuivEXT(program, location, params);
}
#define glGetUniformuivEXT _onutGetUniformuivEXT

ONUT_FORCE_INLINE void _onutGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte *data) {
    onutGLAPI.onutGetUnsignedBytei_vEXT(target, index, data);
}
#define glGetUnsignedBytei_vEXT _onutGetUnsignedBytei_vEXT

ONUT_FORCE_INLINE void _onutGetUnsignedBytevEXT(GLenum pname, GLubyte *data) {
    onutGLAPI.onutGetUnsignedBytevEXT(pname, data);
}
#define glGetUnsignedBytevEXT _onutGetUnsignedBytevEXT

ONUT_FORCE_INLINE void _onutGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetVariantArrayObjectfvATI(id, pname, params);
}
#define glGetVariantArrayObjectfvATI _onutGetVariantArrayObjectfvATI

ONUT_FORCE_INLINE void _onutGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVariantArrayObjectivATI(id, pname, params);
}
#define glGetVariantArrayObjectivATI _onutGetVariantArrayObjectivATI

ONUT_FORCE_INLINE void _onutGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data) {
    onutGLAPI.onutGetVariantBooleanvEXT(id, value, data);
}
#define glGetVariantBooleanvEXT _onutGetVariantBooleanvEXT

ONUT_FORCE_INLINE void _onutGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat *data) {
    onutGLAPI.onutGetVariantFloatvEXT(id, value, data);
}
#define glGetVariantFloatvEXT _onutGetVariantFloatvEXT

ONUT_FORCE_INLINE void _onutGetVariantIntegervEXT(GLuint id, GLenum value, GLint *data) {
    onutGLAPI.onutGetVariantIntegervEXT(id, value, data);
}
#define glGetVariantIntegervEXT _onutGetVariantIntegervEXT

ONUT_FORCE_INLINE void _onutGetVariantPointervEXT(GLuint id, GLenum value, void **data) {
    onutGLAPI.onutGetVariantPointervEXT(id, value, data);
}
#define glGetVariantPointervEXT _onutGetVariantPointervEXT

ONUT_FORCE_INLINE GLint _onutGetVaryingLocationNV(GLuint program, const GLchar *name) {
    return onutGLAPI.onutGetVaryingLocationNV(program, name);
}
#define glGetVaryingLocationNV _onutGetVaryingLocationNV

ONUT_FORCE_INLINE void _onutGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint *param) {
    onutGLAPI.onutGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param);
}
#define glGetVertexArrayIntegeri_vEXT _onutGetVertexArrayIntegeri_vEXT

ONUT_FORCE_INLINE void _onutGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint *param) {
    onutGLAPI.onutGetVertexArrayIntegervEXT(vaobj, pname, param);
}
#define glGetVertexArrayIntegervEXT _onutGetVertexArrayIntegervEXT

ONUT_FORCE_INLINE void _onutGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void **param) {
    onutGLAPI.onutGetVertexArrayPointeri_vEXT(vaobj, index, pname, param);
}
#define glGetVertexArrayPointeri_vEXT _onutGetVertexArrayPointeri_vEXT

ONUT_FORCE_INLINE void _onutGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void **param) {
    onutGLAPI.onutGetVertexArrayPointervEXT(vaobj, pname, param);
}
#define glGetVertexArrayPointervEXT _onutGetVertexArrayPointervEXT

ONUT_FORCE_INLINE void _onutGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetVertexAttribArrayObjectfvATI(index, pname, params);
}
#define glGetVertexAttribArrayObjectfvATI _onutGetVertexAttribArrayObjectfvATI

ONUT_FORCE_INLINE void _onutGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVertexAttribArrayObjectivATI(index, pname, params);
}
#define glGetVertexAttribArrayObjectivATI _onutGetVertexAttribArrayObjectivATI

ONUT_FORCE_INLINE void _onutGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVertexAttribIivEXT(index, pname, params);
}
#define glGetVertexAttribIivEXT _onutGetVertexAttribIivEXT

ONUT_FORCE_INLINE void _onutGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetVertexAttribIuivEXT(index, pname, params);
}
#define glGetVertexAttribIuivEXT _onutGetVertexAttribIuivEXT

ONUT_FORCE_INLINE void _onutGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble *params) {
    onutGLAPI.onutGetVertexAttribLdvEXT(index, pname, params);
}
#define glGetVertexAttribLdvEXT _onutGetVertexAttribLdvEXT

ONUT_FORCE_INLINE void _onutGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT *params) {
    onutGLAPI.onutGetVertexAttribLi64vNV(index, pname, params);
}
#define glGetVertexAttribLi64vNV _onutGetVertexAttribLi64vNV

ONUT_FORCE_INLINE void _onutGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT *params) {
    onutGLAPI.onutGetVertexAttribLui64vARB(index, pname, params);
}
#define glGetVertexAttribLui64vARB _onutGetVertexAttribLui64vARB

ONUT_FORCE_INLINE void _onutGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT *params) {
    onutGLAPI.onutGetVertexAttribLui64vNV(index, pname, params);
}
#define glGetVertexAttribLui64vNV _onutGetVertexAttribLui64vNV

ONUT_FORCE_INLINE void _onutGetVertexAttribPointervARB(GLuint index, GLenum pname, void **pointer) {
    onutGLAPI.onutGetVertexAttribPointervARB(index, pname, pointer);
}
#define glGetVertexAttribPointervARB _onutGetVertexAttribPointervARB

ONUT_FORCE_INLINE void _onutGetVertexAttribPointervNV(GLuint index, GLenum pname, void **pointer) {
    onutGLAPI.onutGetVertexAttribPointervNV(index, pname, pointer);
}
#define glGetVertexAttribPointervNV _onutGetVertexAttribPointervNV

ONUT_FORCE_INLINE void _onutGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params) {
    onutGLAPI.onutGetVertexAttribdvARB(index, pname, params);
}
#define glGetVertexAttribdvARB _onutGetVertexAttribdvARB

ONUT_FORCE_INLINE void _onutGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble *params) {
    onutGLAPI.onutGetVertexAttribdvNV(index, pname, params);
}
#define glGetVertexAttribdvNV _onutGetVertexAttribdvNV

ONUT_FORCE_INLINE void _onutGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetVertexAttribfvARB(index, pname, params);
}
#define glGetVertexAttribfvARB _onutGetVertexAttribfvARB

ONUT_FORCE_INLINE void _onutGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetVertexAttribfvNV(index, pname, params);
}
#define glGetVertexAttribfvNV _onutGetVertexAttribfvNV

ONUT_FORCE_INLINE void _onutGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVertexAttribivARB(index, pname, params);
}
#define glGetVertexAttribivARB _onutGetVertexAttribivARB

ONUT_FORCE_INLINE void _onutGetVertexAttribivNV(GLuint index, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVertexAttribivNV(index, pname, params);
}
#define glGetVertexAttribivNV _onutGetVertexAttribivNV

ONUT_FORCE_INLINE void _onutGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params) {
    onutGLAPI.onutGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params);
}
#define glGetVideoCaptureStreamdvNV _onutGetVideoCaptureStreamdvNV

ONUT_FORCE_INLINE void _onutGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params) {
    onutGLAPI.onutGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params);
}
#define glGetVideoCaptureStreamfvNV _onutGetVideoCaptureStreamfvNV

ONUT_FORCE_INLINE void _onutGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params);
}
#define glGetVideoCaptureStreamivNV _onutGetVideoCaptureStreamivNV

ONUT_FORCE_INLINE void _onutGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVideoCaptureivNV(video_capture_slot, pname, params);
}
#define glGetVideoCaptureivNV _onutGetVideoCaptureivNV

ONUT_FORCE_INLINE void _onutGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT *params) {
    onutGLAPI.onutGetVideoi64vNV(video_slot, pname, params);
}
#define glGetVideoi64vNV _onutGetVideoi64vNV

ONUT_FORCE_INLINE void _onutGetVideoivNV(GLuint video_slot, GLenum pname, GLint *params) {
    onutGLAPI.onutGetVideoivNV(video_slot, pname, params);
}
#define glGetVideoivNV _onutGetVideoivNV

ONUT_FORCE_INLINE void _onutGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT *params) {
    onutGLAPI.onutGetVideoui64vNV(video_slot, pname, params);
}
#define glGetVideoui64vNV _onutGetVideoui64vNV

ONUT_FORCE_INLINE void _onutGetVideouivNV(GLuint video_slot, GLenum pname, GLuint *params) {
    onutGLAPI.onutGetVideouivNV(video_slot, pname, params);
}
#define glGetVideouivNV _onutGetVideouivNV

ONUT_FORCE_INLINE GLVULKANPROCNV _onutGetVkProcAddrNV(const GLchar *name) {
    return onutGLAPI.onutGetVkProcAddrNV(name);
}
#define glGetVkProcAddrNV _onutGetVkProcAddrNV

ONUT_FORCE_INLINE void _onutGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table) {
    onutGLAPI.onutGetnColorTableARB(target, format, type, bufSize, table);
}
#define glGetnColorTableARB _onutGetnColorTableARB

ONUT_FORCE_INLINE void _onutGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void *img) {
    onutGLAPI.onutGetnCompressedTexImageARB(target, lod, bufSize, img);
}
#define glGetnCompressedTexImageARB _onutGetnCompressedTexImageARB

ONUT_FORCE_INLINE void _onutGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image) {
    onutGLAPI.onutGetnConvolutionFilterARB(target, format, type, bufSize, image);
}
#define glGetnConvolutionFilterARB _onutGetnConvolutionFilterARB

ONUT_FORCE_INLINE void _onutGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values) {
    onutGLAPI.onutGetnHistogramARB(target, reset, format, type, bufSize, values);
}
#define glGetnHistogramARB _onutGetnHistogramARB

ONUT_FORCE_INLINE void _onutGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v) {
    onutGLAPI.onutGetnMapdvARB(target, query, bufSize, v);
}
#define glGetnMapdvARB _onutGetnMapdvARB

ONUT_FORCE_INLINE void _onutGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v) {
    onutGLAPI.onutGetnMapfvARB(target, query, bufSize, v);
}
#define glGetnMapfvARB _onutGetnMapfvARB

ONUT_FORCE_INLINE void _onutGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint *v) {
    onutGLAPI.onutGetnMapivARB(target, query, bufSize, v);
}
#define glGetnMapivARB _onutGetnMapivARB

ONUT_FORCE_INLINE void _onutGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values) {
    onutGLAPI.onutGetnMinmaxARB(target, reset, format, type, bufSize, values);
}
#define glGetnMinmaxARB _onutGetnMinmaxARB

ONUT_FORCE_INLINE void _onutGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat *values) {
    onutGLAPI.onutGetnPixelMapfvARB(map, bufSize, values);
}
#define glGetnPixelMapfvARB _onutGetnPixelMapfvARB

ONUT_FORCE_INLINE void _onutGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint *values) {
    onutGLAPI.onutGetnPixelMapuivARB(map, bufSize, values);
}
#define glGetnPixelMapuivARB _onutGetnPixelMapuivARB

ONUT_FORCE_INLINE void _onutGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort *values) {
    onutGLAPI.onutGetnPixelMapusvARB(map, bufSize, values);
}
#define glGetnPixelMapusvARB _onutGetnPixelMapusvARB

ONUT_FORCE_INLINE void _onutGetnPolygonStippleARB(GLsizei bufSize, GLubyte *pattern) {
    onutGLAPI.onutGetnPolygonStippleARB(bufSize, pattern);
}
#define glGetnPolygonStippleARB _onutGetnPolygonStippleARB

ONUT_FORCE_INLINE void _onutGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span) {
    onutGLAPI.onutGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span);
}
#define glGetnSeparableFilterARB _onutGetnSeparableFilterARB

ONUT_FORCE_INLINE void _onutGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img) {
    onutGLAPI.onutGetnTexImageARB(target, level, format, type, bufSize, img);
}
#define glGetnTexImageARB _onutGetnTexImageARB

ONUT_FORCE_INLINE void _onutGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble *params) {
    onutGLAPI.onutGetnUniformdvARB(program, location, bufSize, params);
}
#define glGetnUniformdvARB _onutGetnUniformdvARB

ONUT_FORCE_INLINE void _onutGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) {
    onutGLAPI.onutGetnUniformfvARB(program, location, bufSize, params);
}
#define glGetnUniformfvARB _onutGetnUniformfvARB

ONUT_FORCE_INLINE void _onutGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) {
    onutGLAPI.onutGetnUniformfvEXT(program, location, bufSize, params);
}
#define glGetnUniformfvEXT _onutGetnUniformfvEXT

ONUT_FORCE_INLINE void _onutGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat *params) {
    onutGLAPI.onutGetnUniformfvKHR(program, location, bufSize, params);
}
#define glGetnUniformfvKHR _onutGetnUniformfvKHR

ONUT_FORCE_INLINE void _onutGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 *params) {
    onutGLAPI.onutGetnUniformi64vARB(program, location, bufSize, params);
}
#define glGetnUniformi64vARB _onutGetnUniformi64vARB

ONUT_FORCE_INLINE void _onutGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint *params) {
    onutGLAPI.onutGetnUniformivARB(program, location, bufSize, params);
}
#define glGetnUniformivARB _onutGetnUniformivARB

ONUT_FORCE_INLINE void _onutGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint *params) {
    onutGLAPI.onutGetnUniformivEXT(program, location, bufSize, params);
}
#define glGetnUniformivEXT _onutGetnUniformivEXT

ONUT_FORCE_INLINE void _onutGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint *params) {
    onutGLAPI.onutGetnUniformivKHR(program, location, bufSize, params);
}
#define glGetnUniformivKHR _onutGetnUniformivKHR

ONUT_FORCE_INLINE void _onutGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params) {
    onutGLAPI.onutGetnUniformui64vARB(program, location, bufSize, params);
}
#define glGetnUniformui64vARB _onutGetnUniformui64vARB

ONUT_FORCE_INLINE void _onutGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint *params) {
    onutGLAPI.onutGetnUniformuivARB(program, location, bufSize, params);
}
#define glGetnUniformuivARB _onutGetnUniformuivARB

ONUT_FORCE_INLINE void _onutGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint *params) {
    onutGLAPI.onutGetnUniformuivKHR(program, location, bufSize, params);
}
#define glGetnUniformuivKHR _onutGetnUniformuivKHR

ONUT_FORCE_INLINE void _onutGlobalAlphaFactorbSUN(GLbyte factor) {
    onutGLAPI.onutGlobalAlphaFactorbSUN(factor);
}
#define glGlobalAlphaFactorbSUN _onutGlobalAlphaFactorbSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactordSUN(GLdouble factor) {
    onutGLAPI.onutGlobalAlphaFactordSUN(factor);
}
#define glGlobalAlphaFactordSUN _onutGlobalAlphaFactordSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactorfSUN(GLfloat factor) {
    onutGLAPI.onutGlobalAlphaFactorfSUN(factor);
}
#define glGlobalAlphaFactorfSUN _onutGlobalAlphaFactorfSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactoriSUN(GLint factor) {
    onutGLAPI.onutGlobalAlphaFactoriSUN(factor);
}
#define glGlobalAlphaFactoriSUN _onutGlobalAlphaFactoriSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactorsSUN(GLshort factor) {
    onutGLAPI.onutGlobalAlphaFactorsSUN(factor);
}
#define glGlobalAlphaFactorsSUN _onutGlobalAlphaFactorsSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactorubSUN(GLubyte factor) {
    onutGLAPI.onutGlobalAlphaFactorubSUN(factor);
}
#define glGlobalAlphaFactorubSUN _onutGlobalAlphaFactorubSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactoruiSUN(GLuint factor) {
    onutGLAPI.onutGlobalAlphaFactoruiSUN(factor);
}
#define glGlobalAlphaFactoruiSUN _onutGlobalAlphaFactoruiSUN

ONUT_FORCE_INLINE void _onutGlobalAlphaFactorusSUN(GLushort factor) {
    onutGLAPI.onutGlobalAlphaFactorusSUN(factor);
}
#define glGlobalAlphaFactorusSUN _onutGlobalAlphaFactorusSUN

ONUT_FORCE_INLINE void _onutHintPGI(GLenum target, GLint mode) {
    onutGLAPI.onutHintPGI(target, mode);
}
#define glHintPGI _onutHintPGI

ONUT_FORCE_INLINE void _onutHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) {
    onutGLAPI.onutHistogram(target, width, internalformat, sink);
}
#define glHistogram _onutHistogram

ONUT_FORCE_INLINE void _onutHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink) {
    onutGLAPI.onutHistogramEXT(target, width, internalformat, sink);
}
#define glHistogramEXT _onutHistogramEXT

ONUT_FORCE_INLINE void _onutIglooInterfaceSGIX(GLenum pname, const void *params) {
    onutGLAPI.onutIglooInterfaceSGIX(pname, params);
}
#define glIglooInterfaceSGIX _onutIglooInterfaceSGIX

ONUT_FORCE_INLINE void _onutImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param) {
    onutGLAPI.onutImageTransformParameterfHP(target, pname, param);
}
#define glImageTransformParameterfHP _onutImageTransformParameterfHP

ONUT_FORCE_INLINE void _onutImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutImageTransformParameterfvHP(target, pname, params);
}
#define glImageTransformParameterfvHP _onutImageTransformParameterfvHP

ONUT_FORCE_INLINE void _onutImageTransformParameteriHP(GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutImageTransformParameteriHP(target, pname, param);
}
#define glImageTransformParameteriHP _onutImageTransformParameteriHP

ONUT_FORCE_INLINE void _onutImageTransformParameterivHP(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutImageTransformParameterivHP(target, pname, params);
}
#define glImageTransformParameterivHP _onutImageTransformParameterivHP

ONUT_FORCE_INLINE void _onutImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd) {
    onutGLAPI.onutImportMemoryFdEXT(memory, size, handleType, fd);
}
#define glImportMemoryFdEXT _onutImportMemoryFdEXT

ONUT_FORCE_INLINE void _onutImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType, void *handle) {
    onutGLAPI.onutImportMemoryWin32HandleEXT(memory, size, handleType, handle);
}
#define glImportMemoryWin32HandleEXT _onutImportMemoryWin32HandleEXT

ONUT_FORCE_INLINE void _onutImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType, const void *name) {
    onutGLAPI.onutImportMemoryWin32NameEXT(memory, size, handleType, name);
}
#define glImportMemoryWin32NameEXT _onutImportMemoryWin32NameEXT

ONUT_FORCE_INLINE void _onutImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd) {
    onutGLAPI.onutImportSemaphoreFdEXT(semaphore, handleType, fd);
}
#define glImportSemaphoreFdEXT _onutImportSemaphoreFdEXT

ONUT_FORCE_INLINE void _onutImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType, void *handle) {
    onutGLAPI.onutImportSemaphoreWin32HandleEXT(semaphore, handleType, handle);
}
#define glImportSemaphoreWin32HandleEXT _onutImportSemaphoreWin32HandleEXT

ONUT_FORCE_INLINE void _onutImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType, const void *name) {
    onutGLAPI.onutImportSemaphoreWin32NameEXT(semaphore, handleType, name);
}
#define glImportSemaphoreWin32NameEXT _onutImportSemaphoreWin32NameEXT

ONUT_FORCE_INLINE GLsync _onutImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags) {
    return onutGLAPI.onutImportSyncEXT(external_sync_type, external_sync, flags);
}
#define glImportSyncEXT _onutImportSyncEXT

ONUT_FORCE_INLINE void _onutIndexFormatNV(GLenum type, GLsizei stride) {
    onutGLAPI.onutIndexFormatNV(type, stride);
}
#define glIndexFormatNV _onutIndexFormatNV

ONUT_FORCE_INLINE void _onutIndexFuncEXT(GLenum func, GLclampf ref) {
    onutGLAPI.onutIndexFuncEXT(func, ref);
}
#define glIndexFuncEXT _onutIndexFuncEXT

ONUT_FORCE_INLINE void _onutIndexMaterialEXT(GLenum face, GLenum mode) {
    onutGLAPI.onutIndexMaterialEXT(face, mode);
}
#define glIndexMaterialEXT _onutIndexMaterialEXT

ONUT_FORCE_INLINE void _onutIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer) {
    onutGLAPI.onutIndexPointerEXT(type, stride, count, pointer);
}
#define glIndexPointerEXT _onutIndexPointerEXT

ONUT_FORCE_INLINE void _onutIndexPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutIndexPointerListIBM(type, stride, pointer, ptrstride);
}
#define glIndexPointerListIBM _onutIndexPointerListIBM

ONUT_FORCE_INLINE void _onutIndexxOES(GLfixed component) {
    onutGLAPI.onutIndexxOES(component);
}
#define glIndexxOES _onutIndexxOES

ONUT_FORCE_INLINE void _onutIndexxvOES(const GLfixed *component) {
    onutGLAPI.onutIndexxvOES(component);
}
#define glIndexxvOES _onutIndexxvOES

ONUT_FORCE_INLINE void _onutInsertComponentEXT(GLuint res, GLuint src, GLuint num) {
    onutGLAPI.onutInsertComponentEXT(res, src, num);
}
#define glInsertComponentEXT _onutInsertComponentEXT

ONUT_FORCE_INLINE void _onutInsertEventMarkerEXT(GLsizei length, const GLchar *marker) {
    onutGLAPI.onutInsertEventMarkerEXT(length, marker);
}
#define glInsertEventMarkerEXT _onutInsertEventMarkerEXT

ONUT_FORCE_INLINE void _onutInstrumentsBufferSGIX(GLsizei size, GLint *buffer) {
    onutGLAPI.onutInstrumentsBufferSGIX(size, buffer);
}
#define glInstrumentsBufferSGIX _onutInstrumentsBufferSGIX

ONUT_FORCE_INLINE void _onutInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight) {
    onutGLAPI.onutInterpolatePathsNV(resultPath, pathA, pathB, weight);
}
#define glInterpolatePathsNV _onutInterpolatePathsNV

ONUT_FORCE_INLINE GLboolean _onutIsAsyncMarkerSGIX(GLuint marker) {
    return onutGLAPI.onutIsAsyncMarkerSGIX(marker);
}
#define glIsAsyncMarkerSGIX _onutIsAsyncMarkerSGIX

ONUT_FORCE_INLINE GLboolean _onutIsBufferARB(GLuint buffer) {
    return onutGLAPI.onutIsBufferARB(buffer);
}
#define glIsBufferARB _onutIsBufferARB

ONUT_FORCE_INLINE GLboolean _onutIsBufferResidentNV(GLenum target) {
    return onutGLAPI.onutIsBufferResidentNV(target);
}
#define glIsBufferResidentNV _onutIsBufferResidentNV

ONUT_FORCE_INLINE GLboolean _onutIsCommandListNV(GLuint list) {
    return onutGLAPI.onutIsCommandListNV(list);
}
#define glIsCommandListNV _onutIsCommandListNV

ONUT_FORCE_INLINE GLboolean _onutIsEnabledIndexedEXT(GLenum target, GLuint index) {
    return onutGLAPI.onutIsEnabledIndexedEXT(target, index);
}
#define glIsEnabledIndexedEXT _onutIsEnabledIndexedEXT

ONUT_FORCE_INLINE GLboolean _onutIsEnablediEXT(GLenum target, GLuint index) {
    return onutGLAPI.onutIsEnablediEXT(target, index);
}
#define glIsEnablediEXT _onutIsEnablediEXT

ONUT_FORCE_INLINE GLboolean _onutIsEnablediNV(GLenum target, GLuint index) {
    return onutGLAPI.onutIsEnablediNV(target, index);
}
#define glIsEnablediNV _onutIsEnablediNV

ONUT_FORCE_INLINE GLboolean _onutIsEnablediOES(GLenum target, GLuint index) {
    return onutGLAPI.onutIsEnablediOES(target, index);
}
#define glIsEnablediOES _onutIsEnablediOES

ONUT_FORCE_INLINE GLboolean _onutIsFenceAPPLE(GLuint fence) {
    return onutGLAPI.onutIsFenceAPPLE(fence);
}
#define glIsFenceAPPLE _onutIsFenceAPPLE

ONUT_FORCE_INLINE GLboolean _onutIsFenceNV(GLuint fence) {
    return onutGLAPI.onutIsFenceNV(fence);
}
#define glIsFenceNV _onutIsFenceNV

ONUT_FORCE_INLINE GLboolean _onutIsFramebufferEXT(GLuint framebuffer) {
    return onutGLAPI.onutIsFramebufferEXT(framebuffer);
}
#define glIsFramebufferEXT _onutIsFramebufferEXT

ONUT_FORCE_INLINE GLboolean _onutIsImageHandleResidentARB(GLuint64 handle) {
    return onutGLAPI.onutIsImageHandleResidentARB(handle);
}
#define glIsImageHandleResidentARB _onutIsImageHandleResidentARB

ONUT_FORCE_INLINE GLboolean _onutIsImageHandleResidentNV(GLuint64 handle) {
    return onutGLAPI.onutIsImageHandleResidentNV(handle);
}
#define glIsImageHandleResidentNV _onutIsImageHandleResidentNV

ONUT_FORCE_INLINE GLboolean _onutIsMemoryObjectEXT(GLuint memoryObject) {
    return onutGLAPI.onutIsMemoryObjectEXT(memoryObject);
}
#define glIsMemoryObjectEXT _onutIsMemoryObjectEXT

ONUT_FORCE_INLINE GLboolean _onutIsNameAMD(GLenum identifier, GLuint name) {
    return onutGLAPI.onutIsNameAMD(identifier, name);
}
#define glIsNameAMD _onutIsNameAMD

ONUT_FORCE_INLINE GLboolean _onutIsNamedBufferResidentNV(GLuint buffer) {
    return onutGLAPI.onutIsNamedBufferResidentNV(buffer);
}
#define glIsNamedBufferResidentNV _onutIsNamedBufferResidentNV

ONUT_FORCE_INLINE GLboolean _onutIsNamedStringARB(GLint namelen, const GLchar *name) {
    return onutGLAPI.onutIsNamedStringARB(namelen, name);
}
#define glIsNamedStringARB _onutIsNamedStringARB

ONUT_FORCE_INLINE GLboolean _onutIsObjectBufferATI(GLuint buffer) {
    return onutGLAPI.onutIsObjectBufferATI(buffer);
}
#define glIsObjectBufferATI _onutIsObjectBufferATI

ONUT_FORCE_INLINE GLboolean _onutIsOcclusionQueryNV(GLuint id) {
    return onutGLAPI.onutIsOcclusionQueryNV(id);
}
#define glIsOcclusionQueryNV _onutIsOcclusionQueryNV

ONUT_FORCE_INLINE GLboolean _onutIsPathNV(GLuint path) {
    return onutGLAPI.onutIsPathNV(path);
}
#define glIsPathNV _onutIsPathNV

ONUT_FORCE_INLINE GLboolean _onutIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y) {
    return onutGLAPI.onutIsPointInFillPathNV(path, mask, x, y);
}
#define glIsPointInFillPathNV _onutIsPointInFillPathNV

ONUT_FORCE_INLINE GLboolean _onutIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y) {
    return onutGLAPI.onutIsPointInStrokePathNV(path, x, y);
}
#define glIsPointInStrokePathNV _onutIsPointInStrokePathNV

ONUT_FORCE_INLINE GLboolean _onutIsProgramARB(GLuint program) {
    return onutGLAPI.onutIsProgramARB(program);
}
#define glIsProgramARB _onutIsProgramARB

ONUT_FORCE_INLINE GLboolean _onutIsProgramNV(GLuint id) {
    return onutGLAPI.onutIsProgramNV(id);
}
#define glIsProgramNV _onutIsProgramNV

ONUT_FORCE_INLINE GLboolean _onutIsProgramPipelineEXT(GLuint pipeline) {
    return onutGLAPI.onutIsProgramPipelineEXT(pipeline);
}
#define glIsProgramPipelineEXT _onutIsProgramPipelineEXT

ONUT_FORCE_INLINE GLboolean _onutIsQueryARB(GLuint id) {
    return onutGLAPI.onutIsQueryARB(id);
}
#define glIsQueryARB _onutIsQueryARB

ONUT_FORCE_INLINE GLboolean _onutIsQueryEXT(GLuint id) {
    return onutGLAPI.onutIsQueryEXT(id);
}
#define glIsQueryEXT _onutIsQueryEXT

ONUT_FORCE_INLINE GLboolean _onutIsRenderbufferEXT(GLuint renderbuffer) {
    return onutGLAPI.onutIsRenderbufferEXT(renderbuffer);
}
#define glIsRenderbufferEXT _onutIsRenderbufferEXT

ONUT_FORCE_INLINE GLboolean _onutIsSemaphoreEXT(GLuint semaphore) {
    return onutGLAPI.onutIsSemaphoreEXT(semaphore);
}
#define glIsSemaphoreEXT _onutIsSemaphoreEXT

ONUT_FORCE_INLINE GLboolean _onutIsStateNV(GLuint state) {
    return onutGLAPI.onutIsStateNV(state);
}
#define glIsStateNV _onutIsStateNV

ONUT_FORCE_INLINE GLboolean _onutIsSyncAPPLE(GLsync sync) {
    return onutGLAPI.onutIsSyncAPPLE(sync);
}
#define glIsSyncAPPLE _onutIsSyncAPPLE

ONUT_FORCE_INLINE GLboolean _onutIsTextureEXT(GLuint texture) {
    return onutGLAPI.onutIsTextureEXT(texture);
}
#define glIsTextureEXT _onutIsTextureEXT

ONUT_FORCE_INLINE GLboolean _onutIsTextureHandleResidentARB(GLuint64 handle) {
    return onutGLAPI.onutIsTextureHandleResidentARB(handle);
}
#define glIsTextureHandleResidentARB _onutIsTextureHandleResidentARB

ONUT_FORCE_INLINE GLboolean _onutIsTextureHandleResidentNV(GLuint64 handle) {
    return onutGLAPI.onutIsTextureHandleResidentNV(handle);
}
#define glIsTextureHandleResidentNV _onutIsTextureHandleResidentNV

ONUT_FORCE_INLINE GLboolean _onutIsTransformFeedbackNV(GLuint id) {
    return onutGLAPI.onutIsTransformFeedbackNV(id);
}
#define glIsTransformFeedbackNV _onutIsTransformFeedbackNV

ONUT_FORCE_INLINE GLboolean _onutIsVariantEnabledEXT(GLuint id, GLenum cap) {
    return onutGLAPI.onutIsVariantEnabledEXT(id, cap);
}
#define glIsVariantEnabledEXT _onutIsVariantEnabledEXT

ONUT_FORCE_INLINE GLboolean _onutIsVertexArrayAPPLE(GLuint array) {
    return onutGLAPI.onutIsVertexArrayAPPLE(array);
}
#define glIsVertexArrayAPPLE _onutIsVertexArrayAPPLE

ONUT_FORCE_INLINE GLboolean _onutIsVertexArrayOES(GLuint array) {
    return onutGLAPI.onutIsVertexArrayOES(array);
}
#define glIsVertexArrayOES _onutIsVertexArrayOES

ONUT_FORCE_INLINE GLboolean _onutIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname) {
    return onutGLAPI.onutIsVertexAttribEnabledAPPLE(index, pname);
}
#define glIsVertexAttribEnabledAPPLE _onutIsVertexAttribEnabledAPPLE

ONUT_FORCE_INLINE void _onutLGPUCopyImageSubDataNVX(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth) {
    onutGLAPI.onutLGPUCopyImageSubDataNVX(sourceGpu, destinationGpuMask, srcName, srcTarget, srcLevel, srcX, srxY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
}
#define glLGPUCopyImageSubDataNVX _onutLGPUCopyImageSubDataNVX

ONUT_FORCE_INLINE void _onutLGPUInterlockNVX(void) {
    onutGLAPI.onutLGPUInterlockNVX();
}
#define glLGPUInterlockNVX _onutLGPUInterlockNVX

ONUT_FORCE_INLINE void _onutLGPUNamedBufferSubDataNVX(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data) {
    onutGLAPI.onutLGPUNamedBufferSubDataNVX(gpuMask, buffer, offset, size, data);
}
#define glLGPUNamedBufferSubDataNVX _onutLGPUNamedBufferSubDataNVX

ONUT_FORCE_INLINE void _onutLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar *label) {
    onutGLAPI.onutLabelObjectEXT(type, object, length, label);
}
#define glLabelObjectEXT _onutLabelObjectEXT

ONUT_FORCE_INLINE void _onutLightEnviSGIX(GLenum pname, GLint param) {
    onutGLAPI.onutLightEnviSGIX(pname, param);
}
#define glLightEnviSGIX _onutLightEnviSGIX

ONUT_FORCE_INLINE void _onutLightModelxOES(GLenum pname, GLfixed param) {
    onutGLAPI.onutLightModelxOES(pname, param);
}
#define glLightModelxOES _onutLightModelxOES

ONUT_FORCE_INLINE void _onutLightModelxvOES(GLenum pname, const GLfixed *param) {
    onutGLAPI.onutLightModelxvOES(pname, param);
}
#define glLightModelxvOES _onutLightModelxvOES

ONUT_FORCE_INLINE void _onutLightxOES(GLenum light, GLenum pname, GLfixed param) {
    onutGLAPI.onutLightxOES(light, pname, param);
}
#define glLightxOES _onutLightxOES

ONUT_FORCE_INLINE void _onutLightxvOES(GLenum light, GLenum pname, const GLfixed *params) {
    onutGLAPI.onutLightxvOES(light, pname, params);
}
#define glLightxvOES _onutLightxvOES

ONUT_FORCE_INLINE void _onutLineWidthxOES(GLfixed width) {
    onutGLAPI.onutLineWidthxOES(width);
}
#define glLineWidthxOES _onutLineWidthxOES

ONUT_FORCE_INLINE void _onutLinkProgramARB(GLhandleARB programObj) {
    onutGLAPI.onutLinkProgramARB(programObj);
}
#define glLinkProgramARB _onutLinkProgramARB

ONUT_FORCE_INLINE void _onutListDrawCommandsStatesClientNV(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count) {
    onutGLAPI.onutListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count);
}
#define glListDrawCommandsStatesClientNV _onutListDrawCommandsStatesClientNV

ONUT_FORCE_INLINE void _onutListParameterfSGIX(GLuint list, GLenum pname, GLfloat param) {
    onutGLAPI.onutListParameterfSGIX(list, pname, param);
}
#define glListParameterfSGIX _onutListParameterfSGIX

ONUT_FORCE_INLINE void _onutListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutListParameterfvSGIX(list, pname, params);
}
#define glListParameterfvSGIX _onutListParameterfvSGIX

ONUT_FORCE_INLINE void _onutListParameteriSGIX(GLuint list, GLenum pname, GLint param) {
    onutGLAPI.onutListParameteriSGIX(list, pname, param);
}
#define glListParameteriSGIX _onutListParameteriSGIX

ONUT_FORCE_INLINE void _onutListParameterivSGIX(GLuint list, GLenum pname, const GLint *params) {
    onutGLAPI.onutListParameterivSGIX(list, pname, params);
}
#define glListParameterivSGIX _onutListParameterivSGIX

ONUT_FORCE_INLINE void _onutLoadIdentityDeformationMapSGIX(GLbitfield mask) {
    onutGLAPI.onutLoadIdentityDeformationMapSGIX(mask);
}
#define glLoadIdentityDeformationMapSGIX _onutLoadIdentityDeformationMapSGIX

ONUT_FORCE_INLINE void _onutLoadMatrixxOES(const GLfixed *m) {
    onutGLAPI.onutLoadMatrixxOES(m);
}
#define glLoadMatrixxOES _onutLoadMatrixxOES

ONUT_FORCE_INLINE void _onutLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte *program) {
    onutGLAPI.onutLoadProgramNV(target, id, len, program);
}
#define glLoadProgramNV _onutLoadProgramNV

ONUT_FORCE_INLINE void _onutLoadTransposeMatrixdARB(const GLdouble *m) {
    onutGLAPI.onutLoadTransposeMatrixdARB(m);
}
#define glLoadTransposeMatrixdARB _onutLoadTransposeMatrixdARB

ONUT_FORCE_INLINE void _onutLoadTransposeMatrixfARB(const GLfloat *m) {
    onutGLAPI.onutLoadTransposeMatrixfARB(m);
}
#define glLoadTransposeMatrixfARB _onutLoadTransposeMatrixfARB

ONUT_FORCE_INLINE void _onutLoadTransposeMatrixxOES(const GLfixed *m) {
    onutGLAPI.onutLoadTransposeMatrixxOES(m);
}
#define glLoadTransposeMatrixxOES _onutLoadTransposeMatrixxOES

ONUT_FORCE_INLINE void _onutLockArraysEXT(GLint first, GLsizei count) {
    onutGLAPI.onutLockArraysEXT(first, count);
}
#define glLockArraysEXT _onutLockArraysEXT

ONUT_FORCE_INLINE void _onutMakeBufferNonResidentNV(GLenum target) {
    onutGLAPI.onutMakeBufferNonResidentNV(target);
}
#define glMakeBufferNonResidentNV _onutMakeBufferNonResidentNV

ONUT_FORCE_INLINE void _onutMakeBufferResidentNV(GLenum target, GLenum access) {
    onutGLAPI.onutMakeBufferResidentNV(target, access);
}
#define glMakeBufferResidentNV _onutMakeBufferResidentNV

ONUT_FORCE_INLINE void _onutMakeImageHandleNonResidentARB(GLuint64 handle) {
    onutGLAPI.onutMakeImageHandleNonResidentARB(handle);
}
#define glMakeImageHandleNonResidentARB _onutMakeImageHandleNonResidentARB

ONUT_FORCE_INLINE void _onutMakeImageHandleNonResidentNV(GLuint64 handle) {
    onutGLAPI.onutMakeImageHandleNonResidentNV(handle);
}
#define glMakeImageHandleNonResidentNV _onutMakeImageHandleNonResidentNV

ONUT_FORCE_INLINE void _onutMakeImageHandleResidentARB(GLuint64 handle, GLenum access) {
    onutGLAPI.onutMakeImageHandleResidentARB(handle, access);
}
#define glMakeImageHandleResidentARB _onutMakeImageHandleResidentARB

ONUT_FORCE_INLINE void _onutMakeImageHandleResidentNV(GLuint64 handle, GLenum access) {
    onutGLAPI.onutMakeImageHandleResidentNV(handle, access);
}
#define glMakeImageHandleResidentNV _onutMakeImageHandleResidentNV

ONUT_FORCE_INLINE void _onutMakeNamedBufferNonResidentNV(GLuint buffer) {
    onutGLAPI.onutMakeNamedBufferNonResidentNV(buffer);
}
#define glMakeNamedBufferNonResidentNV _onutMakeNamedBufferNonResidentNV

ONUT_FORCE_INLINE void _onutMakeNamedBufferResidentNV(GLuint buffer, GLenum access) {
    onutGLAPI.onutMakeNamedBufferResidentNV(buffer, access);
}
#define glMakeNamedBufferResidentNV _onutMakeNamedBufferResidentNV

ONUT_FORCE_INLINE void _onutMakeTextureHandleNonResidentARB(GLuint64 handle) {
    onutGLAPI.onutMakeTextureHandleNonResidentARB(handle);
}
#define glMakeTextureHandleNonResidentARB _onutMakeTextureHandleNonResidentARB

ONUT_FORCE_INLINE void _onutMakeTextureHandleNonResidentNV(GLuint64 handle) {
    onutGLAPI.onutMakeTextureHandleNonResidentNV(handle);
}
#define glMakeTextureHandleNonResidentNV _onutMakeTextureHandleNonResidentNV

ONUT_FORCE_INLINE void _onutMakeTextureHandleResidentARB(GLuint64 handle) {
    onutGLAPI.onutMakeTextureHandleResidentARB(handle);
}
#define glMakeTextureHandleResidentARB _onutMakeTextureHandleResidentARB

ONUT_FORCE_INLINE void _onutMakeTextureHandleResidentNV(GLuint64 handle) {
    onutGLAPI.onutMakeTextureHandleResidentNV(handle);
}
#define glMakeTextureHandleResidentNV _onutMakeTextureHandleResidentNV

ONUT_FORCE_INLINE void _onutMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points) {
    onutGLAPI.onutMap1xOES(target, u1, u2, stride, order, points);
}
#define glMap1xOES _onutMap1xOES

ONUT_FORCE_INLINE void _onutMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points) {
    onutGLAPI.onutMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}
#define glMap2xOES _onutMap2xOES

ONUT_FORCE_INLINE void *_onutMapBufferARB(GLenum target, GLenum access) {
    return onutGLAPI.onutMapBufferARB(target, access);
}
#define glMapBufferARB _onutMapBufferARB

ONUT_FORCE_INLINE void *_onutMapBufferOES(GLenum target, GLenum access) {
    return onutGLAPI.onutMapBufferOES(target, access);
}
#define glMapBufferOES _onutMapBufferOES

ONUT_FORCE_INLINE void *_onutMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) {
    return onutGLAPI.onutMapBufferRangeEXT(target, offset, length, access);
}
#define glMapBufferRangeEXT _onutMapBufferRangeEXT

ONUT_FORCE_INLINE void _onutMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points) {
    onutGLAPI.onutMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points);
}
#define glMapControlPointsNV _onutMapControlPointsNV

ONUT_FORCE_INLINE void _onutMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2) {
    onutGLAPI.onutMapGrid1xOES(n, u1, u2);
}
#define glMapGrid1xOES _onutMapGrid1xOES

ONUT_FORCE_INLINE void _onutMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2) {
    onutGLAPI.onutMapGrid2xOES(n, u1, u2, v1, v2);
}
#define glMapGrid2xOES _onutMapGrid2xOES

ONUT_FORCE_INLINE void *_onutMapNamedBufferEXT(GLuint buffer, GLenum access) {
    return onutGLAPI.onutMapNamedBufferEXT(buffer, access);
}
#define glMapNamedBufferEXT _onutMapNamedBufferEXT

ONUT_FORCE_INLINE void *_onutMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access) {
    return onutGLAPI.onutMapNamedBufferRangeEXT(buffer, offset, length, access);
}
#define glMapNamedBufferRangeEXT _onutMapNamedBufferRangeEXT

ONUT_FORCE_INLINE void *_onutMapObjectBufferATI(GLuint buffer) {
    return onutGLAPI.onutMapObjectBufferATI(buffer);
}
#define glMapObjectBufferATI _onutMapObjectBufferATI

ONUT_FORCE_INLINE void _onutMapParameterfvNV(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutMapParameterfvNV(target, pname, params);
}
#define glMapParameterfvNV _onutMapParameterfvNV

ONUT_FORCE_INLINE void _onutMapParameterivNV(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutMapParameterivNV(target, pname, params);
}
#define glMapParameterivNV _onutMapParameterivNV

ONUT_FORCE_INLINE void *_onutMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout) {
    return onutGLAPI.onutMapTexture2DINTEL(texture, level, access, stride, layout);
}
#define glMapTexture2DINTEL _onutMapTexture2DINTEL

ONUT_FORCE_INLINE void _onutMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points) {
    onutGLAPI.onutMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points);
}
#define glMapVertexAttrib1dAPPLE _onutMapVertexAttrib1dAPPLE

ONUT_FORCE_INLINE void _onutMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points) {
    onutGLAPI.onutMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points);
}
#define glMapVertexAttrib1fAPPLE _onutMapVertexAttrib1fAPPLE

ONUT_FORCE_INLINE void _onutMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points) {
    onutGLAPI.onutMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}
#define glMapVertexAttrib2dAPPLE _onutMapVertexAttrib2dAPPLE

ONUT_FORCE_INLINE void _onutMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points) {
    onutGLAPI.onutMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}
#define glMapVertexAttrib2fAPPLE _onutMapVertexAttrib2fAPPLE

ONUT_FORCE_INLINE void _onutMaterialxOES(GLenum face, GLenum pname, GLfixed param) {
    onutGLAPI.onutMaterialxOES(face, pname, param);
}
#define glMaterialxOES _onutMaterialxOES

ONUT_FORCE_INLINE void _onutMaterialxvOES(GLenum face, GLenum pname, const GLfixed *param) {
    onutGLAPI.onutMaterialxvOES(face, pname, param);
}
#define glMaterialxvOES _onutMaterialxvOES

ONUT_FORCE_INLINE void _onutMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar) {
    onutGLAPI.onutMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar);
}
#define glMatrixFrustumEXT _onutMatrixFrustumEXT

ONUT_FORCE_INLINE void _onutMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutMatrixIndexPointerARB(size, type, stride, pointer);
}
#define glMatrixIndexPointerARB _onutMatrixIndexPointerARB

ONUT_FORCE_INLINE void _onutMatrixIndexubvARB(GLint size, const GLubyte *indices) {
    onutGLAPI.onutMatrixIndexubvARB(size, indices);
}
#define glMatrixIndexubvARB _onutMatrixIndexubvARB

ONUT_FORCE_INLINE void _onutMatrixIndexuivARB(GLint size, const GLuint *indices) {
    onutGLAPI.onutMatrixIndexuivARB(size, indices);
}
#define glMatrixIndexuivARB _onutMatrixIndexuivARB

ONUT_FORCE_INLINE void _onutMatrixIndexusvARB(GLint size, const GLushort *indices) {
    onutGLAPI.onutMatrixIndexusvARB(size, indices);
}
#define glMatrixIndexusvARB _onutMatrixIndexusvARB

ONUT_FORCE_INLINE void _onutMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat *m) {
    onutGLAPI.onutMatrixLoad3x2fNV(matrixMode, m);
}
#define glMatrixLoad3x2fNV _onutMatrixLoad3x2fNV

ONUT_FORCE_INLINE void _onutMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat *m) {
    onutGLAPI.onutMatrixLoad3x3fNV(matrixMode, m);
}
#define glMatrixLoad3x3fNV _onutMatrixLoad3x3fNV

ONUT_FORCE_INLINE void _onutMatrixLoadIdentityEXT(GLenum mode) {
    onutGLAPI.onutMatrixLoadIdentityEXT(mode);
}
#define glMatrixLoadIdentityEXT _onutMatrixLoadIdentityEXT

ONUT_FORCE_INLINE void _onutMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat *m) {
    onutGLAPI.onutMatrixLoadTranspose3x3fNV(matrixMode, m);
}
#define glMatrixLoadTranspose3x3fNV _onutMatrixLoadTranspose3x3fNV

ONUT_FORCE_INLINE void _onutMatrixLoadTransposedEXT(GLenum mode, const GLdouble *m) {
    onutGLAPI.onutMatrixLoadTransposedEXT(mode, m);
}
#define glMatrixLoadTransposedEXT _onutMatrixLoadTransposedEXT

ONUT_FORCE_INLINE void _onutMatrixLoadTransposefEXT(GLenum mode, const GLfloat *m) {
    onutGLAPI.onutMatrixLoadTransposefEXT(mode, m);
}
#define glMatrixLoadTransposefEXT _onutMatrixLoadTransposefEXT

ONUT_FORCE_INLINE void _onutMatrixLoaddEXT(GLenum mode, const GLdouble *m) {
    onutGLAPI.onutMatrixLoaddEXT(mode, m);
}
#define glMatrixLoaddEXT _onutMatrixLoaddEXT

ONUT_FORCE_INLINE void _onutMatrixLoadfEXT(GLenum mode, const GLfloat *m) {
    onutGLAPI.onutMatrixLoadfEXT(mode, m);
}
#define glMatrixLoadfEXT _onutMatrixLoadfEXT

ONUT_FORCE_INLINE void _onutMatrixMult3x2fNV(GLenum matrixMode, const GLfloat *m) {
    onutGLAPI.onutMatrixMult3x2fNV(matrixMode, m);
}
#define glMatrixMult3x2fNV _onutMatrixMult3x2fNV

ONUT_FORCE_INLINE void _onutMatrixMult3x3fNV(GLenum matrixMode, const GLfloat *m) {
    onutGLAPI.onutMatrixMult3x3fNV(matrixMode, m);
}
#define glMatrixMult3x3fNV _onutMatrixMult3x3fNV

ONUT_FORCE_INLINE void _onutMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat *m) {
    onutGLAPI.onutMatrixMultTranspose3x3fNV(matrixMode, m);
}
#define glMatrixMultTranspose3x3fNV _onutMatrixMultTranspose3x3fNV

ONUT_FORCE_INLINE void _onutMatrixMultTransposedEXT(GLenum mode, const GLdouble *m) {
    onutGLAPI.onutMatrixMultTransposedEXT(mode, m);
}
#define glMatrixMultTransposedEXT _onutMatrixMultTransposedEXT

ONUT_FORCE_INLINE void _onutMatrixMultTransposefEXT(GLenum mode, const GLfloat *m) {
    onutGLAPI.onutMatrixMultTransposefEXT(mode, m);
}
#define glMatrixMultTransposefEXT _onutMatrixMultTransposefEXT

ONUT_FORCE_INLINE void _onutMatrixMultdEXT(GLenum mode, const GLdouble *m) {
    onutGLAPI.onutMatrixMultdEXT(mode, m);
}
#define glMatrixMultdEXT _onutMatrixMultdEXT

ONUT_FORCE_INLINE void _onutMatrixMultfEXT(GLenum mode, const GLfloat *m) {
    onutGLAPI.onutMatrixMultfEXT(mode, m);
}
#define glMatrixMultfEXT _onutMatrixMultfEXT

ONUT_FORCE_INLINE void _onutMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar) {
    onutGLAPI.onutMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar);
}
#define glMatrixOrthoEXT _onutMatrixOrthoEXT

ONUT_FORCE_INLINE void _onutMatrixPopEXT(GLenum mode) {
    onutGLAPI.onutMatrixPopEXT(mode);
}
#define glMatrixPopEXT _onutMatrixPopEXT

ONUT_FORCE_INLINE void _onutMatrixPushEXT(GLenum mode) {
    onutGLAPI.onutMatrixPushEXT(mode);
}
#define glMatrixPushEXT _onutMatrixPushEXT

ONUT_FORCE_INLINE void _onutMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutMatrixRotatedEXT(mode, angle, x, y, z);
}
#define glMatrixRotatedEXT _onutMatrixRotatedEXT

ONUT_FORCE_INLINE void _onutMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutMatrixRotatefEXT(mode, angle, x, y, z);
}
#define glMatrixRotatefEXT _onutMatrixRotatefEXT

ONUT_FORCE_INLINE void _onutMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutMatrixScaledEXT(mode, x, y, z);
}
#define glMatrixScaledEXT _onutMatrixScaledEXT

ONUT_FORCE_INLINE void _onutMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutMatrixScalefEXT(mode, x, y, z);
}
#define glMatrixScalefEXT _onutMatrixScalefEXT

ONUT_FORCE_INLINE void _onutMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutMatrixTranslatedEXT(mode, x, y, z);
}
#define glMatrixTranslatedEXT _onutMatrixTranslatedEXT

ONUT_FORCE_INLINE void _onutMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutMatrixTranslatefEXT(mode, x, y, z);
}
#define glMatrixTranslatefEXT _onutMatrixTranslatefEXT

ONUT_FORCE_INLINE void _onutMaxShaderCompilerThreadsARB(GLuint count) {
    onutGLAPI.onutMaxShaderCompilerThreadsARB(count);
}
#define glMaxShaderCompilerThreadsARB _onutMaxShaderCompilerThreadsARB

ONUT_FORCE_INLINE void _onutMemoryBarrierEXT(GLbitfield barriers) {
    onutGLAPI.onutMemoryBarrierEXT(barriers);
}
#define glMemoryBarrierEXT _onutMemoryBarrierEXT

ONUT_FORCE_INLINE void _onutMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, const GLint *params) {
    onutGLAPI.onutMemoryObjectParameterivEXT(memoryObject, pname, params);
}
#define glMemoryObjectParameterivEXT _onutMemoryObjectParameterivEXT

ONUT_FORCE_INLINE void _onutMinSampleShadingARB(GLfloat value) {
    onutGLAPI.onutMinSampleShadingARB(value);
}
#define glMinSampleShadingARB _onutMinSampleShadingARB

ONUT_FORCE_INLINE void _onutMinSampleShadingOES(GLfloat value) {
    onutGLAPI.onutMinSampleShadingOES(value);
}
#define glMinSampleShadingOES _onutMinSampleShadingOES

ONUT_FORCE_INLINE void _onutMinmax(GLenum target, GLenum internalformat, GLboolean sink) {
    onutGLAPI.onutMinmax(target, internalformat, sink);
}
#define glMinmax _onutMinmax

ONUT_FORCE_INLINE void _onutMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink) {
    onutGLAPI.onutMinmaxEXT(target, internalformat, sink);
}
#define glMinmaxEXT _onutMinmaxEXT

ONUT_FORCE_INLINE void _onutMultMatrixxOES(const GLfixed *m) {
    onutGLAPI.onutMultMatrixxOES(m);
}
#define glMultMatrixxOES _onutMultMatrixxOES

ONUT_FORCE_INLINE void _onutMultTransposeMatrixdARB(const GLdouble *m) {
    onutGLAPI.onutMultTransposeMatrixdARB(m);
}
#define glMultTransposeMatrixdARB _onutMultTransposeMatrixdARB

ONUT_FORCE_INLINE void _onutMultTransposeMatrixfARB(const GLfloat *m) {
    onutGLAPI.onutMultTransposeMatrixfARB(m);
}
#define glMultTransposeMatrixfARB _onutMultTransposeMatrixfARB

ONUT_FORCE_INLINE void _onutMultTransposeMatrixxOES(const GLfixed *m) {
    onutGLAPI.onutMultTransposeMatrixxOES(m);
}
#define glMultTransposeMatrixxOES _onutMultTransposeMatrixxOES

ONUT_FORCE_INLINE void _onutMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount) {
    onutGLAPI.onutMultiDrawArraysEXT(mode, first, count, primcount);
}
#define glMultiDrawArraysEXT _onutMultiDrawArraysEXT

ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectAMD(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride) {
    onutGLAPI.onutMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride);
}
#define glMultiDrawArraysIndirectAMD _onutMultiDrawArraysIndirectAMD

ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectBindlessCountNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount) {
    onutGLAPI.onutMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount);
}
#define glMultiDrawArraysIndirectBindlessCountNV _onutMultiDrawArraysIndirectBindlessCountNV

ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectBindlessNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount) {
    onutGLAPI.onutMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount);
}
#define glMultiDrawArraysIndirectBindlessNV _onutMultiDrawArraysIndirectBindlessNV

ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectCountARB(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride) {
    onutGLAPI.onutMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride);
}
#define glMultiDrawArraysIndirectCountARB _onutMultiDrawArraysIndirectCountARB

ONUT_FORCE_INLINE void _onutMultiDrawArraysIndirectEXT(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride) {
    onutGLAPI.onutMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride);
}
#define glMultiDrawArraysIndirectEXT _onutMultiDrawArraysIndirectEXT

ONUT_FORCE_INLINE void _onutMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount) {
    onutGLAPI.onutMultiDrawElementArrayAPPLE(mode, first, count, primcount);
}
#define glMultiDrawElementArrayAPPLE _onutMultiDrawElementArrayAPPLE

ONUT_FORCE_INLINE void _onutMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, const GLint *basevertex) {
    onutGLAPI.onutMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex);
}
#define glMultiDrawElementsBaseVertexEXT _onutMultiDrawElementsBaseVertexEXT

ONUT_FORCE_INLINE void _onutMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, const GLint *basevertex) {
    onutGLAPI.onutMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex);
}
#define glMultiDrawElementsBaseVertexOES _onutMultiDrawElementsBaseVertexOES

ONUT_FORCE_INLINE void _onutMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount) {
    onutGLAPI.onutMultiDrawElementsEXT(mode, count, type, indices, primcount);
}
#define glMultiDrawElementsEXT _onutMultiDrawElementsEXT

ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride) {
    onutGLAPI.onutMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride);
}
#define glMultiDrawElementsIndirectAMD _onutMultiDrawElementsIndirectAMD

ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount) {
    onutGLAPI.onutMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount);
}
#define glMultiDrawElementsIndirectBindlessCountNV _onutMultiDrawElementsIndirectBindlessCountNV

ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount) {
    onutGLAPI.onutMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount);
}
#define glMultiDrawElementsIndirectBindlessNV _onutMultiDrawElementsIndirectBindlessNV

ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride) {
    onutGLAPI.onutMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride);
}
#define glMultiDrawElementsIndirectCountARB _onutMultiDrawElementsIndirectCountARB

ONUT_FORCE_INLINE void _onutMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride) {
    onutGLAPI.onutMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride);
}
#define glMultiDrawElementsIndirectEXT _onutMultiDrawElementsIndirectEXT

ONUT_FORCE_INLINE void _onutMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount) {
    onutGLAPI.onutMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount);
}
#define glMultiDrawRangeElementArrayAPPLE _onutMultiDrawRangeElementArrayAPPLE

ONUT_FORCE_INLINE void _onutMultiModeDrawArraysIBM(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride) {
    onutGLAPI.onutMultiModeDrawArraysIBM(mode, first, count, primcount, modestride);
}
#define glMultiModeDrawArraysIBM _onutMultiModeDrawArraysIBM

ONUT_FORCE_INLINE void _onutMultiModeDrawElementsIBM(const GLenum *mode, const GLsizei *count, GLenum type, const void *const *indices, GLsizei primcount, GLint modestride) {
    onutGLAPI.onutMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride);
}
#define glMultiModeDrawElementsIBM _onutMultiModeDrawElementsIBM

ONUT_FORCE_INLINE void _onutMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer) {
    onutGLAPI.onutMultiTexBufferEXT(texunit, target, internalformat, buffer);
}
#define glMultiTexBufferEXT _onutMultiTexBufferEXT

ONUT_FORCE_INLINE void _onutMultiTexCoord1bOES(GLenum texture, GLbyte s) {
    onutGLAPI.onutMultiTexCoord1bOES(texture, s);
}
#define glMultiTexCoord1bOES _onutMultiTexCoord1bOES

ONUT_FORCE_INLINE void _onutMultiTexCoord1bvOES(GLenum texture, const GLbyte *coords) {
    onutGLAPI.onutMultiTexCoord1bvOES(texture, coords);
}
#define glMultiTexCoord1bvOES _onutMultiTexCoord1bvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord1dARB(GLenum target, GLdouble s) {
    onutGLAPI.onutMultiTexCoord1dARB(target, s);
}
#define glMultiTexCoord1dARB _onutMultiTexCoord1dARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1dvARB(GLenum target, const GLdouble *v) {
    onutGLAPI.onutMultiTexCoord1dvARB(target, v);
}
#define glMultiTexCoord1dvARB _onutMultiTexCoord1dvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1fARB(GLenum target, GLfloat s) {
    onutGLAPI.onutMultiTexCoord1fARB(target, s);
}
#define glMultiTexCoord1fARB _onutMultiTexCoord1fARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1fvARB(GLenum target, const GLfloat *v) {
    onutGLAPI.onutMultiTexCoord1fvARB(target, v);
}
#define glMultiTexCoord1fvARB _onutMultiTexCoord1fvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1hNV(GLenum target, GLhalfNV s) {
    onutGLAPI.onutMultiTexCoord1hNV(target, s);
}
#define glMultiTexCoord1hNV _onutMultiTexCoord1hNV

ONUT_FORCE_INLINE void _onutMultiTexCoord1hvNV(GLenum target, const GLhalfNV *v) {
    onutGLAPI.onutMultiTexCoord1hvNV(target, v);
}
#define glMultiTexCoord1hvNV _onutMultiTexCoord1hvNV

ONUT_FORCE_INLINE void _onutMultiTexCoord1iARB(GLenum target, GLint s) {
    onutGLAPI.onutMultiTexCoord1iARB(target, s);
}
#define glMultiTexCoord1iARB _onutMultiTexCoord1iARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1ivARB(GLenum target, const GLint *v) {
    onutGLAPI.onutMultiTexCoord1ivARB(target, v);
}
#define glMultiTexCoord1ivARB _onutMultiTexCoord1ivARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1sARB(GLenum target, GLshort s) {
    onutGLAPI.onutMultiTexCoord1sARB(target, s);
}
#define glMultiTexCoord1sARB _onutMultiTexCoord1sARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1svARB(GLenum target, const GLshort *v) {
    onutGLAPI.onutMultiTexCoord1svARB(target, v);
}
#define glMultiTexCoord1svARB _onutMultiTexCoord1svARB

ONUT_FORCE_INLINE void _onutMultiTexCoord1xOES(GLenum texture, GLfixed s) {
    onutGLAPI.onutMultiTexCoord1xOES(texture, s);
}
#define glMultiTexCoord1xOES _onutMultiTexCoord1xOES

ONUT_FORCE_INLINE void _onutMultiTexCoord1xvOES(GLenum texture, const GLfixed *coords) {
    onutGLAPI.onutMultiTexCoord1xvOES(texture, coords);
}
#define glMultiTexCoord1xvOES _onutMultiTexCoord1xvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t) {
    onutGLAPI.onutMultiTexCoord2bOES(texture, s, t);
}
#define glMultiTexCoord2bOES _onutMultiTexCoord2bOES

ONUT_FORCE_INLINE void _onutMultiTexCoord2bvOES(GLenum texture, const GLbyte *coords) {
    onutGLAPI.onutMultiTexCoord2bvOES(texture, coords);
}
#define glMultiTexCoord2bvOES _onutMultiTexCoord2bvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t) {
    onutGLAPI.onutMultiTexCoord2dARB(target, s, t);
}
#define glMultiTexCoord2dARB _onutMultiTexCoord2dARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2dvARB(GLenum target, const GLdouble *v) {
    onutGLAPI.onutMultiTexCoord2dvARB(target, v);
}
#define glMultiTexCoord2dvARB _onutMultiTexCoord2dvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t) {
    onutGLAPI.onutMultiTexCoord2fARB(target, s, t);
}
#define glMultiTexCoord2fARB _onutMultiTexCoord2fARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2fvARB(GLenum target, const GLfloat *v) {
    onutGLAPI.onutMultiTexCoord2fvARB(target, v);
}
#define glMultiTexCoord2fvARB _onutMultiTexCoord2fvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t) {
    onutGLAPI.onutMultiTexCoord2hNV(target, s, t);
}
#define glMultiTexCoord2hNV _onutMultiTexCoord2hNV

ONUT_FORCE_INLINE void _onutMultiTexCoord2hvNV(GLenum target, const GLhalfNV *v) {
    onutGLAPI.onutMultiTexCoord2hvNV(target, v);
}
#define glMultiTexCoord2hvNV _onutMultiTexCoord2hvNV

ONUT_FORCE_INLINE void _onutMultiTexCoord2iARB(GLenum target, GLint s, GLint t) {
    onutGLAPI.onutMultiTexCoord2iARB(target, s, t);
}
#define glMultiTexCoord2iARB _onutMultiTexCoord2iARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2ivARB(GLenum target, const GLint *v) {
    onutGLAPI.onutMultiTexCoord2ivARB(target, v);
}
#define glMultiTexCoord2ivARB _onutMultiTexCoord2ivARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t) {
    onutGLAPI.onutMultiTexCoord2sARB(target, s, t);
}
#define glMultiTexCoord2sARB _onutMultiTexCoord2sARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2svARB(GLenum target, const GLshort *v) {
    onutGLAPI.onutMultiTexCoord2svARB(target, v);
}
#define glMultiTexCoord2svARB _onutMultiTexCoord2svARB

ONUT_FORCE_INLINE void _onutMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t) {
    onutGLAPI.onutMultiTexCoord2xOES(texture, s, t);
}
#define glMultiTexCoord2xOES _onutMultiTexCoord2xOES

ONUT_FORCE_INLINE void _onutMultiTexCoord2xvOES(GLenum texture, const GLfixed *coords) {
    onutGLAPI.onutMultiTexCoord2xvOES(texture, coords);
}
#define glMultiTexCoord2xvOES _onutMultiTexCoord2xvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r) {
    onutGLAPI.onutMultiTexCoord3bOES(texture, s, t, r);
}
#define glMultiTexCoord3bOES _onutMultiTexCoord3bOES

ONUT_FORCE_INLINE void _onutMultiTexCoord3bvOES(GLenum texture, const GLbyte *coords) {
    onutGLAPI.onutMultiTexCoord3bvOES(texture, coords);
}
#define glMultiTexCoord3bvOES _onutMultiTexCoord3bvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r) {
    onutGLAPI.onutMultiTexCoord3dARB(target, s, t, r);
}
#define glMultiTexCoord3dARB _onutMultiTexCoord3dARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3dvARB(GLenum target, const GLdouble *v) {
    onutGLAPI.onutMultiTexCoord3dvARB(target, v);
}
#define glMultiTexCoord3dvARB _onutMultiTexCoord3dvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r) {
    onutGLAPI.onutMultiTexCoord3fARB(target, s, t, r);
}
#define glMultiTexCoord3fARB _onutMultiTexCoord3fARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3fvARB(GLenum target, const GLfloat *v) {
    onutGLAPI.onutMultiTexCoord3fvARB(target, v);
}
#define glMultiTexCoord3fvARB _onutMultiTexCoord3fvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r) {
    onutGLAPI.onutMultiTexCoord3hNV(target, s, t, r);
}
#define glMultiTexCoord3hNV _onutMultiTexCoord3hNV

ONUT_FORCE_INLINE void _onutMultiTexCoord3hvNV(GLenum target, const GLhalfNV *v) {
    onutGLAPI.onutMultiTexCoord3hvNV(target, v);
}
#define glMultiTexCoord3hvNV _onutMultiTexCoord3hvNV

ONUT_FORCE_INLINE void _onutMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r) {
    onutGLAPI.onutMultiTexCoord3iARB(target, s, t, r);
}
#define glMultiTexCoord3iARB _onutMultiTexCoord3iARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3ivARB(GLenum target, const GLint *v) {
    onutGLAPI.onutMultiTexCoord3ivARB(target, v);
}
#define glMultiTexCoord3ivARB _onutMultiTexCoord3ivARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r) {
    onutGLAPI.onutMultiTexCoord3sARB(target, s, t, r);
}
#define glMultiTexCoord3sARB _onutMultiTexCoord3sARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3svARB(GLenum target, const GLshort *v) {
    onutGLAPI.onutMultiTexCoord3svARB(target, v);
}
#define glMultiTexCoord3svARB _onutMultiTexCoord3svARB

ONUT_FORCE_INLINE void _onutMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r) {
    onutGLAPI.onutMultiTexCoord3xOES(texture, s, t, r);
}
#define glMultiTexCoord3xOES _onutMultiTexCoord3xOES

ONUT_FORCE_INLINE void _onutMultiTexCoord3xvOES(GLenum texture, const GLfixed *coords) {
    onutGLAPI.onutMultiTexCoord3xvOES(texture, coords);
}
#define glMultiTexCoord3xvOES _onutMultiTexCoord3xvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q) {
    onutGLAPI.onutMultiTexCoord4bOES(texture, s, t, r, q);
}
#define glMultiTexCoord4bOES _onutMultiTexCoord4bOES

ONUT_FORCE_INLINE void _onutMultiTexCoord4bvOES(GLenum texture, const GLbyte *coords) {
    onutGLAPI.onutMultiTexCoord4bvOES(texture, coords);
}
#define glMultiTexCoord4bvOES _onutMultiTexCoord4bvOES

ONUT_FORCE_INLINE void _onutMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) {
    onutGLAPI.onutMultiTexCoord4dARB(target, s, t, r, q);
}
#define glMultiTexCoord4dARB _onutMultiTexCoord4dARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4dvARB(GLenum target, const GLdouble *v) {
    onutGLAPI.onutMultiTexCoord4dvARB(target, v);
}
#define glMultiTexCoord4dvARB _onutMultiTexCoord4dvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) {
    onutGLAPI.onutMultiTexCoord4fARB(target, s, t, r, q);
}
#define glMultiTexCoord4fARB _onutMultiTexCoord4fARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4fvARB(GLenum target, const GLfloat *v) {
    onutGLAPI.onutMultiTexCoord4fvARB(target, v);
}
#define glMultiTexCoord4fvARB _onutMultiTexCoord4fvARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q) {
    onutGLAPI.onutMultiTexCoord4hNV(target, s, t, r, q);
}
#define glMultiTexCoord4hNV _onutMultiTexCoord4hNV

ONUT_FORCE_INLINE void _onutMultiTexCoord4hvNV(GLenum target, const GLhalfNV *v) {
    onutGLAPI.onutMultiTexCoord4hvNV(target, v);
}
#define glMultiTexCoord4hvNV _onutMultiTexCoord4hvNV

ONUT_FORCE_INLINE void _onutMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q) {
    onutGLAPI.onutMultiTexCoord4iARB(target, s, t, r, q);
}
#define glMultiTexCoord4iARB _onutMultiTexCoord4iARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4ivARB(GLenum target, const GLint *v) {
    onutGLAPI.onutMultiTexCoord4ivARB(target, v);
}
#define glMultiTexCoord4ivARB _onutMultiTexCoord4ivARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) {
    onutGLAPI.onutMultiTexCoord4sARB(target, s, t, r, q);
}
#define glMultiTexCoord4sARB _onutMultiTexCoord4sARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4svARB(GLenum target, const GLshort *v) {
    onutGLAPI.onutMultiTexCoord4svARB(target, v);
}
#define glMultiTexCoord4svARB _onutMultiTexCoord4svARB

ONUT_FORCE_INLINE void _onutMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q) {
    onutGLAPI.onutMultiTexCoord4xOES(texture, s, t, r, q);
}
#define glMultiTexCoord4xOES _onutMultiTexCoord4xOES

ONUT_FORCE_INLINE void _onutMultiTexCoord4xvOES(GLenum texture, const GLfixed *coords) {
    onutGLAPI.onutMultiTexCoord4xvOES(texture, coords);
}
#define glMultiTexCoord4xvOES _onutMultiTexCoord4xvOES

ONUT_FORCE_INLINE void _onutMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutMultiTexCoordPointerEXT(texunit, size, type, stride, pointer);
}
#define glMultiTexCoordPointerEXT _onutMultiTexCoordPointerEXT

ONUT_FORCE_INLINE void _onutMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param) {
    onutGLAPI.onutMultiTexEnvfEXT(texunit, target, pname, param);
}
#define glMultiTexEnvfEXT _onutMultiTexEnvfEXT

ONUT_FORCE_INLINE void _onutMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutMultiTexEnvfvEXT(texunit, target, pname, params);
}
#define glMultiTexEnvfvEXT _onutMultiTexEnvfvEXT

ONUT_FORCE_INLINE void _onutMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutMultiTexEnviEXT(texunit, target, pname, param);
}
#define glMultiTexEnviEXT _onutMultiTexEnviEXT

ONUT_FORCE_INLINE void _onutMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutMultiTexEnvivEXT(texunit, target, pname, params);
}
#define glMultiTexEnvivEXT _onutMultiTexEnvivEXT

ONUT_FORCE_INLINE void _onutMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param) {
    onutGLAPI.onutMultiTexGendEXT(texunit, coord, pname, param);
}
#define glMultiTexGendEXT _onutMultiTexGendEXT

ONUT_FORCE_INLINE void _onutMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params) {
    onutGLAPI.onutMultiTexGendvEXT(texunit, coord, pname, params);
}
#define glMultiTexGendvEXT _onutMultiTexGendvEXT

ONUT_FORCE_INLINE void _onutMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param) {
    onutGLAPI.onutMultiTexGenfEXT(texunit, coord, pname, param);
}
#define glMultiTexGenfEXT _onutMultiTexGenfEXT

ONUT_FORCE_INLINE void _onutMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutMultiTexGenfvEXT(texunit, coord, pname, params);
}
#define glMultiTexGenfvEXT _onutMultiTexGenfvEXT

ONUT_FORCE_INLINE void _onutMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param) {
    onutGLAPI.onutMultiTexGeniEXT(texunit, coord, pname, param);
}
#define glMultiTexGeniEXT _onutMultiTexGeniEXT

ONUT_FORCE_INLINE void _onutMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint *params) {
    onutGLAPI.onutMultiTexGenivEXT(texunit, coord, pname, params);
}
#define glMultiTexGenivEXT _onutMultiTexGenivEXT

ONUT_FORCE_INLINE void _onutMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels);
}
#define glMultiTexImage1DEXT _onutMultiTexImage1DEXT

ONUT_FORCE_INLINE void _onutMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels);
}
#define glMultiTexImage2DEXT _onutMultiTexImage2DEXT

ONUT_FORCE_INLINE void _onutMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels);
}
#define glMultiTexImage3DEXT _onutMultiTexImage3DEXT

ONUT_FORCE_INLINE void _onutMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutMultiTexParameterIivEXT(texunit, target, pname, params);
}
#define glMultiTexParameterIivEXT _onutMultiTexParameterIivEXT

ONUT_FORCE_INLINE void _onutMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint *params) {
    onutGLAPI.onutMultiTexParameterIuivEXT(texunit, target, pname, params);
}
#define glMultiTexParameterIuivEXT _onutMultiTexParameterIuivEXT

ONUT_FORCE_INLINE void _onutMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param) {
    onutGLAPI.onutMultiTexParameterfEXT(texunit, target, pname, param);
}
#define glMultiTexParameterfEXT _onutMultiTexParameterfEXT

ONUT_FORCE_INLINE void _onutMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutMultiTexParameterfvEXT(texunit, target, pname, params);
}
#define glMultiTexParameterfvEXT _onutMultiTexParameterfvEXT

ONUT_FORCE_INLINE void _onutMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutMultiTexParameteriEXT(texunit, target, pname, param);
}
#define glMultiTexParameteriEXT _onutMultiTexParameteriEXT

ONUT_FORCE_INLINE void _onutMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutMultiTexParameterivEXT(texunit, target, pname, params);
}
#define glMultiTexParameterivEXT _onutMultiTexParameterivEXT

ONUT_FORCE_INLINE void _onutMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer) {
    onutGLAPI.onutMultiTexRenderbufferEXT(texunit, target, renderbuffer);
}
#define glMultiTexRenderbufferEXT _onutMultiTexRenderbufferEXT

ONUT_FORCE_INLINE void _onutMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels);
}
#define glMultiTexSubImage1DEXT _onutMultiTexSubImage1DEXT

ONUT_FORCE_INLINE void _onutMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels);
}
#define glMultiTexSubImage2DEXT _onutMultiTexSubImage2DEXT

ONUT_FORCE_INLINE void _onutMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}
#define glMultiTexSubImage3DEXT _onutMultiTexSubImage3DEXT

ONUT_FORCE_INLINE void _onutMulticastBarrierNV(void) {
    onutGLAPI.onutMulticastBarrierNV();
}
#define glMulticastBarrierNV _onutMulticastBarrierNV

ONUT_FORCE_INLINE void _onutMulticastBlitFramebufferNV(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {
    onutGLAPI.onutMulticastBlitFramebufferNV(srcGpu, dstGpu, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}
#define glMulticastBlitFramebufferNV _onutMulticastBlitFramebufferNV

ONUT_FORCE_INLINE void _onutMulticastBufferSubDataNV(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data) {
    onutGLAPI.onutMulticastBufferSubDataNV(gpuMask, buffer, offset, size, data);
}
#define glMulticastBufferSubDataNV _onutMulticastBufferSubDataNV

ONUT_FORCE_INLINE void _onutMulticastCopyBufferSubDataNV(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) {
    onutGLAPI.onutMulticastCopyBufferSubDataNV(readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size);
}
#define glMulticastCopyBufferSubDataNV _onutMulticastCopyBufferSubDataNV

ONUT_FORCE_INLINE void _onutMulticastCopyImageSubDataNV(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) {
    onutGLAPI.onutMulticastCopyImageSubDataNV(srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
}
#define glMulticastCopyImageSubDataNV _onutMulticastCopyImageSubDataNV

ONUT_FORCE_INLINE void _onutMulticastFramebufferSampleLocationsfvNV(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutMulticastFramebufferSampleLocationsfvNV(gpu, framebuffer, start, count, v);
}
#define glMulticastFramebufferSampleLocationsfvNV _onutMulticastFramebufferSampleLocationsfvNV

ONUT_FORCE_INLINE void _onutMulticastGetQueryObjecti64vNV(GLuint gpu, GLuint id, GLenum pname, GLint64 *params) {
    onutGLAPI.onutMulticastGetQueryObjecti64vNV(gpu, id, pname, params);
}
#define glMulticastGetQueryObjecti64vNV _onutMulticastGetQueryObjecti64vNV

ONUT_FORCE_INLINE void _onutMulticastGetQueryObjectivNV(GLuint gpu, GLuint id, GLenum pname, GLint *params) {
    onutGLAPI.onutMulticastGetQueryObjectivNV(gpu, id, pname, params);
}
#define glMulticastGetQueryObjectivNV _onutMulticastGetQueryObjectivNV

ONUT_FORCE_INLINE void _onutMulticastGetQueryObjectui64vNV(GLuint gpu, GLuint id, GLenum pname, GLuint64 *params) {
    onutGLAPI.onutMulticastGetQueryObjectui64vNV(gpu, id, pname, params);
}
#define glMulticastGetQueryObjectui64vNV _onutMulticastGetQueryObjectui64vNV

ONUT_FORCE_INLINE void _onutMulticastGetQueryObjectuivNV(GLuint gpu, GLuint id, GLenum pname, GLuint *params) {
    onutGLAPI.onutMulticastGetQueryObjectuivNV(gpu, id, pname, params);
}
#define glMulticastGetQueryObjectuivNV _onutMulticastGetQueryObjectuivNV

ONUT_FORCE_INLINE void _onutMulticastWaitSyncNV(GLuint signalGpu, GLbitfield waitGpuMask) {
    onutGLAPI.onutMulticastWaitSyncNV(signalGpu, waitGpuMask);
}
#define glMulticastWaitSyncNV _onutMulticastWaitSyncNV

ONUT_FORCE_INLINE void _onutNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage) {
    onutGLAPI.onutNamedBufferDataEXT(buffer, size, data, usage);
}
#define glNamedBufferDataEXT _onutNamedBufferDataEXT

ONUT_FORCE_INLINE void _onutNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit) {
    onutGLAPI.onutNamedBufferPageCommitmentARB(buffer, offset, size, commit);
}
#define glNamedBufferPageCommitmentARB _onutNamedBufferPageCommitmentARB

ONUT_FORCE_INLINE void _onutNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit) {
    onutGLAPI.onutNamedBufferPageCommitmentEXT(buffer, offset, size, commit);
}
#define glNamedBufferPageCommitmentEXT _onutNamedBufferPageCommitmentEXT

ONUT_FORCE_INLINE void _onutNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags) {
    onutGLAPI.onutNamedBufferStorageEXT(buffer, size, data, flags);
}
#define glNamedBufferStorageEXT _onutNamedBufferStorageEXT

ONUT_FORCE_INLINE void _onutNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags) {
    onutGLAPI.onutNamedBufferStorageExternalEXT(buffer, offset, size, clientBuffer, flags);
}
#define glNamedBufferStorageExternalEXT _onutNamedBufferStorageExternalEXT

ONUT_FORCE_INLINE void _onutNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutNamedBufferStorageMemEXT(buffer, size, memory, offset);
}
#define glNamedBufferStorageMemEXT _onutNamedBufferStorageMemEXT

ONUT_FORCE_INLINE void _onutNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data) {
    onutGLAPI.onutNamedBufferSubDataEXT(buffer, offset, size, data);
}
#define glNamedBufferSubDataEXT _onutNamedBufferSubDataEXT

ONUT_FORCE_INLINE void _onutNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) {
    onutGLAPI.onutNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size);
}
#define glNamedCopyBufferSubDataEXT _onutNamedCopyBufferSubDataEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param) {
    onutGLAPI.onutNamedFramebufferParameteriEXT(framebuffer, pname, param);
}
#define glNamedFramebufferParameteriEXT _onutNamedFramebufferParameteriEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) {
    onutGLAPI.onutNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer);
}
#define glNamedFramebufferRenderbufferEXT _onutNamedFramebufferRenderbufferEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v);
}
#define glNamedFramebufferSampleLocationsfvARB _onutNamedFramebufferSampleLocationsfvARB

ONUT_FORCE_INLINE void _onutNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v);
}
#define glNamedFramebufferSampleLocationsfvNV _onutNamedFramebufferSampleLocationsfvNV

ONUT_FORCE_INLINE void _onutNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values) {
    onutGLAPI.onutNamedFramebufferSamplePositionsfvAMD(framebuffer, numsamples, pixelindex, values);
}
#define glNamedFramebufferSamplePositionsfvAMD _onutNamedFramebufferSamplePositionsfvAMD

ONUT_FORCE_INLINE void _onutNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level) {
    onutGLAPI.onutNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level);
}
#define glNamedFramebufferTexture1DEXT _onutNamedFramebufferTexture1DEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level) {
    onutGLAPI.onutNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level);
}
#define glNamedFramebufferTexture2DEXT _onutNamedFramebufferTexture2DEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) {
    onutGLAPI.onutNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset);
}
#define glNamedFramebufferTexture3DEXT _onutNamedFramebufferTexture3DEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level) {
    onutGLAPI.onutNamedFramebufferTextureEXT(framebuffer, attachment, texture, level);
}
#define glNamedFramebufferTextureEXT _onutNamedFramebufferTextureEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face) {
    onutGLAPI.onutNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face);
}
#define glNamedFramebufferTextureFaceEXT _onutNamedFramebufferTextureFaceEXT

ONUT_FORCE_INLINE void _onutNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer) {
    onutGLAPI.onutNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer);
}
#define glNamedFramebufferTextureLayerEXT _onutNamedFramebufferTextureLayerEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w);
}
#define glNamedProgramLocalParameter4dEXT _onutNamedProgramLocalParameter4dEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble *params) {
    onutGLAPI.onutNamedProgramLocalParameter4dvEXT(program, target, index, params);
}
#define glNamedProgramLocalParameter4dvEXT _onutNamedProgramLocalParameter4dvEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w);
}
#define glNamedProgramLocalParameter4fEXT _onutNamedProgramLocalParameter4fEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat *params) {
    onutGLAPI.onutNamedProgramLocalParameter4fvEXT(program, target, index, params);
}
#define glNamedProgramLocalParameter4fvEXT _onutNamedProgramLocalParameter4fvEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w) {
    onutGLAPI.onutNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w);
}
#define glNamedProgramLocalParameterI4iEXT _onutNamedProgramLocalParameterI4iEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint *params) {
    onutGLAPI.onutNamedProgramLocalParameterI4ivEXT(program, target, index, params);
}
#define glNamedProgramLocalParameterI4ivEXT _onutNamedProgramLocalParameterI4ivEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) {
    onutGLAPI.onutNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w);
}
#define glNamedProgramLocalParameterI4uiEXT _onutNamedProgramLocalParameterI4uiEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint *params) {
    onutGLAPI.onutNamedProgramLocalParameterI4uivEXT(program, target, index, params);
}
#define glNamedProgramLocalParameterI4uivEXT _onutNamedProgramLocalParameterI4uivEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params) {
    onutGLAPI.onutNamedProgramLocalParameters4fvEXT(program, target, index, count, params);
}
#define glNamedProgramLocalParameters4fvEXT _onutNamedProgramLocalParameters4fvEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params) {
    onutGLAPI.onutNamedProgramLocalParametersI4ivEXT(program, target, index, count, params);
}
#define glNamedProgramLocalParametersI4ivEXT _onutNamedProgramLocalParametersI4ivEXT

ONUT_FORCE_INLINE void _onutNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params) {
    onutGLAPI.onutNamedProgramLocalParametersI4uivEXT(program, target, index, count, params);
}
#define glNamedProgramLocalParametersI4uivEXT _onutNamedProgramLocalParametersI4uivEXT

ONUT_FORCE_INLINE void _onutNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string) {
    onutGLAPI.onutNamedProgramStringEXT(program, target, format, len, string);
}
#define glNamedProgramStringEXT _onutNamedProgramStringEXT

ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height);
}
#define glNamedRenderbufferStorageEXT _onutNamedRenderbufferStorageEXT

ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height);
}
#define glNamedRenderbufferStorageMultisampleCoverageEXT _onutNamedRenderbufferStorageMultisampleCoverageEXT

ONUT_FORCE_INLINE void _onutNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height);
}
#define glNamedRenderbufferStorageMultisampleEXT _onutNamedRenderbufferStorageMultisampleEXT

ONUT_FORCE_INLINE void _onutNamedStringARB(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string) {
    onutGLAPI.onutNamedStringARB(type, namelen, name, stringlen, string);
}
#define glNamedStringARB _onutNamedStringARB

ONUT_FORCE_INLINE GLuint _onutNewBufferRegion(GLenum region) {
    return onutGLAPI.onutNewBufferRegion(region);
}
#define glNewBufferRegion _onutNewBufferRegion

ONUT_FORCE_INLINE GLuint _onutNewObjectBufferATI(GLsizei size, const void *pointer, GLenum usage) {
    return onutGLAPI.onutNewObjectBufferATI(size, pointer, usage);
}
#define glNewObjectBufferATI _onutNewObjectBufferATI

ONUT_FORCE_INLINE void _onutNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutNormal3fVertex3fSUN(nx, ny, nz, x, y, z);
}
#define glNormal3fVertex3fSUN _onutNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutNormal3fVertex3fvSUN(const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutNormal3fVertex3fvSUN(n, v);
}
#define glNormal3fVertex3fvSUN _onutNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz) {
    onutGLAPI.onutNormal3hNV(nx, ny, nz);
}
#define glNormal3hNV _onutNormal3hNV

ONUT_FORCE_INLINE void _onutNormal3hvNV(const GLhalfNV *v) {
    onutGLAPI.onutNormal3hvNV(v);
}
#define glNormal3hvNV _onutNormal3hvNV

ONUT_FORCE_INLINE void _onutNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz) {
    onutGLAPI.onutNormal3xOES(nx, ny, nz);
}
#define glNormal3xOES _onutNormal3xOES

ONUT_FORCE_INLINE void _onutNormal3xvOES(const GLfixed *coords) {
    onutGLAPI.onutNormal3xvOES(coords);
}
#define glNormal3xvOES _onutNormal3xvOES

ONUT_FORCE_INLINE void _onutNormalFormatNV(GLenum type, GLsizei stride) {
    onutGLAPI.onutNormalFormatNV(type, stride);
}
#define glNormalFormatNV _onutNormalFormatNV

ONUT_FORCE_INLINE void _onutNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer) {
    onutGLAPI.onutNormalPointerEXT(type, stride, count, pointer);
}
#define glNormalPointerEXT _onutNormalPointerEXT

ONUT_FORCE_INLINE void _onutNormalPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutNormalPointerListIBM(type, stride, pointer, ptrstride);
}
#define glNormalPointerListIBM _onutNormalPointerListIBM

ONUT_FORCE_INLINE void _onutNormalPointervINTEL(GLenum type, const void **pointer) {
    onutGLAPI.onutNormalPointervINTEL(type, pointer);
}
#define glNormalPointervINTEL _onutNormalPointervINTEL

ONUT_FORCE_INLINE void _onutNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz) {
    onutGLAPI.onutNormalStream3bATI(stream, nx, ny, nz);
}
#define glNormalStream3bATI _onutNormalStream3bATI

ONUT_FORCE_INLINE void _onutNormalStream3bvATI(GLenum stream, const GLbyte *coords) {
    onutGLAPI.onutNormalStream3bvATI(stream, coords);
}
#define glNormalStream3bvATI _onutNormalStream3bvATI

ONUT_FORCE_INLINE void _onutNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz) {
    onutGLAPI.onutNormalStream3dATI(stream, nx, ny, nz);
}
#define glNormalStream3dATI _onutNormalStream3dATI

ONUT_FORCE_INLINE void _onutNormalStream3dvATI(GLenum stream, const GLdouble *coords) {
    onutGLAPI.onutNormalStream3dvATI(stream, coords);
}
#define glNormalStream3dvATI _onutNormalStream3dvATI

ONUT_FORCE_INLINE void _onutNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz) {
    onutGLAPI.onutNormalStream3fATI(stream, nx, ny, nz);
}
#define glNormalStream3fATI _onutNormalStream3fATI

ONUT_FORCE_INLINE void _onutNormalStream3fvATI(GLenum stream, const GLfloat *coords) {
    onutGLAPI.onutNormalStream3fvATI(stream, coords);
}
#define glNormalStream3fvATI _onutNormalStream3fvATI

ONUT_FORCE_INLINE void _onutNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz) {
    onutGLAPI.onutNormalStream3iATI(stream, nx, ny, nz);
}
#define glNormalStream3iATI _onutNormalStream3iATI

ONUT_FORCE_INLINE void _onutNormalStream3ivATI(GLenum stream, const GLint *coords) {
    onutGLAPI.onutNormalStream3ivATI(stream, coords);
}
#define glNormalStream3ivATI _onutNormalStream3ivATI

ONUT_FORCE_INLINE void _onutNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz) {
    onutGLAPI.onutNormalStream3sATI(stream, nx, ny, nz);
}
#define glNormalStream3sATI _onutNormalStream3sATI

ONUT_FORCE_INLINE void _onutNormalStream3svATI(GLenum stream, const GLshort *coords) {
    onutGLAPI.onutNormalStream3svATI(stream, coords);
}
#define glNormalStream3svATI _onutNormalStream3svATI

ONUT_FORCE_INLINE void _onutObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar *label) {
    onutGLAPI.onutObjectLabelKHR(identifier, name, length, label);
}
#define glObjectLabelKHR _onutObjectLabelKHR

ONUT_FORCE_INLINE void _onutObjectPtrLabelKHR(const void *ptr, GLsizei length, const GLchar *label) {
    onutGLAPI.onutObjectPtrLabelKHR(ptr, length, label);
}
#define glObjectPtrLabelKHR _onutObjectPtrLabelKHR

ONUT_FORCE_INLINE GLenum _onutObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option) {
    return onutGLAPI.onutObjectPurgeableAPPLE(objectType, name, option);
}
#define glObjectPurgeableAPPLE _onutObjectPurgeableAPPLE

ONUT_FORCE_INLINE GLenum _onutObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option) {
    return onutGLAPI.onutObjectUnpurgeableAPPLE(objectType, name, option);
}
#define glObjectUnpurgeableAPPLE _onutObjectUnpurgeableAPPLE

ONUT_FORCE_INLINE void _onutOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) {
    onutGLAPI.onutOrthofOES(l, r, b, t, n, f);
}
#define glOrthofOES _onutOrthofOES

ONUT_FORCE_INLINE void _onutOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) {
    onutGLAPI.onutOrthoxOES(l, r, b, t, n, f);
}
#define glOrthoxOES _onutOrthoxOES

ONUT_FORCE_INLINE void _onutPNTrianglesfATI(GLenum pname, GLfloat param) {
    onutGLAPI.onutPNTrianglesfATI(pname, param);
}
#define glPNTrianglesfATI _onutPNTrianglesfATI

ONUT_FORCE_INLINE void _onutPNTrianglesiATI(GLenum pname, GLint param) {
    onutGLAPI.onutPNTrianglesiATI(pname, param);
}
#define glPNTrianglesiATI _onutPNTrianglesiATI

ONUT_FORCE_INLINE void _onutPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle) {
    onutGLAPI.onutPassTexCoordATI(dst, coord, swizzle);
}
#define glPassTexCoordATI _onutPassTexCoordATI

ONUT_FORCE_INLINE void _onutPassThroughxOES(GLfixed token) {
    onutGLAPI.onutPassThroughxOES(token);
}
#define glPassThroughxOES _onutPassThroughxOES

ONUT_FORCE_INLINE void _onutPatchParameteriEXT(GLenum pname, GLint value) {
    onutGLAPI.onutPatchParameteriEXT(pname, value);
}
#define glPatchParameteriEXT _onutPatchParameteriEXT

ONUT_FORCE_INLINE void _onutPatchParameteriOES(GLenum pname, GLint value) {
    onutGLAPI.onutPatchParameteriOES(pname, value);
}
#define glPatchParameteriOES _onutPatchParameteriOES

ONUT_FORCE_INLINE void _onutPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs) {
    onutGLAPI.onutPathColorGenNV(color, genMode, colorFormat, coeffs);
}
#define glPathColorGenNV _onutPathColorGenNV

ONUT_FORCE_INLINE void _onutPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords) {
    onutGLAPI.onutPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords);
}
#define glPathCommandsNV _onutPathCommandsNV

ONUT_FORCE_INLINE void _onutPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords) {
    onutGLAPI.onutPathCoordsNV(path, numCoords, coordType, coords);
}
#define glPathCoordsNV _onutPathCoordsNV

ONUT_FORCE_INLINE void _onutPathCoverDepthFuncNV(GLenum func) {
    onutGLAPI.onutPathCoverDepthFuncNV(func);
}
#define glPathCoverDepthFuncNV _onutPathCoverDepthFuncNV

ONUT_FORCE_INLINE void _onutPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray) {
    onutGLAPI.onutPathDashArrayNV(path, dashCount, dashArray);
}
#define glPathDashArrayNV _onutPathDashArrayNV

ONUT_FORCE_INLINE void _onutPathFogGenNV(GLenum genMode) {
    onutGLAPI.onutPathFogGenNV(genMode);
}
#define glPathFogGenNV _onutPathFogGenNV

ONUT_FORCE_INLINE GLenum _onutPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale) {
    return onutGLAPI.onutPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale);
}
#define glPathGlyphIndexArrayNV _onutPathGlyphIndexArrayNV

ONUT_FORCE_INLINE GLenum _onutPathGlyphIndexRangeNV(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]) {
    return onutGLAPI.onutPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount);
}
#define glPathGlyphIndexRangeNV _onutPathGlyphIndexRangeNV

ONUT_FORCE_INLINE void _onutPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale) {
    onutGLAPI.onutPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale);
}
#define glPathGlyphRangeNV _onutPathGlyphRangeNV

ONUT_FORCE_INLINE void _onutPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale) {
    onutGLAPI.onutPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale);
}
#define glPathGlyphsNV _onutPathGlyphsNV

ONUT_FORCE_INLINE GLenum _onutPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale) {
    return onutGLAPI.onutPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale);
}
#define glPathMemoryGlyphIndexArrayNV _onutPathMemoryGlyphIndexArrayNV

ONUT_FORCE_INLINE void _onutPathParameterfNV(GLuint path, GLenum pname, GLfloat value) {
    onutGLAPI.onutPathParameterfNV(path, pname, value);
}
#define glPathParameterfNV _onutPathParameterfNV

ONUT_FORCE_INLINE void _onutPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value) {
    onutGLAPI.onutPathParameterfvNV(path, pname, value);
}
#define glPathParameterfvNV _onutPathParameterfvNV

ONUT_FORCE_INLINE void _onutPathParameteriNV(GLuint path, GLenum pname, GLint value) {
    onutGLAPI.onutPathParameteriNV(path, pname, value);
}
#define glPathParameteriNV _onutPathParameteriNV

ONUT_FORCE_INLINE void _onutPathParameterivNV(GLuint path, GLenum pname, const GLint *value) {
    onutGLAPI.onutPathParameterivNV(path, pname, value);
}
#define glPathParameterivNV _onutPathParameterivNV

ONUT_FORCE_INLINE void _onutPathStencilDepthOffsetNV(GLfloat factor, GLfloat units) {
    onutGLAPI.onutPathStencilDepthOffsetNV(factor, units);
}
#define glPathStencilDepthOffsetNV _onutPathStencilDepthOffsetNV

ONUT_FORCE_INLINE void _onutPathStencilFuncNV(GLenum func, GLint ref, GLuint mask) {
    onutGLAPI.onutPathStencilFuncNV(func, ref, mask);
}
#define glPathStencilFuncNV _onutPathStencilFuncNV

ONUT_FORCE_INLINE void _onutPathStringNV(GLuint path, GLenum format, GLsizei length, const void *pathString) {
    onutGLAPI.onutPathStringNV(path, format, length, pathString);
}
#define glPathStringNV _onutPathStringNV

ONUT_FORCE_INLINE void _onutPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords) {
    onutGLAPI.onutPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords);
}
#define glPathSubCommandsNV _onutPathSubCommandsNV

ONUT_FORCE_INLINE void _onutPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords) {
    onutGLAPI.onutPathSubCoordsNV(path, coordStart, numCoords, coordType, coords);
}
#define glPathSubCoordsNV _onutPathSubCoordsNV

ONUT_FORCE_INLINE void _onutPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs) {
    onutGLAPI.onutPathTexGenNV(texCoordSet, genMode, components, coeffs);
}
#define glPathTexGenNV _onutPathTexGenNV

ONUT_FORCE_INLINE void _onutPauseTransformFeedbackNV(void) {
    onutGLAPI.onutPauseTransformFeedbackNV();
}
#define glPauseTransformFeedbackNV _onutPauseTransformFeedbackNV

ONUT_FORCE_INLINE void _onutPixelDataRangeNV(GLenum target, GLsizei length, const void *pointer) {
    onutGLAPI.onutPixelDataRangeNV(target, length, pointer);
}
#define glPixelDataRangeNV _onutPixelDataRangeNV

ONUT_FORCE_INLINE void _onutPixelMapx(GLenum map, GLint size, const GLfixed *values) {
    onutGLAPI.onutPixelMapx(map, size, values);
}
#define glPixelMapx _onutPixelMapx

ONUT_FORCE_INLINE void _onutPixelStorex(GLenum pname, GLfixed param) {
    onutGLAPI.onutPixelStorex(pname, param);
}
#define glPixelStorex _onutPixelStorex

ONUT_FORCE_INLINE void _onutPixelTexGenParameterfSGIS(GLenum pname, GLfloat param) {
    onutGLAPI.onutPixelTexGenParameterfSGIS(pname, param);
}
#define glPixelTexGenParameterfSGIS _onutPixelTexGenParameterfSGIS

ONUT_FORCE_INLINE void _onutPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutPixelTexGenParameterfvSGIS(pname, params);
}
#define glPixelTexGenParameterfvSGIS _onutPixelTexGenParameterfvSGIS

ONUT_FORCE_INLINE void _onutPixelTexGenParameteriSGIS(GLenum pname, GLint param) {
    onutGLAPI.onutPixelTexGenParameteriSGIS(pname, param);
}
#define glPixelTexGenParameteriSGIS _onutPixelTexGenParameteriSGIS

ONUT_FORCE_INLINE void _onutPixelTexGenParameterivSGIS(GLenum pname, const GLint *params) {
    onutGLAPI.onutPixelTexGenParameterivSGIS(pname, params);
}
#define glPixelTexGenParameterivSGIS _onutPixelTexGenParameterivSGIS

ONUT_FORCE_INLINE void _onutPixelTexGenSGIX(GLenum mode) {
    onutGLAPI.onutPixelTexGenSGIX(mode);
}
#define glPixelTexGenSGIX _onutPixelTexGenSGIX

ONUT_FORCE_INLINE void _onutPixelTransferxOES(GLenum pname, GLfixed param) {
    onutGLAPI.onutPixelTransferxOES(pname, param);
}
#define glPixelTransferxOES _onutPixelTransferxOES

ONUT_FORCE_INLINE void _onutPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param) {
    onutGLAPI.onutPixelTransformParameterfEXT(target, pname, param);
}
#define glPixelTransformParameterfEXT _onutPixelTransformParameterfEXT

ONUT_FORCE_INLINE void _onutPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutPixelTransformParameterfvEXT(target, pname, params);
}
#define glPixelTransformParameterfvEXT _onutPixelTransformParameterfvEXT

ONUT_FORCE_INLINE void _onutPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutPixelTransformParameteriEXT(target, pname, param);
}
#define glPixelTransformParameteriEXT _onutPixelTransformParameteriEXT

ONUT_FORCE_INLINE void _onutPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutPixelTransformParameterivEXT(target, pname, params);
}
#define glPixelTransformParameterivEXT _onutPixelTransformParameterivEXT

ONUT_FORCE_INLINE void _onutPixelZoomxOES(GLfixed xfactor, GLfixed yfactor) {
    onutGLAPI.onutPixelZoomxOES(xfactor, yfactor);
}
#define glPixelZoomxOES _onutPixelZoomxOES

ONUT_FORCE_INLINE GLboolean _onutPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY) {
    return onutGLAPI.onutPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY);
}
#define glPointAlongPathNV _onutPointAlongPathNV

ONUT_FORCE_INLINE void _onutPointParameterfARB(GLenum pname, GLfloat param) {
    onutGLAPI.onutPointParameterfARB(pname, param);
}
#define glPointParameterfARB _onutPointParameterfARB

ONUT_FORCE_INLINE void _onutPointParameterfEXT(GLenum pname, GLfloat param) {
    onutGLAPI.onutPointParameterfEXT(pname, param);
}
#define glPointParameterfEXT _onutPointParameterfEXT

ONUT_FORCE_INLINE void _onutPointParameterfSGIS(GLenum pname, GLfloat param) {
    onutGLAPI.onutPointParameterfSGIS(pname, param);
}
#define glPointParameterfSGIS _onutPointParameterfSGIS

ONUT_FORCE_INLINE void _onutPointParameterfvARB(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutPointParameterfvARB(pname, params);
}
#define glPointParameterfvARB _onutPointParameterfvARB

ONUT_FORCE_INLINE void _onutPointParameterfvEXT(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutPointParameterfvEXT(pname, params);
}
#define glPointParameterfvEXT _onutPointParameterfvEXT

ONUT_FORCE_INLINE void _onutPointParameterfvSGIS(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutPointParameterfvSGIS(pname, params);
}
#define glPointParameterfvSGIS _onutPointParameterfvSGIS

ONUT_FORCE_INLINE void _onutPointParameteriNV(GLenum pname, GLint param) {
    onutGLAPI.onutPointParameteriNV(pname, param);
}
#define glPointParameteriNV _onutPointParameteriNV

ONUT_FORCE_INLINE void _onutPointParameterivNV(GLenum pname, const GLint *params) {
    onutGLAPI.onutPointParameterivNV(pname, params);
}
#define glPointParameterivNV _onutPointParameterivNV

ONUT_FORCE_INLINE void _onutPointParameterxvOES(GLenum pname, const GLfixed *params) {
    onutGLAPI.onutPointParameterxvOES(pname, params);
}
#define glPointParameterxvOES _onutPointParameterxvOES

ONUT_FORCE_INLINE void _onutPointSizexOES(GLfixed size) {
    onutGLAPI.onutPointSizexOES(size);
}
#define glPointSizexOES _onutPointSizexOES

ONUT_FORCE_INLINE GLint _onutPollAsyncSGIX(GLuint *markerp) {
    return onutGLAPI.onutPollAsyncSGIX(markerp);
}
#define glPollAsyncSGIX _onutPollAsyncSGIX

ONUT_FORCE_INLINE GLint _onutPollInstrumentsSGIX(GLint *marker_p) {
    return onutGLAPI.onutPollInstrumentsSGIX(marker_p);
}
#define glPollInstrumentsSGIX _onutPollInstrumentsSGIX

ONUT_FORCE_INLINE void _onutPolygonModeNV(GLenum face, GLenum mode) {
    onutGLAPI.onutPolygonModeNV(face, mode);
}
#define glPolygonModeNV _onutPolygonModeNV

ONUT_FORCE_INLINE void _onutPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp) {
    onutGLAPI.onutPolygonOffsetClampEXT(factor, units, clamp);
}
#define glPolygonOffsetClampEXT _onutPolygonOffsetClampEXT

ONUT_FORCE_INLINE void _onutPolygonOffsetEXT(GLfloat factor, GLfloat bias) {
    onutGLAPI.onutPolygonOffsetEXT(factor, bias);
}
#define glPolygonOffsetEXT _onutPolygonOffsetEXT

ONUT_FORCE_INLINE void _onutPolygonOffsetxOES(GLfixed factor, GLfixed units) {
    onutGLAPI.onutPolygonOffsetxOES(factor, units);
}
#define glPolygonOffsetxOES _onutPolygonOffsetxOES

ONUT_FORCE_INLINE void _onutPopDebugGroupKHR(void) {
    onutGLAPI.onutPopDebugGroupKHR();
}
#define glPopDebugGroupKHR _onutPopDebugGroupKHR

ONUT_FORCE_INLINE void _onutPopGroupMarkerEXT(void) {
    onutGLAPI.onutPopGroupMarkerEXT();
}
#define glPopGroupMarkerEXT _onutPopGroupMarkerEXT

ONUT_FORCE_INLINE void _onutPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3) {
    onutGLAPI.onutPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3);
}
#define glPresentFrameDualFillNV _onutPresentFrameDualFillNV

ONUT_FORCE_INLINE void _onutPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1) {
    onutGLAPI.onutPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1);
}
#define glPresentFrameKeyedNV _onutPresentFrameKeyedNV

ONUT_FORCE_INLINE void _onutPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) {
    onutGLAPI.onutPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
}
#define glPrimitiveBoundingBoxARB _onutPrimitiveBoundingBoxARB

ONUT_FORCE_INLINE void _onutPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) {
    onutGLAPI.onutPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
}
#define glPrimitiveBoundingBoxEXT _onutPrimitiveBoundingBoxEXT

ONUT_FORCE_INLINE void _onutPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) {
    onutGLAPI.onutPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
}
#define glPrimitiveBoundingBoxOES _onutPrimitiveBoundingBoxOES

ONUT_FORCE_INLINE void _onutPrimitiveRestartIndexNV(GLuint index) {
    onutGLAPI.onutPrimitiveRestartIndexNV(index);
}
#define glPrimitiveRestartIndexNV _onutPrimitiveRestartIndexNV

ONUT_FORCE_INLINE void _onutPrimitiveRestartNV(void) {
    onutGLAPI.onutPrimitiveRestartNV();
}
#define glPrimitiveRestartNV _onutPrimitiveRestartNV

ONUT_FORCE_INLINE void _onutPrioritizeTexturesEXT(GLsizei n, const GLuint *textures, const GLclampf *priorities) {
    onutGLAPI.onutPrioritizeTexturesEXT(n, textures, priorities);
}
#define glPrioritizeTexturesEXT _onutPrioritizeTexturesEXT

ONUT_FORCE_INLINE void _onutPrioritizeTexturesxOES(GLsizei n, const GLuint *textures, const GLfixed *priorities) {
    onutGLAPI.onutPrioritizeTexturesxOES(n, textures, priorities);
}
#define glPrioritizeTexturesxOES _onutPrioritizeTexturesxOES

ONUT_FORCE_INLINE void _onutProgramBinaryOES(GLuint program, GLenum binaryFormat, const void *binary, GLint length) {
    onutGLAPI.onutProgramBinaryOES(program, binaryFormat, binary, length);
}
#define glProgramBinaryOES _onutProgramBinaryOES

ONUT_FORCE_INLINE void _onutProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params) {
    onutGLAPI.onutProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params);
}
#define glProgramBufferParametersIivNV _onutProgramBufferParametersIivNV

ONUT_FORCE_INLINE void _onutProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params) {
    onutGLAPI.onutProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params);
}
#define glProgramBufferParametersIuivNV _onutProgramBufferParametersIuivNV

ONUT_FORCE_INLINE void _onutProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params) {
    onutGLAPI.onutProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params);
}
#define glProgramBufferParametersfvNV _onutProgramBufferParametersfvNV

ONUT_FORCE_INLINE void _onutProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutProgramEnvParameter4dARB(target, index, x, y, z, w);
}
#define glProgramEnvParameter4dARB _onutProgramEnvParameter4dARB

ONUT_FORCE_INLINE void _onutProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params) {
    onutGLAPI.onutProgramEnvParameter4dvARB(target, index, params);
}
#define glProgramEnvParameter4dvARB _onutProgramEnvParameter4dvARB

ONUT_FORCE_INLINE void _onutProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutProgramEnvParameter4fARB(target, index, x, y, z, w);
}
#define glProgramEnvParameter4fARB _onutProgramEnvParameter4fARB

ONUT_FORCE_INLINE void _onutProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params) {
    onutGLAPI.onutProgramEnvParameter4fvARB(target, index, params);
}
#define glProgramEnvParameter4fvARB _onutProgramEnvParameter4fvARB

ONUT_FORCE_INLINE void _onutProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w) {
    onutGLAPI.onutProgramEnvParameterI4iNV(target, index, x, y, z, w);
}
#define glProgramEnvParameterI4iNV _onutProgramEnvParameterI4iNV

ONUT_FORCE_INLINE void _onutProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint *params) {
    onutGLAPI.onutProgramEnvParameterI4ivNV(target, index, params);
}
#define glProgramEnvParameterI4ivNV _onutProgramEnvParameterI4ivNV

ONUT_FORCE_INLINE void _onutProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) {
    onutGLAPI.onutProgramEnvParameterI4uiNV(target, index, x, y, z, w);
}
#define glProgramEnvParameterI4uiNV _onutProgramEnvParameterI4uiNV

ONUT_FORCE_INLINE void _onutProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint *params) {
    onutGLAPI.onutProgramEnvParameterI4uivNV(target, index, params);
}
#define glProgramEnvParameterI4uivNV _onutProgramEnvParameterI4uivNV

ONUT_FORCE_INLINE void _onutProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params) {
    onutGLAPI.onutProgramEnvParameters4fvEXT(target, index, count, params);
}
#define glProgramEnvParameters4fvEXT _onutProgramEnvParameters4fvEXT

ONUT_FORCE_INLINE void _onutProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params) {
    onutGLAPI.onutProgramEnvParametersI4ivNV(target, index, count, params);
}
#define glProgramEnvParametersI4ivNV _onutProgramEnvParametersI4ivNV

ONUT_FORCE_INLINE void _onutProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params) {
    onutGLAPI.onutProgramEnvParametersI4uivNV(target, index, count, params);
}
#define glProgramEnvParametersI4uivNV _onutProgramEnvParametersI4uivNV

ONUT_FORCE_INLINE void _onutProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutProgramLocalParameter4dARB(target, index, x, y, z, w);
}
#define glProgramLocalParameter4dARB _onutProgramLocalParameter4dARB

ONUT_FORCE_INLINE void _onutProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params) {
    onutGLAPI.onutProgramLocalParameter4dvARB(target, index, params);
}
#define glProgramLocalParameter4dvARB _onutProgramLocalParameter4dvARB

ONUT_FORCE_INLINE void _onutProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutProgramLocalParameter4fARB(target, index, x, y, z, w);
}
#define glProgramLocalParameter4fARB _onutProgramLocalParameter4fARB

ONUT_FORCE_INLINE void _onutProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params) {
    onutGLAPI.onutProgramLocalParameter4fvARB(target, index, params);
}
#define glProgramLocalParameter4fvARB _onutProgramLocalParameter4fvARB

ONUT_FORCE_INLINE void _onutProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w) {
    onutGLAPI.onutProgramLocalParameterI4iNV(target, index, x, y, z, w);
}
#define glProgramLocalParameterI4iNV _onutProgramLocalParameterI4iNV

ONUT_FORCE_INLINE void _onutProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint *params) {
    onutGLAPI.onutProgramLocalParameterI4ivNV(target, index, params);
}
#define glProgramLocalParameterI4ivNV _onutProgramLocalParameterI4ivNV

ONUT_FORCE_INLINE void _onutProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) {
    onutGLAPI.onutProgramLocalParameterI4uiNV(target, index, x, y, z, w);
}
#define glProgramLocalParameterI4uiNV _onutProgramLocalParameterI4uiNV

ONUT_FORCE_INLINE void _onutProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint *params) {
    onutGLAPI.onutProgramLocalParameterI4uivNV(target, index, params);
}
#define glProgramLocalParameterI4uivNV _onutProgramLocalParameterI4uivNV

ONUT_FORCE_INLINE void _onutProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params) {
    onutGLAPI.onutProgramLocalParameters4fvEXT(target, index, count, params);
}
#define glProgramLocalParameters4fvEXT _onutProgramLocalParameters4fvEXT

ONUT_FORCE_INLINE void _onutProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params) {
    onutGLAPI.onutProgramLocalParametersI4ivNV(target, index, count, params);
}
#define glProgramLocalParametersI4ivNV _onutProgramLocalParametersI4ivNV

ONUT_FORCE_INLINE void _onutProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params) {
    onutGLAPI.onutProgramLocalParametersI4uivNV(target, index, count, params);
}
#define glProgramLocalParametersI4uivNV _onutProgramLocalParametersI4uivNV

ONUT_FORCE_INLINE void _onutProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutProgramNamedParameter4dNV(id, len, name, x, y, z, w);
}
#define glProgramNamedParameter4dNV _onutProgramNamedParameter4dNV

ONUT_FORCE_INLINE void _onutProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v) {
    onutGLAPI.onutProgramNamedParameter4dvNV(id, len, name, v);
}
#define glProgramNamedParameter4dvNV _onutProgramNamedParameter4dvNV

ONUT_FORCE_INLINE void _onutProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutProgramNamedParameter4fNV(id, len, name, x, y, z, w);
}
#define glProgramNamedParameter4fNV _onutProgramNamedParameter4fNV

ONUT_FORCE_INLINE void _onutProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v) {
    onutGLAPI.onutProgramNamedParameter4fvNV(id, len, name, v);
}
#define glProgramNamedParameter4fvNV _onutProgramNamedParameter4fvNV

ONUT_FORCE_INLINE void _onutProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutProgramParameter4dNV(target, index, x, y, z, w);
}
#define glProgramParameter4dNV _onutProgramParameter4dNV

ONUT_FORCE_INLINE void _onutProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble *v) {
    onutGLAPI.onutProgramParameter4dvNV(target, index, v);
}
#define glProgramParameter4dvNV _onutProgramParameter4dvNV

ONUT_FORCE_INLINE void _onutProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutProgramParameter4fNV(target, index, x, y, z, w);
}
#define glProgramParameter4fNV _onutProgramParameter4fNV

ONUT_FORCE_INLINE void _onutProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat *v) {
    onutGLAPI.onutProgramParameter4fvNV(target, index, v);
}
#define glProgramParameter4fvNV _onutProgramParameter4fvNV

ONUT_FORCE_INLINE void _onutProgramParameteriARB(GLuint program, GLenum pname, GLint value) {
    onutGLAPI.onutProgramParameteriARB(program, pname, value);
}
#define glProgramParameteriARB _onutProgramParameteriARB

ONUT_FORCE_INLINE void _onutProgramParameteriEXT(GLuint program, GLenum pname, GLint value) {
    onutGLAPI.onutProgramParameteriEXT(program, pname, value);
}
#define glProgramParameteriEXT _onutProgramParameteriEXT

ONUT_FORCE_INLINE void _onutProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble *v) {
    onutGLAPI.onutProgramParameters4dvNV(target, index, count, v);
}
#define glProgramParameters4dvNV _onutProgramParameters4dvNV

ONUT_FORCE_INLINE void _onutProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutProgramParameters4fvNV(target, index, count, v);
}
#define glProgramParameters4fvNV _onutProgramParameters4fvNV

ONUT_FORCE_INLINE void _onutProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs) {
    onutGLAPI.onutProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs);
}
#define glProgramPathFragmentInputGenNV _onutProgramPathFragmentInputGenNV

ONUT_FORCE_INLINE void _onutProgramStringARB(GLenum target, GLenum format, GLsizei len, const void *string) {
    onutGLAPI.onutProgramStringARB(target, format, len, string);
}
#define glProgramStringARB _onutProgramStringARB

ONUT_FORCE_INLINE void _onutProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint *params) {
    onutGLAPI.onutProgramSubroutineParametersuivNV(target, count, params);
}
#define glProgramSubroutineParametersuivNV _onutProgramSubroutineParametersuivNV

ONUT_FORCE_INLINE void _onutProgramUniform1dEXT(GLuint program, GLint location, GLdouble x) {
    onutGLAPI.onutProgramUniform1dEXT(program, location, x);
}
#define glProgramUniform1dEXT _onutProgramUniform1dEXT

ONUT_FORCE_INLINE void _onutProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) {
    onutGLAPI.onutProgramUniform1dvEXT(program, location, count, value);
}
#define glProgramUniform1dvEXT _onutProgramUniform1dvEXT

ONUT_FORCE_INLINE void _onutProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0) {
    onutGLAPI.onutProgramUniform1fEXT(program, location, v0);
}
#define glProgramUniform1fEXT _onutProgramUniform1fEXT

ONUT_FORCE_INLINE void _onutProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutProgramUniform1fvEXT(program, location, count, value);
}
#define glProgramUniform1fvEXT _onutProgramUniform1fvEXT

ONUT_FORCE_INLINE void _onutProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x) {
    onutGLAPI.onutProgramUniform1i64ARB(program, location, x);
}
#define glProgramUniform1i64ARB _onutProgramUniform1i64ARB

ONUT_FORCE_INLINE void _onutProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x) {
    onutGLAPI.onutProgramUniform1i64NV(program, location, x);
}
#define glProgramUniform1i64NV _onutProgramUniform1i64NV

ONUT_FORCE_INLINE void _onutProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutProgramUniform1i64vARB(program, location, count, value);
}
#define glProgramUniform1i64vARB _onutProgramUniform1i64vARB

ONUT_FORCE_INLINE void _onutProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutProgramUniform1i64vNV(program, location, count, value);
}
#define glProgramUniform1i64vNV _onutProgramUniform1i64vNV

ONUT_FORCE_INLINE void _onutProgramUniform1iEXT(GLuint program, GLint location, GLint v0) {
    onutGLAPI.onutProgramUniform1iEXT(program, location, v0);
}
#define glProgramUniform1iEXT _onutProgramUniform1iEXT

ONUT_FORCE_INLINE void _onutProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutProgramUniform1ivEXT(program, location, count, value);
}
#define glProgramUniform1ivEXT _onutProgramUniform1ivEXT

ONUT_FORCE_INLINE void _onutProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x) {
    onutGLAPI.onutProgramUniform1ui64ARB(program, location, x);
}
#define glProgramUniform1ui64ARB _onutProgramUniform1ui64ARB

ONUT_FORCE_INLINE void _onutProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x) {
    onutGLAPI.onutProgramUniform1ui64NV(program, location, x);
}
#define glProgramUniform1ui64NV _onutProgramUniform1ui64NV

ONUT_FORCE_INLINE void _onutProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutProgramUniform1ui64vARB(program, location, count, value);
}
#define glProgramUniform1ui64vARB _onutProgramUniform1ui64vARB

ONUT_FORCE_INLINE void _onutProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutProgramUniform1ui64vNV(program, location, count, value);
}
#define glProgramUniform1ui64vNV _onutProgramUniform1ui64vNV

ONUT_FORCE_INLINE void _onutProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0) {
    onutGLAPI.onutProgramUniform1uiEXT(program, location, v0);
}
#define glProgramUniform1uiEXT _onutProgramUniform1uiEXT

ONUT_FORCE_INLINE void _onutProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutProgramUniform1uivEXT(program, location, count, value);
}
#define glProgramUniform1uivEXT _onutProgramUniform1uivEXT

ONUT_FORCE_INLINE void _onutProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y) {
    onutGLAPI.onutProgramUniform2dEXT(program, location, x, y);
}
#define glProgramUniform2dEXT _onutProgramUniform2dEXT

ONUT_FORCE_INLINE void _onutProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) {
    onutGLAPI.onutProgramUniform2dvEXT(program, location, count, value);
}
#define glProgramUniform2dvEXT _onutProgramUniform2dvEXT

ONUT_FORCE_INLINE void _onutProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1) {
    onutGLAPI.onutProgramUniform2fEXT(program, location, v0, v1);
}
#define glProgramUniform2fEXT _onutProgramUniform2fEXT

ONUT_FORCE_INLINE void _onutProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutProgramUniform2fvEXT(program, location, count, value);
}
#define glProgramUniform2fvEXT _onutProgramUniform2fvEXT

ONUT_FORCE_INLINE void _onutProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y) {
    onutGLAPI.onutProgramUniform2i64ARB(program, location, x, y);
}
#define glProgramUniform2i64ARB _onutProgramUniform2i64ARB

ONUT_FORCE_INLINE void _onutProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y) {
    onutGLAPI.onutProgramUniform2i64NV(program, location, x, y);
}
#define glProgramUniform2i64NV _onutProgramUniform2i64NV

ONUT_FORCE_INLINE void _onutProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutProgramUniform2i64vARB(program, location, count, value);
}
#define glProgramUniform2i64vARB _onutProgramUniform2i64vARB

ONUT_FORCE_INLINE void _onutProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutProgramUniform2i64vNV(program, location, count, value);
}
#define glProgramUniform2i64vNV _onutProgramUniform2i64vNV

ONUT_FORCE_INLINE void _onutProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1) {
    onutGLAPI.onutProgramUniform2iEXT(program, location, v0, v1);
}
#define glProgramUniform2iEXT _onutProgramUniform2iEXT

ONUT_FORCE_INLINE void _onutProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutProgramUniform2ivEXT(program, location, count, value);
}
#define glProgramUniform2ivEXT _onutProgramUniform2ivEXT

ONUT_FORCE_INLINE void _onutProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y) {
    onutGLAPI.onutProgramUniform2ui64ARB(program, location, x, y);
}
#define glProgramUniform2ui64ARB _onutProgramUniform2ui64ARB

ONUT_FORCE_INLINE void _onutProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y) {
    onutGLAPI.onutProgramUniform2ui64NV(program, location, x, y);
}
#define glProgramUniform2ui64NV _onutProgramUniform2ui64NV

ONUT_FORCE_INLINE void _onutProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutProgramUniform2ui64vARB(program, location, count, value);
}
#define glProgramUniform2ui64vARB _onutProgramUniform2ui64vARB

ONUT_FORCE_INLINE void _onutProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutProgramUniform2ui64vNV(program, location, count, value);
}
#define glProgramUniform2ui64vNV _onutProgramUniform2ui64vNV

ONUT_FORCE_INLINE void _onutProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1) {
    onutGLAPI.onutProgramUniform2uiEXT(program, location, v0, v1);
}
#define glProgramUniform2uiEXT _onutProgramUniform2uiEXT

ONUT_FORCE_INLINE void _onutProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutProgramUniform2uivEXT(program, location, count, value);
}
#define glProgramUniform2uivEXT _onutProgramUniform2uivEXT

ONUT_FORCE_INLINE void _onutProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutProgramUniform3dEXT(program, location, x, y, z);
}
#define glProgramUniform3dEXT _onutProgramUniform3dEXT

ONUT_FORCE_INLINE void _onutProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) {
    onutGLAPI.onutProgramUniform3dvEXT(program, location, count, value);
}
#define glProgramUniform3dvEXT _onutProgramUniform3dvEXT

ONUT_FORCE_INLINE void _onutProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2) {
    onutGLAPI.onutProgramUniform3fEXT(program, location, v0, v1, v2);
}
#define glProgramUniform3fEXT _onutProgramUniform3fEXT

ONUT_FORCE_INLINE void _onutProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutProgramUniform3fvEXT(program, location, count, value);
}
#define glProgramUniform3fvEXT _onutProgramUniform3fvEXT

ONUT_FORCE_INLINE void _onutProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z) {
    onutGLAPI.onutProgramUniform3i64ARB(program, location, x, y, z);
}
#define glProgramUniform3i64ARB _onutProgramUniform3i64ARB

ONUT_FORCE_INLINE void _onutProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z) {
    onutGLAPI.onutProgramUniform3i64NV(program, location, x, y, z);
}
#define glProgramUniform3i64NV _onutProgramUniform3i64NV

ONUT_FORCE_INLINE void _onutProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutProgramUniform3i64vARB(program, location, count, value);
}
#define glProgramUniform3i64vARB _onutProgramUniform3i64vARB

ONUT_FORCE_INLINE void _onutProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutProgramUniform3i64vNV(program, location, count, value);
}
#define glProgramUniform3i64vNV _onutProgramUniform3i64vNV

ONUT_FORCE_INLINE void _onutProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2) {
    onutGLAPI.onutProgramUniform3iEXT(program, location, v0, v1, v2);
}
#define glProgramUniform3iEXT _onutProgramUniform3iEXT

ONUT_FORCE_INLINE void _onutProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutProgramUniform3ivEXT(program, location, count, value);
}
#define glProgramUniform3ivEXT _onutProgramUniform3ivEXT

ONUT_FORCE_INLINE void _onutProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z) {
    onutGLAPI.onutProgramUniform3ui64ARB(program, location, x, y, z);
}
#define glProgramUniform3ui64ARB _onutProgramUniform3ui64ARB

ONUT_FORCE_INLINE void _onutProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z) {
    onutGLAPI.onutProgramUniform3ui64NV(program, location, x, y, z);
}
#define glProgramUniform3ui64NV _onutProgramUniform3ui64NV

ONUT_FORCE_INLINE void _onutProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutProgramUniform3ui64vARB(program, location, count, value);
}
#define glProgramUniform3ui64vARB _onutProgramUniform3ui64vARB

ONUT_FORCE_INLINE void _onutProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutProgramUniform3ui64vNV(program, location, count, value);
}
#define glProgramUniform3ui64vNV _onutProgramUniform3ui64vNV

ONUT_FORCE_INLINE void _onutProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2) {
    onutGLAPI.onutProgramUniform3uiEXT(program, location, v0, v1, v2);
}
#define glProgramUniform3uiEXT _onutProgramUniform3uiEXT

ONUT_FORCE_INLINE void _onutProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutProgramUniform3uivEXT(program, location, count, value);
}
#define glProgramUniform3uivEXT _onutProgramUniform3uivEXT

ONUT_FORCE_INLINE void _onutProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutProgramUniform4dEXT(program, location, x, y, z, w);
}
#define glProgramUniform4dEXT _onutProgramUniform4dEXT

ONUT_FORCE_INLINE void _onutProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value) {
    onutGLAPI.onutProgramUniform4dvEXT(program, location, count, value);
}
#define glProgramUniform4dvEXT _onutProgramUniform4dvEXT

ONUT_FORCE_INLINE void _onutProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) {
    onutGLAPI.onutProgramUniform4fEXT(program, location, v0, v1, v2, v3);
}
#define glProgramUniform4fEXT _onutProgramUniform4fEXT

ONUT_FORCE_INLINE void _onutProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutProgramUniform4fvEXT(program, location, count, value);
}
#define glProgramUniform4fvEXT _onutProgramUniform4fvEXT

ONUT_FORCE_INLINE void _onutProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w) {
    onutGLAPI.onutProgramUniform4i64ARB(program, location, x, y, z, w);
}
#define glProgramUniform4i64ARB _onutProgramUniform4i64ARB

ONUT_FORCE_INLINE void _onutProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w) {
    onutGLAPI.onutProgramUniform4i64NV(program, location, x, y, z, w);
}
#define glProgramUniform4i64NV _onutProgramUniform4i64NV

ONUT_FORCE_INLINE void _onutProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutProgramUniform4i64vARB(program, location, count, value);
}
#define glProgramUniform4i64vARB _onutProgramUniform4i64vARB

ONUT_FORCE_INLINE void _onutProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutProgramUniform4i64vNV(program, location, count, value);
}
#define glProgramUniform4i64vNV _onutProgramUniform4i64vNV

ONUT_FORCE_INLINE void _onutProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3) {
    onutGLAPI.onutProgramUniform4iEXT(program, location, v0, v1, v2, v3);
}
#define glProgramUniform4iEXT _onutProgramUniform4iEXT

ONUT_FORCE_INLINE void _onutProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutProgramUniform4ivEXT(program, location, count, value);
}
#define glProgramUniform4ivEXT _onutProgramUniform4ivEXT

ONUT_FORCE_INLINE void _onutProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w) {
    onutGLAPI.onutProgramUniform4ui64ARB(program, location, x, y, z, w);
}
#define glProgramUniform4ui64ARB _onutProgramUniform4ui64ARB

ONUT_FORCE_INLINE void _onutProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w) {
    onutGLAPI.onutProgramUniform4ui64NV(program, location, x, y, z, w);
}
#define glProgramUniform4ui64NV _onutProgramUniform4ui64NV

ONUT_FORCE_INLINE void _onutProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutProgramUniform4ui64vARB(program, location, count, value);
}
#define glProgramUniform4ui64vARB _onutProgramUniform4ui64vARB

ONUT_FORCE_INLINE void _onutProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutProgramUniform4ui64vNV(program, location, count, value);
}
#define glProgramUniform4ui64vNV _onutProgramUniform4ui64vNV

ONUT_FORCE_INLINE void _onutProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) {
    onutGLAPI.onutProgramUniform4uiEXT(program, location, v0, v1, v2, v3);
}
#define glProgramUniform4uiEXT _onutProgramUniform4uiEXT

ONUT_FORCE_INLINE void _onutProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutProgramUniform4uivEXT(program, location, count, value);
}
#define glProgramUniform4uivEXT _onutProgramUniform4uivEXT

ONUT_FORCE_INLINE void _onutProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value) {
    onutGLAPI.onutProgramUniformHandleui64ARB(program, location, value);
}
#define glProgramUniformHandleui64ARB _onutProgramUniformHandleui64ARB

ONUT_FORCE_INLINE void _onutProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value) {
    onutGLAPI.onutProgramUniformHandleui64IMG(program, location, value);
}
#define glProgramUniformHandleui64IMG _onutProgramUniformHandleui64IMG

ONUT_FORCE_INLINE void _onutProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value) {
    onutGLAPI.onutProgramUniformHandleui64NV(program, location, value);
}
#define glProgramUniformHandleui64NV _onutProgramUniformHandleui64NV

ONUT_FORCE_INLINE void _onutProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *values) {
    onutGLAPI.onutProgramUniformHandleui64vARB(program, location, count, values);
}
#define glProgramUniformHandleui64vARB _onutProgramUniformHandleui64vARB

ONUT_FORCE_INLINE void _onutProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 *values) {
    onutGLAPI.onutProgramUniformHandleui64vIMG(program, location, count, values);
}
#define glProgramUniformHandleui64vIMG _onutProgramUniformHandleui64vIMG

ONUT_FORCE_INLINE void _onutProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values) {
    onutGLAPI.onutProgramUniformHandleui64vNV(program, location, count, values);
}
#define glProgramUniformHandleui64vNV _onutProgramUniformHandleui64vNV

ONUT_FORCE_INLINE void _onutProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix2dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix2dvEXT _onutProgramUniformMatrix2dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix2fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix2fvEXT _onutProgramUniformMatrix2fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix2x3dvEXT _onutProgramUniformMatrix2x3dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix2x3fvEXT _onutProgramUniformMatrix2x3fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix2x4dvEXT _onutProgramUniformMatrix2x4dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix2x4fvEXT _onutProgramUniformMatrix2x4fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix3dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix3dvEXT _onutProgramUniformMatrix3dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix3fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix3fvEXT _onutProgramUniformMatrix3fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix3x2dvEXT _onutProgramUniformMatrix3x2dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix3x2fvEXT _onutProgramUniformMatrix3x2fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix3x4dvEXT _onutProgramUniformMatrix3x4dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix3x4fvEXT _onutProgramUniformMatrix3x4fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix4dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix4dvEXT _onutProgramUniformMatrix4dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix4fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix4fvEXT _onutProgramUniformMatrix4fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix4x2dvEXT _onutProgramUniformMatrix4x2dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix4x2fvEXT _onutProgramUniformMatrix4x2fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value) {
    onutGLAPI.onutProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix4x3dvEXT _onutProgramUniformMatrix4x3dvEXT

ONUT_FORCE_INLINE void _onutProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value);
}
#define glProgramUniformMatrix4x3fvEXT _onutProgramUniformMatrix4x3fvEXT

ONUT_FORCE_INLINE void _onutProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value) {
    onutGLAPI.onutProgramUniformui64NV(program, location, value);
}
#define glProgramUniformui64NV _onutProgramUniformui64NV

ONUT_FORCE_INLINE void _onutProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutProgramUniformui64vNV(program, location, count, value);
}
#define glProgramUniformui64vNV _onutProgramUniformui64vNV

ONUT_FORCE_INLINE void _onutProgramVertexLimitNV(GLenum target, GLint limit) {
    onutGLAPI.onutProgramVertexLimitNV(target, limit);
}
#define glProgramVertexLimitNV _onutProgramVertexLimitNV

ONUT_FORCE_INLINE void _onutProvokingVertexEXT(GLenum mode) {
    onutGLAPI.onutProvokingVertexEXT(mode);
}
#define glProvokingVertexEXT _onutProvokingVertexEXT

ONUT_FORCE_INLINE void _onutPushClientAttribDefaultEXT(GLbitfield mask) {
    onutGLAPI.onutPushClientAttribDefaultEXT(mask);
}
#define glPushClientAttribDefaultEXT _onutPushClientAttribDefaultEXT

ONUT_FORCE_INLINE void _onutPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar *message) {
    onutGLAPI.onutPushDebugGroupKHR(source, id, length, message);
}
#define glPushDebugGroupKHR _onutPushDebugGroupKHR

ONUT_FORCE_INLINE void _onutPushGroupMarkerEXT(GLsizei length, const GLchar *marker) {
    onutGLAPI.onutPushGroupMarkerEXT(length, marker);
}
#define glPushGroupMarkerEXT _onutPushGroupMarkerEXT

ONUT_FORCE_INLINE void _onutQueryCounterEXT(GLuint id, GLenum target) {
    onutGLAPI.onutQueryCounterEXT(id, target);
}
#define glQueryCounterEXT _onutQueryCounterEXT

ONUT_FORCE_INLINE GLbitfield _onutQueryMatrixxOES(GLfixed *mantissa, GLint *exponent) {
    return onutGLAPI.onutQueryMatrixxOES(mantissa, exponent);
}
#define glQueryMatrixxOES _onutQueryMatrixxOES

ONUT_FORCE_INLINE void _onutQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param) {
    onutGLAPI.onutQueryObjectParameteruiAMD(target, id, pname, param);
}
#define glQueryObjectParameteruiAMD _onutQueryObjectParameteruiAMD

ONUT_FORCE_INLINE void _onutRasterPos2xOES(GLfixed x, GLfixed y) {
    onutGLAPI.onutRasterPos2xOES(x, y);
}
#define glRasterPos2xOES _onutRasterPos2xOES

ONUT_FORCE_INLINE void _onutRasterPos2xvOES(const GLfixed *coords) {
    onutGLAPI.onutRasterPos2xvOES(coords);
}
#define glRasterPos2xvOES _onutRasterPos2xvOES

ONUT_FORCE_INLINE void _onutRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z) {
    onutGLAPI.onutRasterPos3xOES(x, y, z);
}
#define glRasterPos3xOES _onutRasterPos3xOES

ONUT_FORCE_INLINE void _onutRasterPos3xvOES(const GLfixed *coords) {
    onutGLAPI.onutRasterPos3xvOES(coords);
}
#define glRasterPos3xvOES _onutRasterPos3xvOES

ONUT_FORCE_INLINE void _onutRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w) {
    onutGLAPI.onutRasterPos4xOES(x, y, z, w);
}
#define glRasterPos4xOES _onutRasterPos4xOES

ONUT_FORCE_INLINE void _onutRasterPos4xvOES(const GLfixed *coords) {
    onutGLAPI.onutRasterPos4xvOES(coords);
}
#define glRasterPos4xvOES _onutRasterPos4xvOES

ONUT_FORCE_INLINE void _onutRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations) {
    onutGLAPI.onutRasterSamplesEXT(samples, fixedsamplelocations);
}
#define glRasterSamplesEXT _onutRasterSamplesEXT

ONUT_FORCE_INLINE void _onutReadBufferIndexedEXT(GLenum src, GLint index) {
    onutGLAPI.onutReadBufferIndexedEXT(src, index);
}
#define glReadBufferIndexedEXT _onutReadBufferIndexedEXT

ONUT_FORCE_INLINE void _onutReadBufferNV(GLenum mode) {
    onutGLAPI.onutReadBufferNV(mode);
}
#define glReadBufferNV _onutReadBufferNV

ONUT_FORCE_INLINE void _onutReadBufferRegion(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height) {
    onutGLAPI.onutReadBufferRegion(region, x, y, width, height);
}
#define glReadBufferRegion _onutReadBufferRegion

ONUT_FORCE_INLINE void _onutReadInstrumentsSGIX(GLint marker) {
    onutGLAPI.onutReadInstrumentsSGIX(marker);
}
#define glReadInstrumentsSGIX _onutReadInstrumentsSGIX

ONUT_FORCE_INLINE void _onutReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) {
    onutGLAPI.onutReadnPixelsARB(x, y, width, height, format, type, bufSize, data);
}
#define glReadnPixelsARB _onutReadnPixelsARB

ONUT_FORCE_INLINE void _onutReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) {
    onutGLAPI.onutReadnPixelsEXT(x, y, width, height, format, type, bufSize, data);
}
#define glReadnPixelsEXT _onutReadnPixelsEXT

ONUT_FORCE_INLINE void _onutReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data) {
    onutGLAPI.onutReadnPixelsKHR(x, y, width, height, format, type, bufSize, data);
}
#define glReadnPixelsKHR _onutReadnPixelsKHR

ONUT_FORCE_INLINE void _onutRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2) {
    onutGLAPI.onutRectxOES(x1, y1, x2, y2);
}
#define glRectxOES _onutRectxOES

ONUT_FORCE_INLINE void _onutRectxvOES(const GLfixed *v1, const GLfixed *v2) {
    onutGLAPI.onutRectxvOES(v1, v2);
}
#define glRectxvOES _onutRectxvOES

ONUT_FORCE_INLINE void _onutReferencePlaneSGIX(const GLdouble *equation) {
    onutGLAPI.onutReferencePlaneSGIX(equation);
}
#define glReferencePlaneSGIX _onutReferencePlaneSGIX

ONUT_FORCE_INLINE GLboolean _onutReleaseKeyedMutexWin32EXT(GLuint memory, GLuint64 key) {
    return onutGLAPI.onutReleaseKeyedMutexWin32EXT(memory, key);
}
#define glReleaseKeyedMutexWin32EXT _onutReleaseKeyedMutexWin32EXT

ONUT_FORCE_INLINE void _onutRenderGpuMaskNV(GLbitfield mask) {
    onutGLAPI.onutRenderGpuMaskNV(mask);
}
#define glRenderGpuMaskNV _onutRenderGpuMaskNV

ONUT_FORCE_INLINE void _onutRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageEXT(target, internalformat, width, height);
}
#define glRenderbufferStorageEXT _onutRenderbufferStorageEXT

ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height);
}
#define glRenderbufferStorageMultisampleANGLE _onutRenderbufferStorageMultisampleANGLE

ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height);
}
#define glRenderbufferStorageMultisampleAPPLE _onutRenderbufferStorageMultisampleAPPLE

ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height);
}
#define glRenderbufferStorageMultisampleCoverageNV _onutRenderbufferStorageMultisampleCoverageNV

ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height);
}
#define glRenderbufferStorageMultisampleEXT _onutRenderbufferStorageMultisampleEXT

ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height);
}
#define glRenderbufferStorageMultisampleIMG _onutRenderbufferStorageMultisampleIMG

ONUT_FORCE_INLINE void _onutRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height);
}
#define glRenderbufferStorageMultisampleNV _onutRenderbufferStorageMultisampleNV

ONUT_FORCE_INLINE void _onutReplacementCodePointerSUN(GLenum type, GLsizei stride, const void **pointer) {
    onutGLAPI.onutReplacementCodePointerSUN(type, stride, pointer);
}
#define glReplacementCodePointerSUN _onutReplacementCodePointerSUN

ONUT_FORCE_INLINE void _onutReplacementCodeubSUN(GLubyte code) {
    onutGLAPI.onutReplacementCodeubSUN(code);
}
#define glReplacementCodeubSUN _onutReplacementCodeubSUN

ONUT_FORCE_INLINE void _onutReplacementCodeubvSUN(const GLubyte *code) {
    onutGLAPI.onutReplacementCodeubvSUN(code);
}
#define glReplacementCodeubvSUN _onutReplacementCodeubvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z);
}
#define glReplacementCodeuiColor3fVertex3fSUN _onutReplacementCodeuiColor3fVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiColor3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiColor3fVertex3fvSUN(rc, c, v);
}
#define glReplacementCodeuiColor3fVertex3fvSUN _onutReplacementCodeuiColor3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z);
}
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN _onutReplacementCodeuiColor4fNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v);
}
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN _onutReplacementCodeuiColor4fNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z);
}
#define glReplacementCodeuiColor4ubVertex3fSUN _onutReplacementCodeuiColor4ubVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiColor4ubVertex3fvSUN(const GLuint *rc, const GLubyte *c, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v);
}
#define glReplacementCodeuiColor4ubVertex3fvSUN _onutReplacementCodeuiColor4ubVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z);
}
#define glReplacementCodeuiNormal3fVertex3fSUN _onutReplacementCodeuiNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v);
}
#define glReplacementCodeuiNormal3fVertex3fvSUN _onutReplacementCodeuiNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiSUN(GLuint code) {
    onutGLAPI.onutReplacementCodeuiSUN(code);
}
#define glReplacementCodeuiSUN _onutReplacementCodeuiSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z);
}
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v);
}
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN _onutReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z);
}
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN _onutReplacementCodeuiTexCoord2fNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v);
}
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN _onutReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z);
}
#define glReplacementCodeuiTexCoord2fVertex3fSUN _onutReplacementCodeuiTexCoord2fVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v);
}
#define glReplacementCodeuiTexCoord2fVertex3fvSUN _onutReplacementCodeuiTexCoord2fVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutReplacementCodeuiVertex3fSUN(rc, x, y, z);
}
#define glReplacementCodeuiVertex3fSUN _onutReplacementCodeuiVertex3fSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuiVertex3fvSUN(const GLuint *rc, const GLfloat *v) {
    onutGLAPI.onutReplacementCodeuiVertex3fvSUN(rc, v);
}
#define glReplacementCodeuiVertex3fvSUN _onutReplacementCodeuiVertex3fvSUN

ONUT_FORCE_INLINE void _onutReplacementCodeuivSUN(const GLuint *code) {
    onutGLAPI.onutReplacementCodeuivSUN(code);
}
#define glReplacementCodeuivSUN _onutReplacementCodeuivSUN

ONUT_FORCE_INLINE void _onutReplacementCodeusSUN(GLushort code) {
    onutGLAPI.onutReplacementCodeusSUN(code);
}
#define glReplacementCodeusSUN _onutReplacementCodeusSUN

ONUT_FORCE_INLINE void _onutReplacementCodeusvSUN(const GLushort *code) {
    onutGLAPI.onutReplacementCodeusvSUN(code);
}
#define glReplacementCodeusvSUN _onutReplacementCodeusvSUN

ONUT_FORCE_INLINE void _onutRequestResidentProgramsNV(GLsizei n, const GLuint *programs) {
    onutGLAPI.onutRequestResidentProgramsNV(n, programs);
}
#define glRequestResidentProgramsNV _onutRequestResidentProgramsNV

ONUT_FORCE_INLINE void _onutResetHistogram(GLenum target) {
    onutGLAPI.onutResetHistogram(target);
}
#define glResetHistogram _onutResetHistogram

ONUT_FORCE_INLINE void _onutResetHistogramEXT(GLenum target) {
    onutGLAPI.onutResetHistogramEXT(target);
}
#define glResetHistogramEXT _onutResetHistogramEXT

ONUT_FORCE_INLINE void _onutResetMinmax(GLenum target) {
    onutGLAPI.onutResetMinmax(target);
}
#define glResetMinmax _onutResetMinmax

ONUT_FORCE_INLINE void _onutResetMinmaxEXT(GLenum target) {
    onutGLAPI.onutResetMinmaxEXT(target);
}
#define glResetMinmaxEXT _onutResetMinmaxEXT

ONUT_FORCE_INLINE void _onutResizeBuffersMESA(void) {
    onutGLAPI.onutResizeBuffersMESA();
}
#define glResizeBuffersMESA _onutResizeBuffersMESA

ONUT_FORCE_INLINE void _onutResolveDepthValuesNV(void) {
    onutGLAPI.onutResolveDepthValuesNV();
}
#define glResolveDepthValuesNV _onutResolveDepthValuesNV

ONUT_FORCE_INLINE void _onutResolveMultisampleFramebufferAPPLE(void) {
    onutGLAPI.onutResolveMultisampleFramebufferAPPLE();
}
#define glResolveMultisampleFramebufferAPPLE _onutResolveMultisampleFramebufferAPPLE

ONUT_FORCE_INLINE void _onutResumeTransformFeedbackNV(void) {
    onutGLAPI.onutResumeTransformFeedbackNV();
}
#define glResumeTransformFeedbackNV _onutResumeTransformFeedbackNV

ONUT_FORCE_INLINE void _onutRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z) {
    onutGLAPI.onutRotatexOES(angle, x, y, z);
}
#define glRotatexOES _onutRotatexOES

ONUT_FORCE_INLINE void _onutSampleCoverageARB(GLfloat value, GLboolean invert) {
    onutGLAPI.onutSampleCoverageARB(value, invert);
}
#define glSampleCoverageARB _onutSampleCoverageARB

ONUT_FORCE_INLINE void _onutSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle) {
    onutGLAPI.onutSampleMapATI(dst, interp, swizzle);
}
#define glSampleMapATI _onutSampleMapATI

ONUT_FORCE_INLINE void _onutSampleMaskEXT(GLclampf value, GLboolean invert) {
    onutGLAPI.onutSampleMaskEXT(value, invert);
}
#define glSampleMaskEXT _onutSampleMaskEXT

ONUT_FORCE_INLINE void _onutSampleMaskIndexedNV(GLuint index, GLbitfield mask) {
    onutGLAPI.onutSampleMaskIndexedNV(index, mask);
}
#define glSampleMaskIndexedNV _onutSampleMaskIndexedNV

ONUT_FORCE_INLINE void _onutSampleMaskSGIS(GLclampf value, GLboolean invert) {
    onutGLAPI.onutSampleMaskSGIS(value, invert);
}
#define glSampleMaskSGIS _onutSampleMaskSGIS

ONUT_FORCE_INLINE void _onutSamplePatternEXT(GLenum pattern) {
    onutGLAPI.onutSamplePatternEXT(pattern);
}
#define glSamplePatternEXT _onutSamplePatternEXT

ONUT_FORCE_INLINE void _onutSamplePatternSGIS(GLenum pattern) {
    onutGLAPI.onutSamplePatternSGIS(pattern);
}
#define glSamplePatternSGIS _onutSamplePatternSGIS

ONUT_FORCE_INLINE void _onutSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint *param) {
    onutGLAPI.onutSamplerParameterIivEXT(sampler, pname, param);
}
#define glSamplerParameterIivEXT _onutSamplerParameterIivEXT

ONUT_FORCE_INLINE void _onutSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint *param) {
    onutGLAPI.onutSamplerParameterIivOES(sampler, pname, param);
}
#define glSamplerParameterIivOES _onutSamplerParameterIivOES

ONUT_FORCE_INLINE void _onutSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint *param) {
    onutGLAPI.onutSamplerParameterIuivEXT(sampler, pname, param);
}
#define glSamplerParameterIuivEXT _onutSamplerParameterIuivEXT

ONUT_FORCE_INLINE void _onutSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint *param) {
    onutGLAPI.onutSamplerParameterIuivOES(sampler, pname, param);
}
#define glSamplerParameterIuivOES _onutSamplerParameterIuivOES

ONUT_FORCE_INLINE void _onutScalexOES(GLfixed x, GLfixed y, GLfixed z) {
    onutGLAPI.onutScalexOES(x, y, z);
}
#define glScalexOES _onutScalexOES

ONUT_FORCE_INLINE void _onutScissorArrayvNV(GLuint first, GLsizei count, const GLint *v) {
    onutGLAPI.onutScissorArrayvNV(first, count, v);
}
#define glScissorArrayvNV _onutScissorArrayvNV

ONUT_FORCE_INLINE void _onutScissorArrayvOES(GLuint first, GLsizei count, const GLint *v) {
    onutGLAPI.onutScissorArrayvOES(first, count, v);
}
#define glScissorArrayvOES _onutScissorArrayvOES

ONUT_FORCE_INLINE void _onutScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height) {
    onutGLAPI.onutScissorIndexedNV(index, left, bottom, width, height);
}
#define glScissorIndexedNV _onutScissorIndexedNV

ONUT_FORCE_INLINE void _onutScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height) {
    onutGLAPI.onutScissorIndexedOES(index, left, bottom, width, height);
}
#define glScissorIndexedOES _onutScissorIndexedOES

ONUT_FORCE_INLINE void _onutScissorIndexedvNV(GLuint index, const GLint *v) {
    onutGLAPI.onutScissorIndexedvNV(index, v);
}
#define glScissorIndexedvNV _onutScissorIndexedvNV

ONUT_FORCE_INLINE void _onutScissorIndexedvOES(GLuint index, const GLint *v) {
    onutGLAPI.onutScissorIndexedvOES(index, v);
}
#define glScissorIndexedvOES _onutScissorIndexedvOES

ONUT_FORCE_INLINE void _onutSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue) {
    onutGLAPI.onutSecondaryColor3bEXT(red, green, blue);
}
#define glSecondaryColor3bEXT _onutSecondaryColor3bEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3bvEXT(const GLbyte *v) {
    onutGLAPI.onutSecondaryColor3bvEXT(v);
}
#define glSecondaryColor3bvEXT _onutSecondaryColor3bvEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue) {
    onutGLAPI.onutSecondaryColor3dEXT(red, green, blue);
}
#define glSecondaryColor3dEXT _onutSecondaryColor3dEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3dvEXT(const GLdouble *v) {
    onutGLAPI.onutSecondaryColor3dvEXT(v);
}
#define glSecondaryColor3dvEXT _onutSecondaryColor3dvEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue) {
    onutGLAPI.onutSecondaryColor3fEXT(red, green, blue);
}
#define glSecondaryColor3fEXT _onutSecondaryColor3fEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3fvEXT(const GLfloat *v) {
    onutGLAPI.onutSecondaryColor3fvEXT(v);
}
#define glSecondaryColor3fvEXT _onutSecondaryColor3fvEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue) {
    onutGLAPI.onutSecondaryColor3hNV(red, green, blue);
}
#define glSecondaryColor3hNV _onutSecondaryColor3hNV

ONUT_FORCE_INLINE void _onutSecondaryColor3hvNV(const GLhalfNV *v) {
    onutGLAPI.onutSecondaryColor3hvNV(v);
}
#define glSecondaryColor3hvNV _onutSecondaryColor3hvNV

ONUT_FORCE_INLINE void _onutSecondaryColor3iEXT(GLint red, GLint green, GLint blue) {
    onutGLAPI.onutSecondaryColor3iEXT(red, green, blue);
}
#define glSecondaryColor3iEXT _onutSecondaryColor3iEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3ivEXT(const GLint *v) {
    onutGLAPI.onutSecondaryColor3ivEXT(v);
}
#define glSecondaryColor3ivEXT _onutSecondaryColor3ivEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue) {
    onutGLAPI.onutSecondaryColor3sEXT(red, green, blue);
}
#define glSecondaryColor3sEXT _onutSecondaryColor3sEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3svEXT(const GLshort *v) {
    onutGLAPI.onutSecondaryColor3svEXT(v);
}
#define glSecondaryColor3svEXT _onutSecondaryColor3svEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue) {
    onutGLAPI.onutSecondaryColor3ubEXT(red, green, blue);
}
#define glSecondaryColor3ubEXT _onutSecondaryColor3ubEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3ubvEXT(const GLubyte *v) {
    onutGLAPI.onutSecondaryColor3ubvEXT(v);
}
#define glSecondaryColor3ubvEXT _onutSecondaryColor3ubvEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue) {
    onutGLAPI.onutSecondaryColor3uiEXT(red, green, blue);
}
#define glSecondaryColor3uiEXT _onutSecondaryColor3uiEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3uivEXT(const GLuint *v) {
    onutGLAPI.onutSecondaryColor3uivEXT(v);
}
#define glSecondaryColor3uivEXT _onutSecondaryColor3uivEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue) {
    onutGLAPI.onutSecondaryColor3usEXT(red, green, blue);
}
#define glSecondaryColor3usEXT _onutSecondaryColor3usEXT

ONUT_FORCE_INLINE void _onutSecondaryColor3usvEXT(const GLushort *v) {
    onutGLAPI.onutSecondaryColor3usvEXT(v);
}
#define glSecondaryColor3usvEXT _onutSecondaryColor3usvEXT

ONUT_FORCE_INLINE void _onutSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride) {
    onutGLAPI.onutSecondaryColorFormatNV(size, type, stride);
}
#define glSecondaryColorFormatNV _onutSecondaryColorFormatNV

ONUT_FORCE_INLINE void _onutSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutSecondaryColorPointerEXT(size, type, stride, pointer);
}
#define glSecondaryColorPointerEXT _onutSecondaryColorPointerEXT

ONUT_FORCE_INLINE void _onutSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride);
}
#define glSecondaryColorPointerListIBM _onutSecondaryColorPointerListIBM

ONUT_FORCE_INLINE void _onutSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList) {
    onutGLAPI.onutSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList);
}
#define glSelectPerfMonitorCountersAMD _onutSelectPerfMonitorCountersAMD

ONUT_FORCE_INLINE void _onutSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, const GLuint64 *params) {
    onutGLAPI.onutSemaphoreParameterui64vEXT(semaphore, pname, params);
}
#define glSemaphoreParameterui64vEXT _onutSemaphoreParameterui64vEXT

ONUT_FORCE_INLINE void _onutSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column) {
    onutGLAPI.onutSeparableFilter2D(target, internalformat, width, height, format, type, row, column);
}
#define glSeparableFilter2D _onutSeparableFilter2D

ONUT_FORCE_INLINE void _onutSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column) {
    onutGLAPI.onutSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column);
}
#define glSeparableFilter2DEXT _onutSeparableFilter2DEXT

ONUT_FORCE_INLINE void _onutSetFenceAPPLE(GLuint fence) {
    onutGLAPI.onutSetFenceAPPLE(fence);
}
#define glSetFenceAPPLE _onutSetFenceAPPLE

ONUT_FORCE_INLINE void _onutSetFenceNV(GLuint fence, GLenum condition) {
    onutGLAPI.onutSetFenceNV(fence, condition);
}
#define glSetFenceNV _onutSetFenceNV

ONUT_FORCE_INLINE void _onutSetFragmentShaderConstantATI(GLuint dst, const GLfloat *value) {
    onutGLAPI.onutSetFragmentShaderConstantATI(dst, value);
}
#define glSetFragmentShaderConstantATI _onutSetFragmentShaderConstantATI

ONUT_FORCE_INLINE void _onutSetInvariantEXT(GLuint id, GLenum type, const void *addr) {
    onutGLAPI.onutSetInvariantEXT(id, type, addr);
}
#define glSetInvariantEXT _onutSetInvariantEXT

ONUT_FORCE_INLINE void _onutSetLocalConstantEXT(GLuint id, GLenum type, const void *addr) {
    onutGLAPI.onutSetLocalConstantEXT(id, type, addr);
}
#define glSetLocalConstantEXT _onutSetLocalConstantEXT

ONUT_FORCE_INLINE void _onutSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat *val) {
    onutGLAPI.onutSetMultisamplefvAMD(pname, index, val);
}
#define glSetMultisamplefvAMD _onutSetMultisamplefvAMD

ONUT_FORCE_INLINE void _onutShaderOp1EXT(GLenum op, GLuint res, GLuint arg1) {
    onutGLAPI.onutShaderOp1EXT(op, res, arg1);
}
#define glShaderOp1EXT _onutShaderOp1EXT

ONUT_FORCE_INLINE void _onutShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2) {
    onutGLAPI.onutShaderOp2EXT(op, res, arg1, arg2);
}
#define glShaderOp2EXT _onutShaderOp2EXT

ONUT_FORCE_INLINE void _onutShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3) {
    onutGLAPI.onutShaderOp3EXT(op, res, arg1, arg2, arg3);
}
#define glShaderOp3EXT _onutShaderOp3EXT

ONUT_FORCE_INLINE void _onutShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length) {
    onutGLAPI.onutShaderSourceARB(shaderObj, count, string, length);
}
#define glShaderSourceARB _onutShaderSourceARB

ONUT_FORCE_INLINE void _onutSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points) {
    onutGLAPI.onutSharpenTexFuncSGIS(target, n, points);
}
#define glSharpenTexFuncSGIS _onutSharpenTexFuncSGIS

ONUT_FORCE_INLINE void _onutSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts) {
    onutGLAPI.onutSignalSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts);
}
#define glSignalSemaphoreEXT _onutSignalSemaphoreEXT

ONUT_FORCE_INLINE void _onutSignalVkFenceNV(GLuint64 vkFence) {
    onutGLAPI.onutSignalVkFenceNV(vkFence);
}
#define glSignalVkFenceNV _onutSignalVkFenceNV

ONUT_FORCE_INLINE void _onutSignalVkSemaphoreNV(GLuint64 vkSemaphore) {
    onutGLAPI.onutSignalVkSemaphoreNV(vkSemaphore);
}
#define glSignalVkSemaphoreNV _onutSignalVkSemaphoreNV

ONUT_FORCE_INLINE void _onutSpecializeShaderARB(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue) {
    onutGLAPI.onutSpecializeShaderARB(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue);
}
#define glSpecializeShaderARB _onutSpecializeShaderARB

ONUT_FORCE_INLINE void _onutSpriteParameterfSGIX(GLenum pname, GLfloat param) {
    onutGLAPI.onutSpriteParameterfSGIX(pname, param);
}
#define glSpriteParameterfSGIX _onutSpriteParameterfSGIX

ONUT_FORCE_INLINE void _onutSpriteParameterfvSGIX(GLenum pname, const GLfloat *params) {
    onutGLAPI.onutSpriteParameterfvSGIX(pname, params);
}
#define glSpriteParameterfvSGIX _onutSpriteParameterfvSGIX

ONUT_FORCE_INLINE void _onutSpriteParameteriSGIX(GLenum pname, GLint param) {
    onutGLAPI.onutSpriteParameteriSGIX(pname, param);
}
#define glSpriteParameteriSGIX _onutSpriteParameteriSGIX

ONUT_FORCE_INLINE void _onutSpriteParameterivSGIX(GLenum pname, const GLint *params) {
    onutGLAPI.onutSpriteParameterivSGIX(pname, params);
}
#define glSpriteParameterivSGIX _onutSpriteParameterivSGIX

ONUT_FORCE_INLINE void _onutStartInstrumentsSGIX(void) {
    onutGLAPI.onutStartInstrumentsSGIX();
}
#define glStartInstrumentsSGIX _onutStartInstrumentsSGIX

ONUT_FORCE_INLINE void _onutStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask) {
    onutGLAPI.onutStartTilingQCOM(x, y, width, height, preserveMask);
}
#define glStartTilingQCOM _onutStartTilingQCOM

ONUT_FORCE_INLINE void _onutStateCaptureNV(GLuint state, GLenum mode) {
    onutGLAPI.onutStateCaptureNV(state, mode);
}
#define glStateCaptureNV _onutStateCaptureNV

ONUT_FORCE_INLINE void _onutStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag) {
    onutGLAPI.onutStencilClearTagEXT(stencilTagBits, stencilClearTag);
}
#define glStencilClearTagEXT _onutStencilClearTagEXT

ONUT_FORCE_INLINE void _onutStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues);
}
#define glStencilFillPathInstancedNV _onutStencilFillPathInstancedNV

ONUT_FORCE_INLINE void _onutStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask) {
    onutGLAPI.onutStencilFillPathNV(path, fillMode, mask);
}
#define glStencilFillPathNV _onutStencilFillPathNV

ONUT_FORCE_INLINE void _onutStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask) {
    onutGLAPI.onutStencilFuncSeparateATI(frontfunc, backfunc, ref, mask);
}
#define glStencilFuncSeparateATI _onutStencilFuncSeparateATI

ONUT_FORCE_INLINE void _onutStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) {
    onutGLAPI.onutStencilOpSeparateATI(face, sfail, dpfail, dppass);
}
#define glStencilOpSeparateATI _onutStencilOpSeparateATI

ONUT_FORCE_INLINE void _onutStencilOpValueAMD(GLenum face, GLuint value) {
    onutGLAPI.onutStencilOpValueAMD(face, value);
}
#define glStencilOpValueAMD _onutStencilOpValueAMD

ONUT_FORCE_INLINE void _onutStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues);
}
#define glStencilStrokePathInstancedNV _onutStencilStrokePathInstancedNV

ONUT_FORCE_INLINE void _onutStencilStrokePathNV(GLuint path, GLint reference, GLuint mask) {
    onutGLAPI.onutStencilStrokePathNV(path, reference, mask);
}
#define glStencilStrokePathNV _onutStencilStrokePathNV

ONUT_FORCE_INLINE void _onutStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues);
}
#define glStencilThenCoverFillPathInstancedNV _onutStencilThenCoverFillPathInstancedNV

ONUT_FORCE_INLINE void _onutStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode) {
    onutGLAPI.onutStencilThenCoverFillPathNV(path, fillMode, mask, coverMode);
}
#define glStencilThenCoverFillPathNV _onutStencilThenCoverFillPathNV

ONUT_FORCE_INLINE void _onutStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues);
}
#define glStencilThenCoverStrokePathInstancedNV _onutStencilThenCoverStrokePathInstancedNV

ONUT_FORCE_INLINE void _onutStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode) {
    onutGLAPI.onutStencilThenCoverStrokePathNV(path, reference, mask, coverMode);
}
#define glStencilThenCoverStrokePathNV _onutStencilThenCoverStrokePathNV

ONUT_FORCE_INLINE void _onutStopInstrumentsSGIX(GLint marker) {
    onutGLAPI.onutStopInstrumentsSGIX(marker);
}
#define glStopInstrumentsSGIX _onutStopInstrumentsSGIX

ONUT_FORCE_INLINE void _onutStringMarkerGREMEDY(GLsizei len, const void *string) {
    onutGLAPI.onutStringMarkerGREMEDY(len, string);
}
#define glStringMarkerGREMEDY _onutStringMarkerGREMEDY

ONUT_FORCE_INLINE void _onutSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits) {
    onutGLAPI.onutSubpixelPrecisionBiasNV(xbits, ybits);
}
#define glSubpixelPrecisionBiasNV _onutSubpixelPrecisionBiasNV

ONUT_FORCE_INLINE void _onutSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW) {
    onutGLAPI.onutSwizzleEXT(res, in, outX, outY, outZ, outW);
}
#define glSwizzleEXT _onutSwizzleEXT

ONUT_FORCE_INLINE void _onutSyncTextureINTEL(GLuint texture) {
    onutGLAPI.onutSyncTextureINTEL(texture);
}
#define glSyncTextureINTEL _onutSyncTextureINTEL

ONUT_FORCE_INLINE void _onutTagSampleBufferSGIX(void) {
    onutGLAPI.onutTagSampleBufferSGIX();
}
#define glTagSampleBufferSGIX _onutTagSampleBufferSGIX

ONUT_FORCE_INLINE void _onutTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz) {
    onutGLAPI.onutTangent3bEXT(tx, ty, tz);
}
#define glTangent3bEXT _onutTangent3bEXT

ONUT_FORCE_INLINE void _onutTangent3bvEXT(const GLbyte *v) {
    onutGLAPI.onutTangent3bvEXT(v);
}
#define glTangent3bvEXT _onutTangent3bvEXT

ONUT_FORCE_INLINE void _onutTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz) {
    onutGLAPI.onutTangent3dEXT(tx, ty, tz);
}
#define glTangent3dEXT _onutTangent3dEXT

ONUT_FORCE_INLINE void _onutTangent3dvEXT(const GLdouble *v) {
    onutGLAPI.onutTangent3dvEXT(v);
}
#define glTangent3dvEXT _onutTangent3dvEXT

ONUT_FORCE_INLINE void _onutTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz) {
    onutGLAPI.onutTangent3fEXT(tx, ty, tz);
}
#define glTangent3fEXT _onutTangent3fEXT

ONUT_FORCE_INLINE void _onutTangent3fvEXT(const GLfloat *v) {
    onutGLAPI.onutTangent3fvEXT(v);
}
#define glTangent3fvEXT _onutTangent3fvEXT

ONUT_FORCE_INLINE void _onutTangent3iEXT(GLint tx, GLint ty, GLint tz) {
    onutGLAPI.onutTangent3iEXT(tx, ty, tz);
}
#define glTangent3iEXT _onutTangent3iEXT

ONUT_FORCE_INLINE void _onutTangent3ivEXT(const GLint *v) {
    onutGLAPI.onutTangent3ivEXT(v);
}
#define glTangent3ivEXT _onutTangent3ivEXT

ONUT_FORCE_INLINE void _onutTangent3sEXT(GLshort tx, GLshort ty, GLshort tz) {
    onutGLAPI.onutTangent3sEXT(tx, ty, tz);
}
#define glTangent3sEXT _onutTangent3sEXT

ONUT_FORCE_INLINE void _onutTangent3svEXT(const GLshort *v) {
    onutGLAPI.onutTangent3svEXT(v);
}
#define glTangent3svEXT _onutTangent3svEXT

ONUT_FORCE_INLINE void _onutTangentPointerEXT(GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutTangentPointerEXT(type, stride, pointer);
}
#define glTangentPointerEXT _onutTangentPointerEXT

ONUT_FORCE_INLINE void _onutTbufferMask3DFX(GLuint mask) {
    onutGLAPI.onutTbufferMask3DFX(mask);
}
#define glTbufferMask3DFX _onutTbufferMask3DFX

ONUT_FORCE_INLINE void _onutTessellationFactorAMD(GLfloat factor) {
    onutGLAPI.onutTessellationFactorAMD(factor);
}
#define glTessellationFactorAMD _onutTessellationFactorAMD

ONUT_FORCE_INLINE void _onutTessellationModeAMD(GLenum mode) {
    onutGLAPI.onutTessellationModeAMD(mode);
}
#define glTessellationModeAMD _onutTessellationModeAMD

ONUT_FORCE_INLINE GLboolean _onutTestFenceAPPLE(GLuint fence) {
    return onutGLAPI.onutTestFenceAPPLE(fence);
}
#define glTestFenceAPPLE _onutTestFenceAPPLE

ONUT_FORCE_INLINE GLboolean _onutTestFenceNV(GLuint fence) {
    return onutGLAPI.onutTestFenceNV(fence);
}
#define glTestFenceNV _onutTestFenceNV

ONUT_FORCE_INLINE GLboolean _onutTestObjectAPPLE(GLenum object, GLuint name) {
    return onutGLAPI.onutTestObjectAPPLE(object, name);
}
#define glTestObjectAPPLE _onutTestObjectAPPLE

ONUT_FORCE_INLINE void _onutTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer) {
    onutGLAPI.onutTexBufferARB(target, internalformat, buffer);
}
#define glTexBufferARB _onutTexBufferARB

ONUT_FORCE_INLINE void _onutTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer) {
    onutGLAPI.onutTexBufferEXT(target, internalformat, buffer);
}
#define glTexBufferEXT _onutTexBufferEXT

ONUT_FORCE_INLINE void _onutTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer) {
    onutGLAPI.onutTexBufferOES(target, internalformat, buffer);
}
#define glTexBufferOES _onutTexBufferOES

ONUT_FORCE_INLINE void _onutTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) {
    onutGLAPI.onutTexBufferRangeEXT(target, internalformat, buffer, offset, size);
}
#define glTexBufferRangeEXT _onutTexBufferRangeEXT

ONUT_FORCE_INLINE void _onutTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) {
    onutGLAPI.onutTexBufferRangeOES(target, internalformat, buffer, offset, size);
}
#define glTexBufferRangeOES _onutTexBufferRangeOES

ONUT_FORCE_INLINE void _onutTexBumpParameterfvATI(GLenum pname, const GLfloat *param) {
    onutGLAPI.onutTexBumpParameterfvATI(pname, param);
}
#define glTexBumpParameterfvATI _onutTexBumpParameterfvATI

ONUT_FORCE_INLINE void _onutTexBumpParameterivATI(GLenum pname, const GLint *param) {
    onutGLAPI.onutTexBumpParameterivATI(pname, param);
}
#define glTexBumpParameterivATI _onutTexBumpParameterivATI

ONUT_FORCE_INLINE void _onutTexCoord1bOES(GLbyte s) {
    onutGLAPI.onutTexCoord1bOES(s);
}
#define glTexCoord1bOES _onutTexCoord1bOES

ONUT_FORCE_INLINE void _onutTexCoord1bvOES(const GLbyte *coords) {
    onutGLAPI.onutTexCoord1bvOES(coords);
}
#define glTexCoord1bvOES _onutTexCoord1bvOES

ONUT_FORCE_INLINE void _onutTexCoord1hNV(GLhalfNV s) {
    onutGLAPI.onutTexCoord1hNV(s);
}
#define glTexCoord1hNV _onutTexCoord1hNV

ONUT_FORCE_INLINE void _onutTexCoord1hvNV(const GLhalfNV *v) {
    onutGLAPI.onutTexCoord1hvNV(v);
}
#define glTexCoord1hvNV _onutTexCoord1hvNV

ONUT_FORCE_INLINE void _onutTexCoord1xOES(GLfixed s) {
    onutGLAPI.onutTexCoord1xOES(s);
}
#define glTexCoord1xOES _onutTexCoord1xOES

ONUT_FORCE_INLINE void _onutTexCoord1xvOES(const GLfixed *coords) {
    onutGLAPI.onutTexCoord1xvOES(coords);
}
#define glTexCoord1xvOES _onutTexCoord1xvOES

ONUT_FORCE_INLINE void _onutTexCoord2bOES(GLbyte s, GLbyte t) {
    onutGLAPI.onutTexCoord2bOES(s, t);
}
#define glTexCoord2bOES _onutTexCoord2bOES

ONUT_FORCE_INLINE void _onutTexCoord2bvOES(const GLbyte *coords) {
    onutGLAPI.onutTexCoord2bvOES(coords);
}
#define glTexCoord2bvOES _onutTexCoord2bvOES

ONUT_FORCE_INLINE void _onutTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z);
}
#define glTexCoord2fColor3fVertex3fSUN _onutTexCoord2fColor3fVertex3fSUN

ONUT_FORCE_INLINE void _onutTexCoord2fColor3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *v) {
    onutGLAPI.onutTexCoord2fColor3fVertex3fvSUN(tc, c, v);
}
#define glTexCoord2fColor3fVertex3fvSUN _onutTexCoord2fColor3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z);
}
#define glTexCoord2fColor4fNormal3fVertex3fSUN _onutTexCoord2fColor4fNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v);
}
#define glTexCoord2fColor4fNormal3fVertex3fvSUN _onutTexCoord2fColor4fNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z);
}
#define glTexCoord2fColor4ubVertex3fSUN _onutTexCoord2fColor4ubVertex3fSUN

ONUT_FORCE_INLINE void _onutTexCoord2fColor4ubVertex3fvSUN(const GLfloat *tc, const GLubyte *c, const GLfloat *v) {
    onutGLAPI.onutTexCoord2fColor4ubVertex3fvSUN(tc, c, v);
}
#define glTexCoord2fColor4ubVertex3fvSUN _onutTexCoord2fColor4ubVertex3fvSUN

ONUT_FORCE_INLINE void _onutTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z);
}
#define glTexCoord2fNormal3fVertex3fSUN _onutTexCoord2fNormal3fVertex3fSUN

ONUT_FORCE_INLINE void _onutTexCoord2fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutTexCoord2fNormal3fVertex3fvSUN(tc, n, v);
}
#define glTexCoord2fNormal3fVertex3fvSUN _onutTexCoord2fNormal3fVertex3fvSUN

ONUT_FORCE_INLINE void _onutTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutTexCoord2fVertex3fSUN(s, t, x, y, z);
}
#define glTexCoord2fVertex3fSUN _onutTexCoord2fVertex3fSUN

ONUT_FORCE_INLINE void _onutTexCoord2fVertex3fvSUN(const GLfloat *tc, const GLfloat *v) {
    onutGLAPI.onutTexCoord2fVertex3fvSUN(tc, v);
}
#define glTexCoord2fVertex3fvSUN _onutTexCoord2fVertex3fvSUN

ONUT_FORCE_INLINE void _onutTexCoord2hNV(GLhalfNV s, GLhalfNV t) {
    onutGLAPI.onutTexCoord2hNV(s, t);
}
#define glTexCoord2hNV _onutTexCoord2hNV

ONUT_FORCE_INLINE void _onutTexCoord2hvNV(const GLhalfNV *v) {
    onutGLAPI.onutTexCoord2hvNV(v);
}
#define glTexCoord2hvNV _onutTexCoord2hvNV

ONUT_FORCE_INLINE void _onutTexCoord2xOES(GLfixed s, GLfixed t) {
    onutGLAPI.onutTexCoord2xOES(s, t);
}
#define glTexCoord2xOES _onutTexCoord2xOES

ONUT_FORCE_INLINE void _onutTexCoord2xvOES(const GLfixed *coords) {
    onutGLAPI.onutTexCoord2xvOES(coords);
}
#define glTexCoord2xvOES _onutTexCoord2xvOES

ONUT_FORCE_INLINE void _onutTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r) {
    onutGLAPI.onutTexCoord3bOES(s, t, r);
}
#define glTexCoord3bOES _onutTexCoord3bOES

ONUT_FORCE_INLINE void _onutTexCoord3bvOES(const GLbyte *coords) {
    onutGLAPI.onutTexCoord3bvOES(coords);
}
#define glTexCoord3bvOES _onutTexCoord3bvOES

ONUT_FORCE_INLINE void _onutTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r) {
    onutGLAPI.onutTexCoord3hNV(s, t, r);
}
#define glTexCoord3hNV _onutTexCoord3hNV

ONUT_FORCE_INLINE void _onutTexCoord3hvNV(const GLhalfNV *v) {
    onutGLAPI.onutTexCoord3hvNV(v);
}
#define glTexCoord3hvNV _onutTexCoord3hvNV

ONUT_FORCE_INLINE void _onutTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r) {
    onutGLAPI.onutTexCoord3xOES(s, t, r);
}
#define glTexCoord3xOES _onutTexCoord3xOES

ONUT_FORCE_INLINE void _onutTexCoord3xvOES(const GLfixed *coords) {
    onutGLAPI.onutTexCoord3xvOES(coords);
}
#define glTexCoord3xvOES _onutTexCoord3xvOES

ONUT_FORCE_INLINE void _onutTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q) {
    onutGLAPI.onutTexCoord4bOES(s, t, r, q);
}
#define glTexCoord4bOES _onutTexCoord4bOES

ONUT_FORCE_INLINE void _onutTexCoord4bvOES(const GLbyte *coords) {
    onutGLAPI.onutTexCoord4bvOES(coords);
}
#define glTexCoord4bvOES _onutTexCoord4bvOES

ONUT_FORCE_INLINE void _onutTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w);
}
#define glTexCoord4fColor4fNormal3fVertex4fSUN _onutTexCoord4fColor4fNormal3fVertex4fSUN

ONUT_FORCE_INLINE void _onutTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v) {
    onutGLAPI.onutTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v);
}
#define glTexCoord4fColor4fNormal3fVertex4fvSUN _onutTexCoord4fColor4fNormal3fVertex4fvSUN

ONUT_FORCE_INLINE void _onutTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w);
}
#define glTexCoord4fVertex4fSUN _onutTexCoord4fVertex4fSUN

ONUT_FORCE_INLINE void _onutTexCoord4fVertex4fvSUN(const GLfloat *tc, const GLfloat *v) {
    onutGLAPI.onutTexCoord4fVertex4fvSUN(tc, v);
}
#define glTexCoord4fVertex4fvSUN _onutTexCoord4fVertex4fvSUN

ONUT_FORCE_INLINE void _onutTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q) {
    onutGLAPI.onutTexCoord4hNV(s, t, r, q);
}
#define glTexCoord4hNV _onutTexCoord4hNV

ONUT_FORCE_INLINE void _onutTexCoord4hvNV(const GLhalfNV *v) {
    onutGLAPI.onutTexCoord4hvNV(v);
}
#define glTexCoord4hvNV _onutTexCoord4hvNV

ONUT_FORCE_INLINE void _onutTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q) {
    onutGLAPI.onutTexCoord4xOES(s, t, r, q);
}
#define glTexCoord4xOES _onutTexCoord4xOES

ONUT_FORCE_INLINE void _onutTexCoord4xvOES(const GLfixed *coords) {
    onutGLAPI.onutTexCoord4xvOES(coords);
}
#define glTexCoord4xvOES _onutTexCoord4xvOES

ONUT_FORCE_INLINE void _onutTexCoordFormatNV(GLint size, GLenum type, GLsizei stride) {
    onutGLAPI.onutTexCoordFormatNV(size, type, stride);
}
#define glTexCoordFormatNV _onutTexCoordFormatNV

ONUT_FORCE_INLINE void _onutTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer) {
    onutGLAPI.onutTexCoordPointerEXT(size, type, stride, count, pointer);
}
#define glTexCoordPointerEXT _onutTexCoordPointerEXT

ONUT_FORCE_INLINE void _onutTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutTexCoordPointerListIBM(size, type, stride, pointer, ptrstride);
}
#define glTexCoordPointerListIBM _onutTexCoordPointerListIBM

ONUT_FORCE_INLINE void _onutTexCoordPointervINTEL(GLint size, GLenum type, const void **pointer) {
    onutGLAPI.onutTexCoordPointervINTEL(size, type, pointer);
}
#define glTexCoordPointervINTEL _onutTexCoordPointervINTEL

ONUT_FORCE_INLINE void _onutTexEnvxOES(GLenum target, GLenum pname, GLfixed param) {
    onutGLAPI.onutTexEnvxOES(target, pname, param);
}
#define glTexEnvxOES _onutTexEnvxOES

ONUT_FORCE_INLINE void _onutTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params) {
    onutGLAPI.onutTexEnvxvOES(target, pname, params);
}
#define glTexEnvxvOES _onutTexEnvxvOES

ONUT_FORCE_INLINE void _onutTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights) {
    onutGLAPI.onutTexFilterFuncSGIS(target, filter, n, weights);
}
#define glTexFilterFuncSGIS _onutTexFilterFuncSGIS

ONUT_FORCE_INLINE void _onutTexGenxOES(GLenum coord, GLenum pname, GLfixed param) {
    onutGLAPI.onutTexGenxOES(coord, pname, param);
}
#define glTexGenxOES _onutTexGenxOES

ONUT_FORCE_INLINE void _onutTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params) {
    onutGLAPI.onutTexGenxvOES(coord, pname, params);
}
#define glTexGenxvOES _onutTexGenxvOES

ONUT_FORCE_INLINE void _onutTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations) {
    onutGLAPI.onutTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations);
}
#define glTexImage2DMultisampleCoverageNV _onutTexImage2DMultisampleCoverageNV

ONUT_FORCE_INLINE void _onutTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels);
}
#define glTexImage3DEXT _onutTexImage3DEXT

ONUT_FORCE_INLINE void _onutTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations) {
    onutGLAPI.onutTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations);
}
#define glTexImage3DMultisampleCoverageNV _onutTexImage3DMultisampleCoverageNV

ONUT_FORCE_INLINE void _onutTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels);
}
#define glTexImage3DOES _onutTexImage3DOES

ONUT_FORCE_INLINE void _onutTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels);
}
#define glTexImage4DSGIS _onutTexImage4DSGIS

ONUT_FORCE_INLINE void _onutTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit) {
    onutGLAPI.onutTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit);
}
#define glTexPageCommitmentARB _onutTexPageCommitmentARB

ONUT_FORCE_INLINE void _onutTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit) {
    onutGLAPI.onutTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit);
}
#define glTexPageCommitmentEXT _onutTexPageCommitmentEXT

ONUT_FORCE_INLINE void _onutTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutTexParameterIivEXT(target, pname, params);
}
#define glTexParameterIivEXT _onutTexParameterIivEXT

ONUT_FORCE_INLINE void _onutTexParameterIivOES(GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutTexParameterIivOES(target, pname, params);
}
#define glTexParameterIivOES _onutTexParameterIivOES

ONUT_FORCE_INLINE void _onutTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params) {
    onutGLAPI.onutTexParameterIuivEXT(target, pname, params);
}
#define glTexParameterIuivEXT _onutTexParameterIuivEXT

ONUT_FORCE_INLINE void _onutTexParameterIuivOES(GLenum target, GLenum pname, const GLuint *params) {
    onutGLAPI.onutTexParameterIuivOES(target, pname, params);
}
#define glTexParameterIuivOES _onutTexParameterIuivOES

ONUT_FORCE_INLINE void _onutTexParameterxOES(GLenum target, GLenum pname, GLfixed param) {
    onutGLAPI.onutTexParameterxOES(target, pname, param);
}
#define glTexParameterxOES _onutTexParameterxOES

ONUT_FORCE_INLINE void _onutTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params) {
    onutGLAPI.onutTexParameterxvOES(target, pname, params);
}
#define glTexParameterxvOES _onutTexParameterxvOES

ONUT_FORCE_INLINE void _onutTexRenderbufferNV(GLenum target, GLuint renderbuffer) {
    onutGLAPI.onutTexRenderbufferNV(target, renderbuffer);
}
#define glTexRenderbufferNV _onutTexRenderbufferNV

ONUT_FORCE_INLINE void _onutTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) {
    onutGLAPI.onutTexStorage1DEXT(target, levels, internalformat, width);
}
#define glTexStorage1DEXT _onutTexStorage1DEXT

ONUT_FORCE_INLINE void _onutTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutTexStorage2DEXT(target, levels, internalformat, width, height);
}
#define glTexStorage2DEXT _onutTexStorage2DEXT

ONUT_FORCE_INLINE void _onutTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) {
    onutGLAPI.onutTexStorage3DEXT(target, levels, internalformat, width, height, depth);
}
#define glTexStorage3DEXT _onutTexStorage3DEXT

ONUT_FORCE_INLINE void _onutTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) {
    onutGLAPI.onutTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations);
}
#define glTexStorage3DMultisampleOES _onutTexStorage3DMultisampleOES

ONUT_FORCE_INLINE void _onutTexStorageMem1DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTexStorageMem1DEXT(target, levels, internalFormat, width, memory, offset);
}
#define glTexStorageMem1DEXT _onutTexStorageMem1DEXT

ONUT_FORCE_INLINE void _onutTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTexStorageMem2DEXT(target, levels, internalFormat, width, height, memory, offset);
}
#define glTexStorageMem2DEXT _onutTexStorageMem2DEXT

ONUT_FORCE_INLINE void _onutTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTexStorageMem2DMultisampleEXT(target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset);
}
#define glTexStorageMem2DMultisampleEXT _onutTexStorageMem2DMultisampleEXT

ONUT_FORCE_INLINE void _onutTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTexStorageMem3DEXT(target, levels, internalFormat, width, height, depth, memory, offset);
}
#define glTexStorageMem3DEXT _onutTexStorageMem3DEXT

ONUT_FORCE_INLINE void _onutTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTexStorageMem3DMultisampleEXT(target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset);
}
#define glTexStorageMem3DMultisampleEXT _onutTexStorageMem3DMultisampleEXT

ONUT_FORCE_INLINE void _onutTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags) {
    onutGLAPI.onutTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags);
}
#define glTexStorageSparseAMD _onutTexStorageSparseAMD

ONUT_FORCE_INLINE void _onutTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels);
}
#define glTexSubImage1DEXT _onutTexSubImage1DEXT

ONUT_FORCE_INLINE void _onutTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels);
}
#define glTexSubImage2DEXT _onutTexSubImage2DEXT

ONUT_FORCE_INLINE void _onutTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}
#define glTexSubImage3DEXT _onutTexSubImage3DEXT

ONUT_FORCE_INLINE void _onutTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}
#define glTexSubImage3DOES _onutTexSubImage3DOES

ONUT_FORCE_INLINE void _onutTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels);
}
#define glTexSubImage4DSGIS _onutTexSubImage4DSGIS

ONUT_FORCE_INLINE void _onutTextureBarrierNV(void) {
    onutGLAPI.onutTextureBarrierNV();
}
#define glTextureBarrierNV _onutTextureBarrierNV

ONUT_FORCE_INLINE void _onutTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer) {
    onutGLAPI.onutTextureBufferEXT(texture, target, internalformat, buffer);
}
#define glTextureBufferEXT _onutTextureBufferEXT

ONUT_FORCE_INLINE void _onutTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) {
    onutGLAPI.onutTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size);
}
#define glTextureBufferRangeEXT _onutTextureBufferRangeEXT

ONUT_FORCE_INLINE void _onutTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) {
    onutGLAPI.onutTextureColorMaskSGIS(red, green, blue, alpha);
}
#define glTextureColorMaskSGIS _onutTextureColorMaskSGIS

ONUT_FORCE_INLINE void _onutTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels);
}
#define glTextureImage1DEXT _onutTextureImage1DEXT

ONUT_FORCE_INLINE void _onutTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels);
}
#define glTextureImage2DEXT _onutTextureImage2DEXT

ONUT_FORCE_INLINE void _onutTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations) {
    onutGLAPI.onutTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations);
}
#define glTextureImage2DMultisampleCoverageNV _onutTextureImage2DMultisampleCoverageNV

ONUT_FORCE_INLINE void _onutTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations) {
    onutGLAPI.onutTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations);
}
#define glTextureImage2DMultisampleNV _onutTextureImage2DMultisampleNV

ONUT_FORCE_INLINE void _onutTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels);
}
#define glTextureImage3DEXT _onutTextureImage3DEXT

ONUT_FORCE_INLINE void _onutTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations) {
    onutGLAPI.onutTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations);
}
#define glTextureImage3DMultisampleCoverageNV _onutTextureImage3DMultisampleCoverageNV

ONUT_FORCE_INLINE void _onutTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations) {
    onutGLAPI.onutTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations);
}
#define glTextureImage3DMultisampleNV _onutTextureImage3DMultisampleNV

ONUT_FORCE_INLINE void _onutTextureLightEXT(GLenum pname) {
    onutGLAPI.onutTextureLightEXT(pname);
}
#define glTextureLightEXT _onutTextureLightEXT

ONUT_FORCE_INLINE void _onutTextureMaterialEXT(GLenum face, GLenum mode) {
    onutGLAPI.onutTextureMaterialEXT(face, mode);
}
#define glTextureMaterialEXT _onutTextureMaterialEXT

ONUT_FORCE_INLINE void _onutTextureNormalEXT(GLenum mode) {
    onutGLAPI.onutTextureNormalEXT(mode);
}
#define glTextureNormalEXT _onutTextureNormalEXT

ONUT_FORCE_INLINE void _onutTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit) {
    onutGLAPI.onutTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit);
}
#define glTexturePageCommitmentEXT _onutTexturePageCommitmentEXT

ONUT_FORCE_INLINE void _onutTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutTextureParameterIivEXT(texture, target, pname, params);
}
#define glTextureParameterIivEXT _onutTextureParameterIivEXT

ONUT_FORCE_INLINE void _onutTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint *params) {
    onutGLAPI.onutTextureParameterIuivEXT(texture, target, pname, params);
}
#define glTextureParameterIuivEXT _onutTextureParameterIuivEXT

ONUT_FORCE_INLINE void _onutTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param) {
    onutGLAPI.onutTextureParameterfEXT(texture, target, pname, param);
}
#define glTextureParameterfEXT _onutTextureParameterfEXT

ONUT_FORCE_INLINE void _onutTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutTextureParameterfvEXT(texture, target, pname, params);
}
#define glTextureParameterfvEXT _onutTextureParameterfvEXT

ONUT_FORCE_INLINE void _onutTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param) {
    onutGLAPI.onutTextureParameteriEXT(texture, target, pname, param);
}
#define glTextureParameteriEXT _onutTextureParameteriEXT

ONUT_FORCE_INLINE void _onutTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params) {
    onutGLAPI.onutTextureParameterivEXT(texture, target, pname, params);
}
#define glTextureParameterivEXT _onutTextureParameterivEXT

ONUT_FORCE_INLINE void _onutTextureRangeAPPLE(GLenum target, GLsizei length, const void *pointer) {
    onutGLAPI.onutTextureRangeAPPLE(target, length, pointer);
}
#define glTextureRangeAPPLE _onutTextureRangeAPPLE

ONUT_FORCE_INLINE void _onutTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer) {
    onutGLAPI.onutTextureRenderbufferEXT(texture, target, renderbuffer);
}
#define glTextureRenderbufferEXT _onutTextureRenderbufferEXT

ONUT_FORCE_INLINE void _onutTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) {
    onutGLAPI.onutTextureStorage1DEXT(texture, target, levels, internalformat, width);
}
#define glTextureStorage1DEXT _onutTextureStorage1DEXT

ONUT_FORCE_INLINE void _onutTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) {
    onutGLAPI.onutTextureStorage2DEXT(texture, target, levels, internalformat, width, height);
}
#define glTextureStorage2DEXT _onutTextureStorage2DEXT

ONUT_FORCE_INLINE void _onutTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) {
    onutGLAPI.onutTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations);
}
#define glTextureStorage2DMultisampleEXT _onutTextureStorage2DMultisampleEXT

ONUT_FORCE_INLINE void _onutTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) {
    onutGLAPI.onutTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth);
}
#define glTextureStorage3DEXT _onutTextureStorage3DEXT

ONUT_FORCE_INLINE void _onutTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) {
    onutGLAPI.onutTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations);
}
#define glTextureStorage3DMultisampleEXT _onutTextureStorage3DMultisampleEXT

ONUT_FORCE_INLINE void _onutTextureStorageMem1DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTextureStorageMem1DEXT(texture, levels, internalFormat, width, memory, offset);
}
#define glTextureStorageMem1DEXT _onutTextureStorageMem1DEXT

ONUT_FORCE_INLINE void _onutTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTextureStorageMem2DEXT(texture, levels, internalFormat, width, height, memory, offset);
}
#define glTextureStorageMem2DEXT _onutTextureStorageMem2DEXT

ONUT_FORCE_INLINE void _onutTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTextureStorageMem2DMultisampleEXT(texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset);
}
#define glTextureStorageMem2DMultisampleEXT _onutTextureStorageMem2DMultisampleEXT

ONUT_FORCE_INLINE void _onutTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTextureStorageMem3DEXT(texture, levels, internalFormat, width, height, depth, memory, offset);
}
#define glTextureStorageMem3DEXT _onutTextureStorageMem3DEXT

ONUT_FORCE_INLINE void _onutTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset) {
    onutGLAPI.onutTextureStorageMem3DMultisampleEXT(texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset);
}
#define glTextureStorageMem3DMultisampleEXT _onutTextureStorageMem3DMultisampleEXT

ONUT_FORCE_INLINE void _onutTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags) {
    onutGLAPI.onutTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags);
}
#define glTextureStorageSparseAMD _onutTextureStorageSparseAMD

ONUT_FORCE_INLINE void _onutTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels);
}
#define glTextureSubImage1DEXT _onutTextureSubImage1DEXT

ONUT_FORCE_INLINE void _onutTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels);
}
#define glTextureSubImage2DEXT _onutTextureSubImage2DEXT

ONUT_FORCE_INLINE void _onutTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) {
    onutGLAPI.onutTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}
#define glTextureSubImage3DEXT _onutTextureSubImage3DEXT

ONUT_FORCE_INLINE void _onutTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) {
    onutGLAPI.onutTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers);
}
#define glTextureViewEXT _onutTextureViewEXT

ONUT_FORCE_INLINE void _onutTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) {
    onutGLAPI.onutTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers);
}
#define glTextureViewOES _onutTextureViewOES

ONUT_FORCE_INLINE void _onutTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform) {
    onutGLAPI.onutTrackMatrixNV(target, address, matrix, transform);
}
#define glTrackMatrixNV _onutTrackMatrixNV

ONUT_FORCE_INLINE void _onutTransformFeedbackAttribsNV(GLsizei count, const GLint *attribs, GLenum bufferMode) {
    onutGLAPI.onutTransformFeedbackAttribsNV(count, attribs, bufferMode);
}
#define glTransformFeedbackAttribsNV _onutTransformFeedbackAttribsNV

ONUT_FORCE_INLINE void _onutTransformFeedbackStreamAttribsNV(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode) {
    onutGLAPI.onutTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode);
}
#define glTransformFeedbackStreamAttribsNV _onutTransformFeedbackStreamAttribsNV

ONUT_FORCE_INLINE void _onutTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode) {
    onutGLAPI.onutTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode);
}
#define glTransformFeedbackVaryingsEXT _onutTransformFeedbackVaryingsEXT

ONUT_FORCE_INLINE void _onutTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode) {
    onutGLAPI.onutTransformFeedbackVaryingsNV(program, count, locations, bufferMode);
}
#define glTransformFeedbackVaryingsNV _onutTransformFeedbackVaryingsNV

ONUT_FORCE_INLINE void _onutTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues) {
    onutGLAPI.onutTransformPathNV(resultPath, srcPath, transformType, transformValues);
}
#define glTransformPathNV _onutTransformPathNV

ONUT_FORCE_INLINE void _onutTranslatexOES(GLfixed x, GLfixed y, GLfixed z) {
    onutGLAPI.onutTranslatexOES(x, y, z);
}
#define glTranslatexOES _onutTranslatexOES

ONUT_FORCE_INLINE void _onutUniform1fARB(GLint location, GLfloat v0) {
    onutGLAPI.onutUniform1fARB(location, v0);
}
#define glUniform1fARB _onutUniform1fARB

ONUT_FORCE_INLINE void _onutUniform1fvARB(GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutUniform1fvARB(location, count, value);
}
#define glUniform1fvARB _onutUniform1fvARB

ONUT_FORCE_INLINE void _onutUniform1i64ARB(GLint location, GLint64 x) {
    onutGLAPI.onutUniform1i64ARB(location, x);
}
#define glUniform1i64ARB _onutUniform1i64ARB

ONUT_FORCE_INLINE void _onutUniform1i64NV(GLint location, GLint64EXT x) {
    onutGLAPI.onutUniform1i64NV(location, x);
}
#define glUniform1i64NV _onutUniform1i64NV

ONUT_FORCE_INLINE void _onutUniform1i64vARB(GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutUniform1i64vARB(location, count, value);
}
#define glUniform1i64vARB _onutUniform1i64vARB

ONUT_FORCE_INLINE void _onutUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutUniform1i64vNV(location, count, value);
}
#define glUniform1i64vNV _onutUniform1i64vNV

ONUT_FORCE_INLINE void _onutUniform1iARB(GLint location, GLint v0) {
    onutGLAPI.onutUniform1iARB(location, v0);
}
#define glUniform1iARB _onutUniform1iARB

ONUT_FORCE_INLINE void _onutUniform1ivARB(GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutUniform1ivARB(location, count, value);
}
#define glUniform1ivARB _onutUniform1ivARB

ONUT_FORCE_INLINE void _onutUniform1ui64ARB(GLint location, GLuint64 x) {
    onutGLAPI.onutUniform1ui64ARB(location, x);
}
#define glUniform1ui64ARB _onutUniform1ui64ARB

ONUT_FORCE_INLINE void _onutUniform1ui64NV(GLint location, GLuint64EXT x) {
    onutGLAPI.onutUniform1ui64NV(location, x);
}
#define glUniform1ui64NV _onutUniform1ui64NV

ONUT_FORCE_INLINE void _onutUniform1ui64vARB(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniform1ui64vARB(location, count, value);
}
#define glUniform1ui64vARB _onutUniform1ui64vARB

ONUT_FORCE_INLINE void _onutUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutUniform1ui64vNV(location, count, value);
}
#define glUniform1ui64vNV _onutUniform1ui64vNV

ONUT_FORCE_INLINE void _onutUniform1uiEXT(GLint location, GLuint v0) {
    onutGLAPI.onutUniform1uiEXT(location, v0);
}
#define glUniform1uiEXT _onutUniform1uiEXT

ONUT_FORCE_INLINE void _onutUniform1uivEXT(GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutUniform1uivEXT(location, count, value);
}
#define glUniform1uivEXT _onutUniform1uivEXT

ONUT_FORCE_INLINE void _onutUniform2fARB(GLint location, GLfloat v0, GLfloat v1) {
    onutGLAPI.onutUniform2fARB(location, v0, v1);
}
#define glUniform2fARB _onutUniform2fARB

ONUT_FORCE_INLINE void _onutUniform2fvARB(GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutUniform2fvARB(location, count, value);
}
#define glUniform2fvARB _onutUniform2fvARB

ONUT_FORCE_INLINE void _onutUniform2i64ARB(GLint location, GLint64 x, GLint64 y) {
    onutGLAPI.onutUniform2i64ARB(location, x, y);
}
#define glUniform2i64ARB _onutUniform2i64ARB

ONUT_FORCE_INLINE void _onutUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y) {
    onutGLAPI.onutUniform2i64NV(location, x, y);
}
#define glUniform2i64NV _onutUniform2i64NV

ONUT_FORCE_INLINE void _onutUniform2i64vARB(GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutUniform2i64vARB(location, count, value);
}
#define glUniform2i64vARB _onutUniform2i64vARB

ONUT_FORCE_INLINE void _onutUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutUniform2i64vNV(location, count, value);
}
#define glUniform2i64vNV _onutUniform2i64vNV

ONUT_FORCE_INLINE void _onutUniform2iARB(GLint location, GLint v0, GLint v1) {
    onutGLAPI.onutUniform2iARB(location, v0, v1);
}
#define glUniform2iARB _onutUniform2iARB

ONUT_FORCE_INLINE void _onutUniform2ivARB(GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutUniform2ivARB(location, count, value);
}
#define glUniform2ivARB _onutUniform2ivARB

ONUT_FORCE_INLINE void _onutUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y) {
    onutGLAPI.onutUniform2ui64ARB(location, x, y);
}
#define glUniform2ui64ARB _onutUniform2ui64ARB

ONUT_FORCE_INLINE void _onutUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y) {
    onutGLAPI.onutUniform2ui64NV(location, x, y);
}
#define glUniform2ui64NV _onutUniform2ui64NV

ONUT_FORCE_INLINE void _onutUniform2ui64vARB(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniform2ui64vARB(location, count, value);
}
#define glUniform2ui64vARB _onutUniform2ui64vARB

ONUT_FORCE_INLINE void _onutUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutUniform2ui64vNV(location, count, value);
}
#define glUniform2ui64vNV _onutUniform2ui64vNV

ONUT_FORCE_INLINE void _onutUniform2uiEXT(GLint location, GLuint v0, GLuint v1) {
    onutGLAPI.onutUniform2uiEXT(location, v0, v1);
}
#define glUniform2uiEXT _onutUniform2uiEXT

ONUT_FORCE_INLINE void _onutUniform2uivEXT(GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutUniform2uivEXT(location, count, value);
}
#define glUniform2uivEXT _onutUniform2uivEXT

ONUT_FORCE_INLINE void _onutUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) {
    onutGLAPI.onutUniform3fARB(location, v0, v1, v2);
}
#define glUniform3fARB _onutUniform3fARB

ONUT_FORCE_INLINE void _onutUniform3fvARB(GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutUniform3fvARB(location, count, value);
}
#define glUniform3fvARB _onutUniform3fvARB

ONUT_FORCE_INLINE void _onutUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z) {
    onutGLAPI.onutUniform3i64ARB(location, x, y, z);
}
#define glUniform3i64ARB _onutUniform3i64ARB

ONUT_FORCE_INLINE void _onutUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z) {
    onutGLAPI.onutUniform3i64NV(location, x, y, z);
}
#define glUniform3i64NV _onutUniform3i64NV

ONUT_FORCE_INLINE void _onutUniform3i64vARB(GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutUniform3i64vARB(location, count, value);
}
#define glUniform3i64vARB _onutUniform3i64vARB

ONUT_FORCE_INLINE void _onutUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutUniform3i64vNV(location, count, value);
}
#define glUniform3i64vNV _onutUniform3i64vNV

ONUT_FORCE_INLINE void _onutUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2) {
    onutGLAPI.onutUniform3iARB(location, v0, v1, v2);
}
#define glUniform3iARB _onutUniform3iARB

ONUT_FORCE_INLINE void _onutUniform3ivARB(GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutUniform3ivARB(location, count, value);
}
#define glUniform3ivARB _onutUniform3ivARB

ONUT_FORCE_INLINE void _onutUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z) {
    onutGLAPI.onutUniform3ui64ARB(location, x, y, z);
}
#define glUniform3ui64ARB _onutUniform3ui64ARB

ONUT_FORCE_INLINE void _onutUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z) {
    onutGLAPI.onutUniform3ui64NV(location, x, y, z);
}
#define glUniform3ui64NV _onutUniform3ui64NV

ONUT_FORCE_INLINE void _onutUniform3ui64vARB(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniform3ui64vARB(location, count, value);
}
#define glUniform3ui64vARB _onutUniform3ui64vARB

ONUT_FORCE_INLINE void _onutUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutUniform3ui64vNV(location, count, value);
}
#define glUniform3ui64vNV _onutUniform3ui64vNV

ONUT_FORCE_INLINE void _onutUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2) {
    onutGLAPI.onutUniform3uiEXT(location, v0, v1, v2);
}
#define glUniform3uiEXT _onutUniform3uiEXT

ONUT_FORCE_INLINE void _onutUniform3uivEXT(GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutUniform3uivEXT(location, count, value);
}
#define glUniform3uivEXT _onutUniform3uivEXT

ONUT_FORCE_INLINE void _onutUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) {
    onutGLAPI.onutUniform4fARB(location, v0, v1, v2, v3);
}
#define glUniform4fARB _onutUniform4fARB

ONUT_FORCE_INLINE void _onutUniform4fvARB(GLint location, GLsizei count, const GLfloat *value) {
    onutGLAPI.onutUniform4fvARB(location, count, value);
}
#define glUniform4fvARB _onutUniform4fvARB

ONUT_FORCE_INLINE void _onutUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w) {
    onutGLAPI.onutUniform4i64ARB(location, x, y, z, w);
}
#define glUniform4i64ARB _onutUniform4i64ARB

ONUT_FORCE_INLINE void _onutUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w) {
    onutGLAPI.onutUniform4i64NV(location, x, y, z, w);
}
#define glUniform4i64NV _onutUniform4i64NV

ONUT_FORCE_INLINE void _onutUniform4i64vARB(GLint location, GLsizei count, const GLint64 *value) {
    onutGLAPI.onutUniform4i64vARB(location, count, value);
}
#define glUniform4i64vARB _onutUniform4i64vARB

ONUT_FORCE_INLINE void _onutUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value) {
    onutGLAPI.onutUniform4i64vNV(location, count, value);
}
#define glUniform4i64vNV _onutUniform4i64vNV

ONUT_FORCE_INLINE void _onutUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) {
    onutGLAPI.onutUniform4iARB(location, v0, v1, v2, v3);
}
#define glUniform4iARB _onutUniform4iARB

ONUT_FORCE_INLINE void _onutUniform4ivARB(GLint location, GLsizei count, const GLint *value) {
    onutGLAPI.onutUniform4ivARB(location, count, value);
}
#define glUniform4ivARB _onutUniform4ivARB

ONUT_FORCE_INLINE void _onutUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w) {
    onutGLAPI.onutUniform4ui64ARB(location, x, y, z, w);
}
#define glUniform4ui64ARB _onutUniform4ui64ARB

ONUT_FORCE_INLINE void _onutUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w) {
    onutGLAPI.onutUniform4ui64NV(location, x, y, z, w);
}
#define glUniform4ui64NV _onutUniform4ui64NV

ONUT_FORCE_INLINE void _onutUniform4ui64vARB(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniform4ui64vARB(location, count, value);
}
#define glUniform4ui64vARB _onutUniform4ui64vARB

ONUT_FORCE_INLINE void _onutUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutUniform4ui64vNV(location, count, value);
}
#define glUniform4ui64vNV _onutUniform4ui64vNV

ONUT_FORCE_INLINE void _onutUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) {
    onutGLAPI.onutUniform4uiEXT(location, v0, v1, v2, v3);
}
#define glUniform4uiEXT _onutUniform4uiEXT

ONUT_FORCE_INLINE void _onutUniform4uivEXT(GLint location, GLsizei count, const GLuint *value) {
    onutGLAPI.onutUniform4uivEXT(location, count, value);
}
#define glUniform4uivEXT _onutUniform4uivEXT

ONUT_FORCE_INLINE void _onutUniformBufferEXT(GLuint program, GLint location, GLuint buffer) {
    onutGLAPI.onutUniformBufferEXT(program, location, buffer);
}
#define glUniformBufferEXT _onutUniformBufferEXT

ONUT_FORCE_INLINE void _onutUniformHandleui64ARB(GLint location, GLuint64 value) {
    onutGLAPI.onutUniformHandleui64ARB(location, value);
}
#define glUniformHandleui64ARB _onutUniformHandleui64ARB

ONUT_FORCE_INLINE void _onutUniformHandleui64IMG(GLint location, GLuint64 value) {
    onutGLAPI.onutUniformHandleui64IMG(location, value);
}
#define glUniformHandleui64IMG _onutUniformHandleui64IMG

ONUT_FORCE_INLINE void _onutUniformHandleui64NV(GLint location, GLuint64 value) {
    onutGLAPI.onutUniformHandleui64NV(location, value);
}
#define glUniformHandleui64NV _onutUniformHandleui64NV

ONUT_FORCE_INLINE void _onutUniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniformHandleui64vARB(location, count, value);
}
#define glUniformHandleui64vARB _onutUniformHandleui64vARB

ONUT_FORCE_INLINE void _onutUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniformHandleui64vIMG(location, count, value);
}
#define glUniformHandleui64vIMG _onutUniformHandleui64vIMG

ONUT_FORCE_INLINE void _onutUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value) {
    onutGLAPI.onutUniformHandleui64vNV(location, count, value);
}
#define glUniformHandleui64vNV _onutUniformHandleui64vNV

ONUT_FORCE_INLINE void _onutUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix2fvARB(location, count, transpose, value);
}
#define glUniformMatrix2fvARB _onutUniformMatrix2fvARB

ONUT_FORCE_INLINE void _onutUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix2x3fvNV(location, count, transpose, value);
}
#define glUniformMatrix2x3fvNV _onutUniformMatrix2x3fvNV

ONUT_FORCE_INLINE void _onutUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix2x4fvNV(location, count, transpose, value);
}
#define glUniformMatrix2x4fvNV _onutUniformMatrix2x4fvNV

ONUT_FORCE_INLINE void _onutUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix3fvARB(location, count, transpose, value);
}
#define glUniformMatrix3fvARB _onutUniformMatrix3fvARB

ONUT_FORCE_INLINE void _onutUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix3x2fvNV(location, count, transpose, value);
}
#define glUniformMatrix3x2fvNV _onutUniformMatrix3x2fvNV

ONUT_FORCE_INLINE void _onutUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix3x4fvNV(location, count, transpose, value);
}
#define glUniformMatrix3x4fvNV _onutUniformMatrix3x4fvNV

ONUT_FORCE_INLINE void _onutUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix4fvARB(location, count, transpose, value);
}
#define glUniformMatrix4fvARB _onutUniformMatrix4fvARB

ONUT_FORCE_INLINE void _onutUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix4x2fvNV(location, count, transpose, value);
}
#define glUniformMatrix4x2fvNV _onutUniformMatrix4x2fvNV

ONUT_FORCE_INLINE void _onutUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) {
    onutGLAPI.onutUniformMatrix4x3fvNV(location, count, transpose, value);
}
#define glUniformMatrix4x3fvNV _onutUniformMatrix4x3fvNV

ONUT_FORCE_INLINE void _onutUniformui64NV(GLint location, GLuint64EXT value) {
    onutGLAPI.onutUniformui64NV(location, value);
}
#define glUniformui64NV _onutUniformui64NV

ONUT_FORCE_INLINE void _onutUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT *value) {
    onutGLAPI.onutUniformui64vNV(location, count, value);
}
#define glUniformui64vNV _onutUniformui64vNV

ONUT_FORCE_INLINE void _onutUnlockArraysEXT(void) {
    onutGLAPI.onutUnlockArraysEXT();
}
#define glUnlockArraysEXT _onutUnlockArraysEXT

ONUT_FORCE_INLINE GLboolean _onutUnmapBufferARB(GLenum target) {
    return onutGLAPI.onutUnmapBufferARB(target);
}
#define glUnmapBufferARB _onutUnmapBufferARB

ONUT_FORCE_INLINE GLboolean _onutUnmapBufferOES(GLenum target) {
    return onutGLAPI.onutUnmapBufferOES(target);
}
#define glUnmapBufferOES _onutUnmapBufferOES

ONUT_FORCE_INLINE GLboolean _onutUnmapNamedBufferEXT(GLuint buffer) {
    return onutGLAPI.onutUnmapNamedBufferEXT(buffer);
}
#define glUnmapNamedBufferEXT _onutUnmapNamedBufferEXT

ONUT_FORCE_INLINE void _onutUnmapObjectBufferATI(GLuint buffer) {
    onutGLAPI.onutUnmapObjectBufferATI(buffer);
}
#define glUnmapObjectBufferATI _onutUnmapObjectBufferATI

ONUT_FORCE_INLINE void _onutUnmapTexture2DINTEL(GLuint texture, GLint level) {
    onutGLAPI.onutUnmapTexture2DINTEL(texture, level);
}
#define glUnmapTexture2DINTEL _onutUnmapTexture2DINTEL

ONUT_FORCE_INLINE void _onutUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve) {
    onutGLAPI.onutUpdateObjectBufferATI(buffer, offset, size, pointer, preserve);
}
#define glUpdateObjectBufferATI _onutUpdateObjectBufferATI

ONUT_FORCE_INLINE void _onutUseProgramObjectARB(GLhandleARB programObj) {
    onutGLAPI.onutUseProgramObjectARB(programObj);
}
#define glUseProgramObjectARB _onutUseProgramObjectARB

ONUT_FORCE_INLINE void _onutUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program) {
    onutGLAPI.onutUseProgramStagesEXT(pipeline, stages, program);
}
#define glUseProgramStagesEXT _onutUseProgramStagesEXT

ONUT_FORCE_INLINE void _onutUseShaderProgramEXT(GLenum type, GLuint program) {
    onutGLAPI.onutUseShaderProgramEXT(type, program);
}
#define glUseShaderProgramEXT _onutUseShaderProgramEXT

ONUT_FORCE_INLINE void _onutVDPAUFiniNV(void) {
    onutGLAPI.onutVDPAUFiniNV();
}
#define glVDPAUFiniNV _onutVDPAUFiniNV

ONUT_FORCE_INLINE void _onutVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) {
    onutGLAPI.onutVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values);
}
#define glVDPAUGetSurfaceivNV _onutVDPAUGetSurfaceivNV

ONUT_FORCE_INLINE void _onutVDPAUInitNV(const void *vdpDevice, const void *getProcAddress) {
    onutGLAPI.onutVDPAUInitNV(vdpDevice, getProcAddress);
}
#define glVDPAUInitNV _onutVDPAUInitNV

ONUT_FORCE_INLINE GLboolean _onutVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface) {
    return onutGLAPI.onutVDPAUIsSurfaceNV(surface);
}
#define glVDPAUIsSurfaceNV _onutVDPAUIsSurfaceNV

ONUT_FORCE_INLINE void _onutVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces) {
    onutGLAPI.onutVDPAUMapSurfacesNV(numSurfaces, surfaces);
}
#define glVDPAUMapSurfacesNV _onutVDPAUMapSurfacesNV

ONUT_FORCE_INLINE GLvdpauSurfaceNV _onutVDPAURegisterOutputSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames) {
    return onutGLAPI.onutVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames);
}
#define glVDPAURegisterOutputSurfaceNV _onutVDPAURegisterOutputSurfaceNV

ONUT_FORCE_INLINE GLvdpauSurfaceNV _onutVDPAURegisterVideoSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames) {
    return onutGLAPI.onutVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames);
}
#define glVDPAURegisterVideoSurfaceNV _onutVDPAURegisterVideoSurfaceNV

ONUT_FORCE_INLINE void _onutVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access) {
    onutGLAPI.onutVDPAUSurfaceAccessNV(surface, access);
}
#define glVDPAUSurfaceAccessNV _onutVDPAUSurfaceAccessNV

ONUT_FORCE_INLINE void _onutVDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces) {
    onutGLAPI.onutVDPAUUnmapSurfacesNV(numSurface, surfaces);
}
#define glVDPAUUnmapSurfacesNV _onutVDPAUUnmapSurfacesNV

ONUT_FORCE_INLINE void _onutVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface) {
    onutGLAPI.onutVDPAUUnregisterSurfaceNV(surface);
}
#define glVDPAUUnregisterSurfaceNV _onutVDPAUUnregisterSurfaceNV

ONUT_FORCE_INLINE void _onutValidateProgramARB(GLhandleARB programObj) {
    onutGLAPI.onutValidateProgramARB(programObj);
}
#define glValidateProgramARB _onutValidateProgramARB

ONUT_FORCE_INLINE void _onutValidateProgramPipelineEXT(GLuint pipeline) {
    onutGLAPI.onutValidateProgramPipelineEXT(pipeline);
}
#define glValidateProgramPipelineEXT _onutValidateProgramPipelineEXT

ONUT_FORCE_INLINE void _onutVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset) {
    onutGLAPI.onutVariantArrayObjectATI(id, type, stride, buffer, offset);
}
#define glVariantArrayObjectATI _onutVariantArrayObjectATI

ONUT_FORCE_INLINE void _onutVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void *addr) {
    onutGLAPI.onutVariantPointerEXT(id, type, stride, addr);
}
#define glVariantPointerEXT _onutVariantPointerEXT

ONUT_FORCE_INLINE void _onutVariantbvEXT(GLuint id, const GLbyte *addr) {
    onutGLAPI.onutVariantbvEXT(id, addr);
}
#define glVariantbvEXT _onutVariantbvEXT

ONUT_FORCE_INLINE void _onutVariantdvEXT(GLuint id, const GLdouble *addr) {
    onutGLAPI.onutVariantdvEXT(id, addr);
}
#define glVariantdvEXT _onutVariantdvEXT

ONUT_FORCE_INLINE void _onutVariantfvEXT(GLuint id, const GLfloat *addr) {
    onutGLAPI.onutVariantfvEXT(id, addr);
}
#define glVariantfvEXT _onutVariantfvEXT

ONUT_FORCE_INLINE void _onutVariantivEXT(GLuint id, const GLint *addr) {
    onutGLAPI.onutVariantivEXT(id, addr);
}
#define glVariantivEXT _onutVariantivEXT

ONUT_FORCE_INLINE void _onutVariantsvEXT(GLuint id, const GLshort *addr) {
    onutGLAPI.onutVariantsvEXT(id, addr);
}
#define glVariantsvEXT _onutVariantsvEXT

ONUT_FORCE_INLINE void _onutVariantubvEXT(GLuint id, const GLubyte *addr) {
    onutGLAPI.onutVariantubvEXT(id, addr);
}
#define glVariantubvEXT _onutVariantubvEXT

ONUT_FORCE_INLINE void _onutVariantuivEXT(GLuint id, const GLuint *addr) {
    onutGLAPI.onutVariantuivEXT(id, addr);
}
#define glVariantuivEXT _onutVariantuivEXT

ONUT_FORCE_INLINE void _onutVariantusvEXT(GLuint id, const GLushort *addr) {
    onutGLAPI.onutVariantusvEXT(id, addr);
}
#define glVariantusvEXT _onutVariantusvEXT

ONUT_FORCE_INLINE void _onutVertex2bOES(GLbyte x, GLbyte y) {
    onutGLAPI.onutVertex2bOES(x, y);
}
#define glVertex2bOES _onutVertex2bOES

ONUT_FORCE_INLINE void _onutVertex2bvOES(const GLbyte *coords) {
    onutGLAPI.onutVertex2bvOES(coords);
}
#define glVertex2bvOES _onutVertex2bvOES

ONUT_FORCE_INLINE void _onutVertex2hNV(GLhalfNV x, GLhalfNV y) {
    onutGLAPI.onutVertex2hNV(x, y);
}
#define glVertex2hNV _onutVertex2hNV

ONUT_FORCE_INLINE void _onutVertex2hvNV(const GLhalfNV *v) {
    onutGLAPI.onutVertex2hvNV(v);
}
#define glVertex2hvNV _onutVertex2hvNV

ONUT_FORCE_INLINE void _onutVertex2xOES(GLfixed x) {
    onutGLAPI.onutVertex2xOES(x);
}
#define glVertex2xOES _onutVertex2xOES

ONUT_FORCE_INLINE void _onutVertex2xvOES(const GLfixed *coords) {
    onutGLAPI.onutVertex2xvOES(coords);
}
#define glVertex2xvOES _onutVertex2xvOES

ONUT_FORCE_INLINE void _onutVertex3bOES(GLbyte x, GLbyte y, GLbyte z) {
    onutGLAPI.onutVertex3bOES(x, y, z);
}
#define glVertex3bOES _onutVertex3bOES

ONUT_FORCE_INLINE void _onutVertex3bvOES(const GLbyte *coords) {
    onutGLAPI.onutVertex3bvOES(coords);
}
#define glVertex3bvOES _onutVertex3bvOES

ONUT_FORCE_INLINE void _onutVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z) {
    onutGLAPI.onutVertex3hNV(x, y, z);
}
#define glVertex3hNV _onutVertex3hNV

ONUT_FORCE_INLINE void _onutVertex3hvNV(const GLhalfNV *v) {
    onutGLAPI.onutVertex3hvNV(v);
}
#define glVertex3hvNV _onutVertex3hvNV

ONUT_FORCE_INLINE void _onutVertex3xOES(GLfixed x, GLfixed y) {
    onutGLAPI.onutVertex3xOES(x, y);
}
#define glVertex3xOES _onutVertex3xOES

ONUT_FORCE_INLINE void _onutVertex3xvOES(const GLfixed *coords) {
    onutGLAPI.onutVertex3xvOES(coords);
}
#define glVertex3xvOES _onutVertex3xvOES

ONUT_FORCE_INLINE void _onutVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w) {
    onutGLAPI.onutVertex4bOES(x, y, z, w);
}
#define glVertex4bOES _onutVertex4bOES

ONUT_FORCE_INLINE void _onutVertex4bvOES(const GLbyte *coords) {
    onutGLAPI.onutVertex4bvOES(coords);
}
#define glVertex4bvOES _onutVertex4bvOES

ONUT_FORCE_INLINE void _onutVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w) {
    onutGLAPI.onutVertex4hNV(x, y, z, w);
}
#define glVertex4hNV _onutVertex4hNV

ONUT_FORCE_INLINE void _onutVertex4hvNV(const GLhalfNV *v) {
    onutGLAPI.onutVertex4hvNV(v);
}
#define glVertex4hvNV _onutVertex4hvNV

ONUT_FORCE_INLINE void _onutVertex4xOES(GLfixed x, GLfixed y, GLfixed z) {
    onutGLAPI.onutVertex4xOES(x, y, z);
}
#define glVertex4xOES _onutVertex4xOES

ONUT_FORCE_INLINE void _onutVertex4xvOES(const GLfixed *coords) {
    onutGLAPI.onutVertex4xvOES(coords);
}
#define glVertex4xvOES _onutVertex4xvOES

ONUT_FORCE_INLINE void _onutVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) {
    onutGLAPI.onutVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride);
}
#define glVertexArrayBindVertexBufferEXT _onutVertexArrayBindVertexBufferEXT

ONUT_FORCE_INLINE void _onutVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset);
}
#define glVertexArrayColorOffsetEXT _onutVertexArrayColorOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset);
}
#define glVertexArrayEdgeFlagOffsetEXT _onutVertexArrayEdgeFlagOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset);
}
#define glVertexArrayFogCoordOffsetEXT _onutVertexArrayFogCoordOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset);
}
#define glVertexArrayIndexOffsetEXT _onutVertexArrayIndexOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset);
}
#define glVertexArrayMultiTexCoordOffsetEXT _onutVertexArrayMultiTexCoordOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset);
}
#define glVertexArrayNormalOffsetEXT _onutVertexArrayNormalOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayParameteriAPPLE(GLenum pname, GLint param) {
    onutGLAPI.onutVertexArrayParameteriAPPLE(pname, param);
}
#define glVertexArrayParameteriAPPLE _onutVertexArrayParameteriAPPLE

ONUT_FORCE_INLINE void _onutVertexArrayRangeAPPLE(GLsizei length, void *pointer) {
    onutGLAPI.onutVertexArrayRangeAPPLE(length, pointer);
}
#define glVertexArrayRangeAPPLE _onutVertexArrayRangeAPPLE

ONUT_FORCE_INLINE void _onutVertexArrayRangeNV(GLsizei length, const void *pointer) {
    onutGLAPI.onutVertexArrayRangeNV(length, pointer);
}
#define glVertexArrayRangeNV _onutVertexArrayRangeNV

ONUT_FORCE_INLINE void _onutVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset);
}
#define glVertexArraySecondaryColorOffsetEXT _onutVertexArraySecondaryColorOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset);
}
#define glVertexArrayTexCoordOffsetEXT _onutVertexArrayTexCoordOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex) {
    onutGLAPI.onutVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex);
}
#define glVertexArrayVertexAttribBindingEXT _onutVertexArrayVertexAttribBindingEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor) {
    onutGLAPI.onutVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor);
}
#define glVertexArrayVertexAttribDivisorEXT _onutVertexArrayVertexAttribDivisorEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) {
    onutGLAPI.onutVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset);
}
#define glVertexArrayVertexAttribFormatEXT _onutVertexArrayVertexAttribFormatEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) {
    onutGLAPI.onutVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset);
}
#define glVertexArrayVertexAttribIFormatEXT _onutVertexArrayVertexAttribIFormatEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset);
}
#define glVertexArrayVertexAttribIOffsetEXT _onutVertexArrayVertexAttribIOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) {
    onutGLAPI.onutVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset);
}
#define glVertexArrayVertexAttribLFormatEXT _onutVertexArrayVertexAttribLFormatEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset);
}
#define glVertexArrayVertexAttribLOffsetEXT _onutVertexArrayVertexAttribLOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset);
}
#define glVertexArrayVertexAttribOffsetEXT _onutVertexArrayVertexAttribOffsetEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor) {
    onutGLAPI.onutVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor);
}
#define glVertexArrayVertexBindingDivisorEXT _onutVertexArrayVertexBindingDivisorEXT

ONUT_FORCE_INLINE void _onutVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset) {
    onutGLAPI.onutVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset);
}
#define glVertexArrayVertexOffsetEXT _onutVertexArrayVertexOffsetEXT

ONUT_FORCE_INLINE void _onutVertexAttrib1dARB(GLuint index, GLdouble x) {
    onutGLAPI.onutVertexAttrib1dARB(index, x);
}
#define glVertexAttrib1dARB _onutVertexAttrib1dARB

ONUT_FORCE_INLINE void _onutVertexAttrib1dNV(GLuint index, GLdouble x) {
    onutGLAPI.onutVertexAttrib1dNV(index, x);
}
#define glVertexAttrib1dNV _onutVertexAttrib1dNV

ONUT_FORCE_INLINE void _onutVertexAttrib1dvARB(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib1dvARB(index, v);
}
#define glVertexAttrib1dvARB _onutVertexAttrib1dvARB

ONUT_FORCE_INLINE void _onutVertexAttrib1dvNV(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib1dvNV(index, v);
}
#define glVertexAttrib1dvNV _onutVertexAttrib1dvNV

ONUT_FORCE_INLINE void _onutVertexAttrib1fARB(GLuint index, GLfloat x) {
    onutGLAPI.onutVertexAttrib1fARB(index, x);
}
#define glVertexAttrib1fARB _onutVertexAttrib1fARB

ONUT_FORCE_INLINE void _onutVertexAttrib1fNV(GLuint index, GLfloat x) {
    onutGLAPI.onutVertexAttrib1fNV(index, x);
}
#define glVertexAttrib1fNV _onutVertexAttrib1fNV

ONUT_FORCE_INLINE void _onutVertexAttrib1fvARB(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib1fvARB(index, v);
}
#define glVertexAttrib1fvARB _onutVertexAttrib1fvARB

ONUT_FORCE_INLINE void _onutVertexAttrib1fvNV(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib1fvNV(index, v);
}
#define glVertexAttrib1fvNV _onutVertexAttrib1fvNV

ONUT_FORCE_INLINE void _onutVertexAttrib1hNV(GLuint index, GLhalfNV x) {
    onutGLAPI.onutVertexAttrib1hNV(index, x);
}
#define glVertexAttrib1hNV _onutVertexAttrib1hNV

ONUT_FORCE_INLINE void _onutVertexAttrib1hvNV(GLuint index, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttrib1hvNV(index, v);
}
#define glVertexAttrib1hvNV _onutVertexAttrib1hvNV

ONUT_FORCE_INLINE void _onutVertexAttrib1sARB(GLuint index, GLshort x) {
    onutGLAPI.onutVertexAttrib1sARB(index, x);
}
#define glVertexAttrib1sARB _onutVertexAttrib1sARB

ONUT_FORCE_INLINE void _onutVertexAttrib1sNV(GLuint index, GLshort x) {
    onutGLAPI.onutVertexAttrib1sNV(index, x);
}
#define glVertexAttrib1sNV _onutVertexAttrib1sNV

ONUT_FORCE_INLINE void _onutVertexAttrib1svARB(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib1svARB(index, v);
}
#define glVertexAttrib1svARB _onutVertexAttrib1svARB

ONUT_FORCE_INLINE void _onutVertexAttrib1svNV(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib1svNV(index, v);
}
#define glVertexAttrib1svNV _onutVertexAttrib1svNV

ONUT_FORCE_INLINE void _onutVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y) {
    onutGLAPI.onutVertexAttrib2dARB(index, x, y);
}
#define glVertexAttrib2dARB _onutVertexAttrib2dARB

ONUT_FORCE_INLINE void _onutVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y) {
    onutGLAPI.onutVertexAttrib2dNV(index, x, y);
}
#define glVertexAttrib2dNV _onutVertexAttrib2dNV

ONUT_FORCE_INLINE void _onutVertexAttrib2dvARB(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib2dvARB(index, v);
}
#define glVertexAttrib2dvARB _onutVertexAttrib2dvARB

ONUT_FORCE_INLINE void _onutVertexAttrib2dvNV(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib2dvNV(index, v);
}
#define glVertexAttrib2dvNV _onutVertexAttrib2dvNV

ONUT_FORCE_INLINE void _onutVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y) {
    onutGLAPI.onutVertexAttrib2fARB(index, x, y);
}
#define glVertexAttrib2fARB _onutVertexAttrib2fARB

ONUT_FORCE_INLINE void _onutVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y) {
    onutGLAPI.onutVertexAttrib2fNV(index, x, y);
}
#define glVertexAttrib2fNV _onutVertexAttrib2fNV

ONUT_FORCE_INLINE void _onutVertexAttrib2fvARB(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib2fvARB(index, v);
}
#define glVertexAttrib2fvARB _onutVertexAttrib2fvARB

ONUT_FORCE_INLINE void _onutVertexAttrib2fvNV(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib2fvNV(index, v);
}
#define glVertexAttrib2fvNV _onutVertexAttrib2fvNV

ONUT_FORCE_INLINE void _onutVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y) {
    onutGLAPI.onutVertexAttrib2hNV(index, x, y);
}
#define glVertexAttrib2hNV _onutVertexAttrib2hNV

ONUT_FORCE_INLINE void _onutVertexAttrib2hvNV(GLuint index, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttrib2hvNV(index, v);
}
#define glVertexAttrib2hvNV _onutVertexAttrib2hvNV

ONUT_FORCE_INLINE void _onutVertexAttrib2sARB(GLuint index, GLshort x, GLshort y) {
    onutGLAPI.onutVertexAttrib2sARB(index, x, y);
}
#define glVertexAttrib2sARB _onutVertexAttrib2sARB

ONUT_FORCE_INLINE void _onutVertexAttrib2sNV(GLuint index, GLshort x, GLshort y) {
    onutGLAPI.onutVertexAttrib2sNV(index, x, y);
}
#define glVertexAttrib2sNV _onutVertexAttrib2sNV

ONUT_FORCE_INLINE void _onutVertexAttrib2svARB(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib2svARB(index, v);
}
#define glVertexAttrib2svARB _onutVertexAttrib2svARB

ONUT_FORCE_INLINE void _onutVertexAttrib2svNV(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib2svNV(index, v);
}
#define glVertexAttrib2svNV _onutVertexAttrib2svNV

ONUT_FORCE_INLINE void _onutVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutVertexAttrib3dARB(index, x, y, z);
}
#define glVertexAttrib3dARB _onutVertexAttrib3dARB

ONUT_FORCE_INLINE void _onutVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutVertexAttrib3dNV(index, x, y, z);
}
#define glVertexAttrib3dNV _onutVertexAttrib3dNV

ONUT_FORCE_INLINE void _onutVertexAttrib3dvARB(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib3dvARB(index, v);
}
#define glVertexAttrib3dvARB _onutVertexAttrib3dvARB

ONUT_FORCE_INLINE void _onutVertexAttrib3dvNV(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib3dvNV(index, v);
}
#define glVertexAttrib3dvNV _onutVertexAttrib3dvNV

ONUT_FORCE_INLINE void _onutVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutVertexAttrib3fARB(index, x, y, z);
}
#define glVertexAttrib3fARB _onutVertexAttrib3fARB

ONUT_FORCE_INLINE void _onutVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutVertexAttrib3fNV(index, x, y, z);
}
#define glVertexAttrib3fNV _onutVertexAttrib3fNV

ONUT_FORCE_INLINE void _onutVertexAttrib3fvARB(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib3fvARB(index, v);
}
#define glVertexAttrib3fvARB _onutVertexAttrib3fvARB

ONUT_FORCE_INLINE void _onutVertexAttrib3fvNV(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib3fvNV(index, v);
}
#define glVertexAttrib3fvNV _onutVertexAttrib3fvNV

ONUT_FORCE_INLINE void _onutVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z) {
    onutGLAPI.onutVertexAttrib3hNV(index, x, y, z);
}
#define glVertexAttrib3hNV _onutVertexAttrib3hNV

ONUT_FORCE_INLINE void _onutVertexAttrib3hvNV(GLuint index, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttrib3hvNV(index, v);
}
#define glVertexAttrib3hvNV _onutVertexAttrib3hvNV

ONUT_FORCE_INLINE void _onutVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z) {
    onutGLAPI.onutVertexAttrib3sARB(index, x, y, z);
}
#define glVertexAttrib3sARB _onutVertexAttrib3sARB

ONUT_FORCE_INLINE void _onutVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z) {
    onutGLAPI.onutVertexAttrib3sNV(index, x, y, z);
}
#define glVertexAttrib3sNV _onutVertexAttrib3sNV

ONUT_FORCE_INLINE void _onutVertexAttrib3svARB(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib3svARB(index, v);
}
#define glVertexAttrib3svARB _onutVertexAttrib3svARB

ONUT_FORCE_INLINE void _onutVertexAttrib3svNV(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib3svNV(index, v);
}
#define glVertexAttrib3svNV _onutVertexAttrib3svNV

ONUT_FORCE_INLINE void _onutVertexAttrib4NbvARB(GLuint index, const GLbyte *v) {
    onutGLAPI.onutVertexAttrib4NbvARB(index, v);
}
#define glVertexAttrib4NbvARB _onutVertexAttrib4NbvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4NivARB(GLuint index, const GLint *v) {
    onutGLAPI.onutVertexAttrib4NivARB(index, v);
}
#define glVertexAttrib4NivARB _onutVertexAttrib4NivARB

ONUT_FORCE_INLINE void _onutVertexAttrib4NsvARB(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib4NsvARB(index, v);
}
#define glVertexAttrib4NsvARB _onutVertexAttrib4NsvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) {
    onutGLAPI.onutVertexAttrib4NubARB(index, x, y, z, w);
}
#define glVertexAttrib4NubARB _onutVertexAttrib4NubARB

ONUT_FORCE_INLINE void _onutVertexAttrib4NubvARB(GLuint index, const GLubyte *v) {
    onutGLAPI.onutVertexAttrib4NubvARB(index, v);
}
#define glVertexAttrib4NubvARB _onutVertexAttrib4NubvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4NuivARB(GLuint index, const GLuint *v) {
    onutGLAPI.onutVertexAttrib4NuivARB(index, v);
}
#define glVertexAttrib4NuivARB _onutVertexAttrib4NuivARB

ONUT_FORCE_INLINE void _onutVertexAttrib4NusvARB(GLuint index, const GLushort *v) {
    onutGLAPI.onutVertexAttrib4NusvARB(index, v);
}
#define glVertexAttrib4NusvARB _onutVertexAttrib4NusvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4bvARB(GLuint index, const GLbyte *v) {
    onutGLAPI.onutVertexAttrib4bvARB(index, v);
}
#define glVertexAttrib4bvARB _onutVertexAttrib4bvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutVertexAttrib4dARB(index, x, y, z, w);
}
#define glVertexAttrib4dARB _onutVertexAttrib4dARB

ONUT_FORCE_INLINE void _onutVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutVertexAttrib4dNV(index, x, y, z, w);
}
#define glVertexAttrib4dNV _onutVertexAttrib4dNV

ONUT_FORCE_INLINE void _onutVertexAttrib4dvARB(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib4dvARB(index, v);
}
#define glVertexAttrib4dvARB _onutVertexAttrib4dvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4dvNV(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttrib4dvNV(index, v);
}
#define glVertexAttrib4dvNV _onutVertexAttrib4dvNV

ONUT_FORCE_INLINE void _onutVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutVertexAttrib4fARB(index, x, y, z, w);
}
#define glVertexAttrib4fARB _onutVertexAttrib4fARB

ONUT_FORCE_INLINE void _onutVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutVertexAttrib4fNV(index, x, y, z, w);
}
#define glVertexAttrib4fNV _onutVertexAttrib4fNV

ONUT_FORCE_INLINE void _onutVertexAttrib4fvARB(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib4fvARB(index, v);
}
#define glVertexAttrib4fvARB _onutVertexAttrib4fvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4fvNV(GLuint index, const GLfloat *v) {
    onutGLAPI.onutVertexAttrib4fvNV(index, v);
}
#define glVertexAttrib4fvNV _onutVertexAttrib4fvNV

ONUT_FORCE_INLINE void _onutVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w) {
    onutGLAPI.onutVertexAttrib4hNV(index, x, y, z, w);
}
#define glVertexAttrib4hNV _onutVertexAttrib4hNV

ONUT_FORCE_INLINE void _onutVertexAttrib4hvNV(GLuint index, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttrib4hvNV(index, v);
}
#define glVertexAttrib4hvNV _onutVertexAttrib4hvNV

ONUT_FORCE_INLINE void _onutVertexAttrib4ivARB(GLuint index, const GLint *v) {
    onutGLAPI.onutVertexAttrib4ivARB(index, v);
}
#define glVertexAttrib4ivARB _onutVertexAttrib4ivARB

ONUT_FORCE_INLINE void _onutVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) {
    onutGLAPI.onutVertexAttrib4sARB(index, x, y, z, w);
}
#define glVertexAttrib4sARB _onutVertexAttrib4sARB

ONUT_FORCE_INLINE void _onutVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) {
    onutGLAPI.onutVertexAttrib4sNV(index, x, y, z, w);
}
#define glVertexAttrib4sNV _onutVertexAttrib4sNV

ONUT_FORCE_INLINE void _onutVertexAttrib4svARB(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib4svARB(index, v);
}
#define glVertexAttrib4svARB _onutVertexAttrib4svARB

ONUT_FORCE_INLINE void _onutVertexAttrib4svNV(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttrib4svNV(index, v);
}
#define glVertexAttrib4svNV _onutVertexAttrib4svNV

ONUT_FORCE_INLINE void _onutVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) {
    onutGLAPI.onutVertexAttrib4ubNV(index, x, y, z, w);
}
#define glVertexAttrib4ubNV _onutVertexAttrib4ubNV

ONUT_FORCE_INLINE void _onutVertexAttrib4ubvARB(GLuint index, const GLubyte *v) {
    onutGLAPI.onutVertexAttrib4ubvARB(index, v);
}
#define glVertexAttrib4ubvARB _onutVertexAttrib4ubvARB

ONUT_FORCE_INLINE void _onutVertexAttrib4ubvNV(GLuint index, const GLubyte *v) {
    onutGLAPI.onutVertexAttrib4ubvNV(index, v);
}
#define glVertexAttrib4ubvNV _onutVertexAttrib4ubvNV

ONUT_FORCE_INLINE void _onutVertexAttrib4uivARB(GLuint index, const GLuint *v) {
    onutGLAPI.onutVertexAttrib4uivARB(index, v);
}
#define glVertexAttrib4uivARB _onutVertexAttrib4uivARB

ONUT_FORCE_INLINE void _onutVertexAttrib4usvARB(GLuint index, const GLushort *v) {
    onutGLAPI.onutVertexAttrib4usvARB(index, v);
}
#define glVertexAttrib4usvARB _onutVertexAttrib4usvARB

ONUT_FORCE_INLINE void _onutVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset) {
    onutGLAPI.onutVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset);
}
#define glVertexAttribArrayObjectATI _onutVertexAttribArrayObjectATI

ONUT_FORCE_INLINE void _onutVertexAttribDivisorANGLE(GLuint index, GLuint divisor) {
    onutGLAPI.onutVertexAttribDivisorANGLE(index, divisor);
}
#define glVertexAttribDivisorANGLE _onutVertexAttribDivisorANGLE

ONUT_FORCE_INLINE void _onutVertexAttribDivisorARB(GLuint index, GLuint divisor) {
    onutGLAPI.onutVertexAttribDivisorARB(index, divisor);
}
#define glVertexAttribDivisorARB _onutVertexAttribDivisorARB

ONUT_FORCE_INLINE void _onutVertexAttribDivisorEXT(GLuint index, GLuint divisor) {
    onutGLAPI.onutVertexAttribDivisorEXT(index, divisor);
}
#define glVertexAttribDivisorEXT _onutVertexAttribDivisorEXT

ONUT_FORCE_INLINE void _onutVertexAttribDivisorNV(GLuint index, GLuint divisor) {
    onutGLAPI.onutVertexAttribDivisorNV(index, divisor);
}
#define glVertexAttribDivisorNV _onutVertexAttribDivisorNV

ONUT_FORCE_INLINE void _onutVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride) {
    onutGLAPI.onutVertexAttribFormatNV(index, size, type, normalized, stride);
}
#define glVertexAttribFormatNV _onutVertexAttribFormatNV

ONUT_FORCE_INLINE void _onutVertexAttribI1iEXT(GLuint index, GLint x) {
    onutGLAPI.onutVertexAttribI1iEXT(index, x);
}
#define glVertexAttribI1iEXT _onutVertexAttribI1iEXT

ONUT_FORCE_INLINE void _onutVertexAttribI1ivEXT(GLuint index, const GLint *v) {
    onutGLAPI.onutVertexAttribI1ivEXT(index, v);
}
#define glVertexAttribI1ivEXT _onutVertexAttribI1ivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI1uiEXT(GLuint index, GLuint x) {
    onutGLAPI.onutVertexAttribI1uiEXT(index, x);
}
#define glVertexAttribI1uiEXT _onutVertexAttribI1uiEXT

ONUT_FORCE_INLINE void _onutVertexAttribI1uivEXT(GLuint index, const GLuint *v) {
    onutGLAPI.onutVertexAttribI1uivEXT(index, v);
}
#define glVertexAttribI1uivEXT _onutVertexAttribI1uivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI2iEXT(GLuint index, GLint x, GLint y) {
    onutGLAPI.onutVertexAttribI2iEXT(index, x, y);
}
#define glVertexAttribI2iEXT _onutVertexAttribI2iEXT

ONUT_FORCE_INLINE void _onutVertexAttribI2ivEXT(GLuint index, const GLint *v) {
    onutGLAPI.onutVertexAttribI2ivEXT(index, v);
}
#define glVertexAttribI2ivEXT _onutVertexAttribI2ivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y) {
    onutGLAPI.onutVertexAttribI2uiEXT(index, x, y);
}
#define glVertexAttribI2uiEXT _onutVertexAttribI2uiEXT

ONUT_FORCE_INLINE void _onutVertexAttribI2uivEXT(GLuint index, const GLuint *v) {
    onutGLAPI.onutVertexAttribI2uivEXT(index, v);
}
#define glVertexAttribI2uivEXT _onutVertexAttribI2uivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z) {
    onutGLAPI.onutVertexAttribI3iEXT(index, x, y, z);
}
#define glVertexAttribI3iEXT _onutVertexAttribI3iEXT

ONUT_FORCE_INLINE void _onutVertexAttribI3ivEXT(GLuint index, const GLint *v) {
    onutGLAPI.onutVertexAttribI3ivEXT(index, v);
}
#define glVertexAttribI3ivEXT _onutVertexAttribI3ivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z) {
    onutGLAPI.onutVertexAttribI3uiEXT(index, x, y, z);
}
#define glVertexAttribI3uiEXT _onutVertexAttribI3uiEXT

ONUT_FORCE_INLINE void _onutVertexAttribI3uivEXT(GLuint index, const GLuint *v) {
    onutGLAPI.onutVertexAttribI3uivEXT(index, v);
}
#define glVertexAttribI3uivEXT _onutVertexAttribI3uivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4bvEXT(GLuint index, const GLbyte *v) {
    onutGLAPI.onutVertexAttribI4bvEXT(index, v);
}
#define glVertexAttribI4bvEXT _onutVertexAttribI4bvEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w) {
    onutGLAPI.onutVertexAttribI4iEXT(index, x, y, z, w);
}
#define glVertexAttribI4iEXT _onutVertexAttribI4iEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4ivEXT(GLuint index, const GLint *v) {
    onutGLAPI.onutVertexAttribI4ivEXT(index, v);
}
#define glVertexAttribI4ivEXT _onutVertexAttribI4ivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4svEXT(GLuint index, const GLshort *v) {
    onutGLAPI.onutVertexAttribI4svEXT(index, v);
}
#define glVertexAttribI4svEXT _onutVertexAttribI4svEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4ubvEXT(GLuint index, const GLubyte *v) {
    onutGLAPI.onutVertexAttribI4ubvEXT(index, v);
}
#define glVertexAttribI4ubvEXT _onutVertexAttribI4ubvEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) {
    onutGLAPI.onutVertexAttribI4uiEXT(index, x, y, z, w);
}
#define glVertexAttribI4uiEXT _onutVertexAttribI4uiEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4uivEXT(GLuint index, const GLuint *v) {
    onutGLAPI.onutVertexAttribI4uivEXT(index, v);
}
#define glVertexAttribI4uivEXT _onutVertexAttribI4uivEXT

ONUT_FORCE_INLINE void _onutVertexAttribI4usvEXT(GLuint index, const GLushort *v) {
    onutGLAPI.onutVertexAttribI4usvEXT(index, v);
}
#define glVertexAttribI4usvEXT _onutVertexAttribI4usvEXT

ONUT_FORCE_INLINE void _onutVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride) {
    onutGLAPI.onutVertexAttribIFormatNV(index, size, type, stride);
}
#define glVertexAttribIFormatNV _onutVertexAttribIFormatNV

ONUT_FORCE_INLINE void _onutVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutVertexAttribIPointerEXT(index, size, type, stride, pointer);
}
#define glVertexAttribIPointerEXT _onutVertexAttribIPointerEXT

ONUT_FORCE_INLINE void _onutVertexAttribL1dEXT(GLuint index, GLdouble x) {
    onutGLAPI.onutVertexAttribL1dEXT(index, x);
}
#define glVertexAttribL1dEXT _onutVertexAttribL1dEXT

ONUT_FORCE_INLINE void _onutVertexAttribL1dvEXT(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttribL1dvEXT(index, v);
}
#define glVertexAttribL1dvEXT _onutVertexAttribL1dvEXT

ONUT_FORCE_INLINE void _onutVertexAttribL1i64NV(GLuint index, GLint64EXT x) {
    onutGLAPI.onutVertexAttribL1i64NV(index, x);
}
#define glVertexAttribL1i64NV _onutVertexAttribL1i64NV

ONUT_FORCE_INLINE void _onutVertexAttribL1i64vNV(GLuint index, const GLint64EXT *v) {
    onutGLAPI.onutVertexAttribL1i64vNV(index, v);
}
#define glVertexAttribL1i64vNV _onutVertexAttribL1i64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x) {
    onutGLAPI.onutVertexAttribL1ui64ARB(index, x);
}
#define glVertexAttribL1ui64ARB _onutVertexAttribL1ui64ARB

ONUT_FORCE_INLINE void _onutVertexAttribL1ui64NV(GLuint index, GLuint64EXT x) {
    onutGLAPI.onutVertexAttribL1ui64NV(index, x);
}
#define glVertexAttribL1ui64NV _onutVertexAttribL1ui64NV

ONUT_FORCE_INLINE void _onutVertexAttribL1ui64vARB(GLuint index, const GLuint64EXT *v) {
    onutGLAPI.onutVertexAttribL1ui64vARB(index, v);
}
#define glVertexAttribL1ui64vARB _onutVertexAttribL1ui64vARB

ONUT_FORCE_INLINE void _onutVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT *v) {
    onutGLAPI.onutVertexAttribL1ui64vNV(index, v);
}
#define glVertexAttribL1ui64vNV _onutVertexAttribL1ui64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y) {
    onutGLAPI.onutVertexAttribL2dEXT(index, x, y);
}
#define glVertexAttribL2dEXT _onutVertexAttribL2dEXT

ONUT_FORCE_INLINE void _onutVertexAttribL2dvEXT(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttribL2dvEXT(index, v);
}
#define glVertexAttribL2dvEXT _onutVertexAttribL2dvEXT

ONUT_FORCE_INLINE void _onutVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y) {
    onutGLAPI.onutVertexAttribL2i64NV(index, x, y);
}
#define glVertexAttribL2i64NV _onutVertexAttribL2i64NV

ONUT_FORCE_INLINE void _onutVertexAttribL2i64vNV(GLuint index, const GLint64EXT *v) {
    onutGLAPI.onutVertexAttribL2i64vNV(index, v);
}
#define glVertexAttribL2i64vNV _onutVertexAttribL2i64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y) {
    onutGLAPI.onutVertexAttribL2ui64NV(index, x, y);
}
#define glVertexAttribL2ui64NV _onutVertexAttribL2ui64NV

ONUT_FORCE_INLINE void _onutVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT *v) {
    onutGLAPI.onutVertexAttribL2ui64vNV(index, v);
}
#define glVertexAttribL2ui64vNV _onutVertexAttribL2ui64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutVertexAttribL3dEXT(index, x, y, z);
}
#define glVertexAttribL3dEXT _onutVertexAttribL3dEXT

ONUT_FORCE_INLINE void _onutVertexAttribL3dvEXT(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttribL3dvEXT(index, v);
}
#define glVertexAttribL3dvEXT _onutVertexAttribL3dvEXT

ONUT_FORCE_INLINE void _onutVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z) {
    onutGLAPI.onutVertexAttribL3i64NV(index, x, y, z);
}
#define glVertexAttribL3i64NV _onutVertexAttribL3i64NV

ONUT_FORCE_INLINE void _onutVertexAttribL3i64vNV(GLuint index, const GLint64EXT *v) {
    onutGLAPI.onutVertexAttribL3i64vNV(index, v);
}
#define glVertexAttribL3i64vNV _onutVertexAttribL3i64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z) {
    onutGLAPI.onutVertexAttribL3ui64NV(index, x, y, z);
}
#define glVertexAttribL3ui64NV _onutVertexAttribL3ui64NV

ONUT_FORCE_INLINE void _onutVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT *v) {
    onutGLAPI.onutVertexAttribL3ui64vNV(index, v);
}
#define glVertexAttribL3ui64vNV _onutVertexAttribL3ui64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutVertexAttribL4dEXT(index, x, y, z, w);
}
#define glVertexAttribL4dEXT _onutVertexAttribL4dEXT

ONUT_FORCE_INLINE void _onutVertexAttribL4dvEXT(GLuint index, const GLdouble *v) {
    onutGLAPI.onutVertexAttribL4dvEXT(index, v);
}
#define glVertexAttribL4dvEXT _onutVertexAttribL4dvEXT

ONUT_FORCE_INLINE void _onutVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w) {
    onutGLAPI.onutVertexAttribL4i64NV(index, x, y, z, w);
}
#define glVertexAttribL4i64NV _onutVertexAttribL4i64NV

ONUT_FORCE_INLINE void _onutVertexAttribL4i64vNV(GLuint index, const GLint64EXT *v) {
    onutGLAPI.onutVertexAttribL4i64vNV(index, v);
}
#define glVertexAttribL4i64vNV _onutVertexAttribL4i64vNV

ONUT_FORCE_INLINE void _onutVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w) {
    onutGLAPI.onutVertexAttribL4ui64NV(index, x, y, z, w);
}
#define glVertexAttribL4ui64NV _onutVertexAttribL4ui64NV

ONUT_FORCE_INLINE void _onutVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT *v) {
    onutGLAPI.onutVertexAttribL4ui64vNV(index, v);
}
#define glVertexAttribL4ui64vNV _onutVertexAttribL4ui64vNV

ONUT_FORCE_INLINE void _onutVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride) {
    onutGLAPI.onutVertexAttribLFormatNV(index, size, type, stride);
}
#define glVertexAttribLFormatNV _onutVertexAttribLFormatNV

ONUT_FORCE_INLINE void _onutVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutVertexAttribLPointerEXT(index, size, type, stride, pointer);
}
#define glVertexAttribLPointerEXT _onutVertexAttribLPointerEXT

ONUT_FORCE_INLINE void _onutVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param) {
    onutGLAPI.onutVertexAttribParameteriAMD(index, pname, param);
}
#define glVertexAttribParameteriAMD _onutVertexAttribParameteriAMD

ONUT_FORCE_INLINE void _onutVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer) {
    onutGLAPI.onutVertexAttribPointerARB(index, size, type, normalized, stride, pointer);
}
#define glVertexAttribPointerARB _onutVertexAttribPointerARB

ONUT_FORCE_INLINE void _onutVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutVertexAttribPointerNV(index, fsize, type, stride, pointer);
}
#define glVertexAttribPointerNV _onutVertexAttribPointerNV

ONUT_FORCE_INLINE void _onutVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble *v) {
    onutGLAPI.onutVertexAttribs1dvNV(index, count, v);
}
#define glVertexAttribs1dvNV _onutVertexAttribs1dvNV

ONUT_FORCE_INLINE void _onutVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutVertexAttribs1fvNV(index, count, v);
}
#define glVertexAttribs1fvNV _onutVertexAttribs1fvNV

ONUT_FORCE_INLINE void _onutVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttribs1hvNV(index, n, v);
}
#define glVertexAttribs1hvNV _onutVertexAttribs1hvNV

ONUT_FORCE_INLINE void _onutVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort *v) {
    onutGLAPI.onutVertexAttribs1svNV(index, count, v);
}
#define glVertexAttribs1svNV _onutVertexAttribs1svNV

ONUT_FORCE_INLINE void _onutVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble *v) {
    onutGLAPI.onutVertexAttribs2dvNV(index, count, v);
}
#define glVertexAttribs2dvNV _onutVertexAttribs2dvNV

ONUT_FORCE_INLINE void _onutVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutVertexAttribs2fvNV(index, count, v);
}
#define glVertexAttribs2fvNV _onutVertexAttribs2fvNV

ONUT_FORCE_INLINE void _onutVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttribs2hvNV(index, n, v);
}
#define glVertexAttribs2hvNV _onutVertexAttribs2hvNV

ONUT_FORCE_INLINE void _onutVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort *v) {
    onutGLAPI.onutVertexAttribs2svNV(index, count, v);
}
#define glVertexAttribs2svNV _onutVertexAttribs2svNV

ONUT_FORCE_INLINE void _onutVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble *v) {
    onutGLAPI.onutVertexAttribs3dvNV(index, count, v);
}
#define glVertexAttribs3dvNV _onutVertexAttribs3dvNV

ONUT_FORCE_INLINE void _onutVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutVertexAttribs3fvNV(index, count, v);
}
#define glVertexAttribs3fvNV _onutVertexAttribs3fvNV

ONUT_FORCE_INLINE void _onutVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttribs3hvNV(index, n, v);
}
#define glVertexAttribs3hvNV _onutVertexAttribs3hvNV

ONUT_FORCE_INLINE void _onutVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort *v) {
    onutGLAPI.onutVertexAttribs3svNV(index, count, v);
}
#define glVertexAttribs3svNV _onutVertexAttribs3svNV

ONUT_FORCE_INLINE void _onutVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble *v) {
    onutGLAPI.onutVertexAttribs4dvNV(index, count, v);
}
#define glVertexAttribs4dvNV _onutVertexAttribs4dvNV

ONUT_FORCE_INLINE void _onutVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutVertexAttribs4fvNV(index, count, v);
}
#define glVertexAttribs4fvNV _onutVertexAttribs4fvNV

ONUT_FORCE_INLINE void _onutVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV *v) {
    onutGLAPI.onutVertexAttribs4hvNV(index, n, v);
}
#define glVertexAttribs4hvNV _onutVertexAttribs4hvNV

ONUT_FORCE_INLINE void _onutVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort *v) {
    onutGLAPI.onutVertexAttribs4svNV(index, count, v);
}
#define glVertexAttribs4svNV _onutVertexAttribs4svNV

ONUT_FORCE_INLINE void _onutVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte *v) {
    onutGLAPI.onutVertexAttribs4ubvNV(index, count, v);
}
#define glVertexAttribs4ubvNV _onutVertexAttribs4ubvNV

ONUT_FORCE_INLINE void _onutVertexBlendARB(GLint count) {
    onutGLAPI.onutVertexBlendARB(count);
}
#define glVertexBlendARB _onutVertexBlendARB

ONUT_FORCE_INLINE void _onutVertexBlendEnvfATI(GLenum pname, GLfloat param) {
    onutGLAPI.onutVertexBlendEnvfATI(pname, param);
}
#define glVertexBlendEnvfATI _onutVertexBlendEnvfATI

ONUT_FORCE_INLINE void _onutVertexBlendEnviATI(GLenum pname, GLint param) {
    onutGLAPI.onutVertexBlendEnviATI(pname, param);
}
#define glVertexBlendEnviATI _onutVertexBlendEnviATI

ONUT_FORCE_INLINE void _onutVertexFormatNV(GLint size, GLenum type, GLsizei stride) {
    onutGLAPI.onutVertexFormatNV(size, type, stride);
}
#define glVertexFormatNV _onutVertexFormatNV

ONUT_FORCE_INLINE void _onutVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer) {
    onutGLAPI.onutVertexPointerEXT(size, type, stride, count, pointer);
}
#define glVertexPointerEXT _onutVertexPointerEXT

ONUT_FORCE_INLINE void _onutVertexPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride) {
    onutGLAPI.onutVertexPointerListIBM(size, type, stride, pointer, ptrstride);
}
#define glVertexPointerListIBM _onutVertexPointerListIBM

ONUT_FORCE_INLINE void _onutVertexPointervINTEL(GLint size, GLenum type, const void **pointer) {
    onutGLAPI.onutVertexPointervINTEL(size, type, pointer);
}
#define glVertexPointervINTEL _onutVertexPointervINTEL

ONUT_FORCE_INLINE void _onutVertexStream1dATI(GLenum stream, GLdouble x) {
    onutGLAPI.onutVertexStream1dATI(stream, x);
}
#define glVertexStream1dATI _onutVertexStream1dATI

ONUT_FORCE_INLINE void _onutVertexStream1dvATI(GLenum stream, const GLdouble *coords) {
    onutGLAPI.onutVertexStream1dvATI(stream, coords);
}
#define glVertexStream1dvATI _onutVertexStream1dvATI

ONUT_FORCE_INLINE void _onutVertexStream1fATI(GLenum stream, GLfloat x) {
    onutGLAPI.onutVertexStream1fATI(stream, x);
}
#define glVertexStream1fATI _onutVertexStream1fATI

ONUT_FORCE_INLINE void _onutVertexStream1fvATI(GLenum stream, const GLfloat *coords) {
    onutGLAPI.onutVertexStream1fvATI(stream, coords);
}
#define glVertexStream1fvATI _onutVertexStream1fvATI

ONUT_FORCE_INLINE void _onutVertexStream1iATI(GLenum stream, GLint x) {
    onutGLAPI.onutVertexStream1iATI(stream, x);
}
#define glVertexStream1iATI _onutVertexStream1iATI

ONUT_FORCE_INLINE void _onutVertexStream1ivATI(GLenum stream, const GLint *coords) {
    onutGLAPI.onutVertexStream1ivATI(stream, coords);
}
#define glVertexStream1ivATI _onutVertexStream1ivATI

ONUT_FORCE_INLINE void _onutVertexStream1sATI(GLenum stream, GLshort x) {
    onutGLAPI.onutVertexStream1sATI(stream, x);
}
#define glVertexStream1sATI _onutVertexStream1sATI

ONUT_FORCE_INLINE void _onutVertexStream1svATI(GLenum stream, const GLshort *coords) {
    onutGLAPI.onutVertexStream1svATI(stream, coords);
}
#define glVertexStream1svATI _onutVertexStream1svATI

ONUT_FORCE_INLINE void _onutVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y) {
    onutGLAPI.onutVertexStream2dATI(stream, x, y);
}
#define glVertexStream2dATI _onutVertexStream2dATI

ONUT_FORCE_INLINE void _onutVertexStream2dvATI(GLenum stream, const GLdouble *coords) {
    onutGLAPI.onutVertexStream2dvATI(stream, coords);
}
#define glVertexStream2dvATI _onutVertexStream2dvATI

ONUT_FORCE_INLINE void _onutVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y) {
    onutGLAPI.onutVertexStream2fATI(stream, x, y);
}
#define glVertexStream2fATI _onutVertexStream2fATI

ONUT_FORCE_INLINE void _onutVertexStream2fvATI(GLenum stream, const GLfloat *coords) {
    onutGLAPI.onutVertexStream2fvATI(stream, coords);
}
#define glVertexStream2fvATI _onutVertexStream2fvATI

ONUT_FORCE_INLINE void _onutVertexStream2iATI(GLenum stream, GLint x, GLint y) {
    onutGLAPI.onutVertexStream2iATI(stream, x, y);
}
#define glVertexStream2iATI _onutVertexStream2iATI

ONUT_FORCE_INLINE void _onutVertexStream2ivATI(GLenum stream, const GLint *coords) {
    onutGLAPI.onutVertexStream2ivATI(stream, coords);
}
#define glVertexStream2ivATI _onutVertexStream2ivATI

ONUT_FORCE_INLINE void _onutVertexStream2sATI(GLenum stream, GLshort x, GLshort y) {
    onutGLAPI.onutVertexStream2sATI(stream, x, y);
}
#define glVertexStream2sATI _onutVertexStream2sATI

ONUT_FORCE_INLINE void _onutVertexStream2svATI(GLenum stream, const GLshort *coords) {
    onutGLAPI.onutVertexStream2svATI(stream, coords);
}
#define glVertexStream2svATI _onutVertexStream2svATI

ONUT_FORCE_INLINE void _onutVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutVertexStream3dATI(stream, x, y, z);
}
#define glVertexStream3dATI _onutVertexStream3dATI

ONUT_FORCE_INLINE void _onutVertexStream3dvATI(GLenum stream, const GLdouble *coords) {
    onutGLAPI.onutVertexStream3dvATI(stream, coords);
}
#define glVertexStream3dvATI _onutVertexStream3dvATI

ONUT_FORCE_INLINE void _onutVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutVertexStream3fATI(stream, x, y, z);
}
#define glVertexStream3fATI _onutVertexStream3fATI

ONUT_FORCE_INLINE void _onutVertexStream3fvATI(GLenum stream, const GLfloat *coords) {
    onutGLAPI.onutVertexStream3fvATI(stream, coords);
}
#define glVertexStream3fvATI _onutVertexStream3fvATI

ONUT_FORCE_INLINE void _onutVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z) {
    onutGLAPI.onutVertexStream3iATI(stream, x, y, z);
}
#define glVertexStream3iATI _onutVertexStream3iATI

ONUT_FORCE_INLINE void _onutVertexStream3ivATI(GLenum stream, const GLint *coords) {
    onutGLAPI.onutVertexStream3ivATI(stream, coords);
}
#define glVertexStream3ivATI _onutVertexStream3ivATI

ONUT_FORCE_INLINE void _onutVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z) {
    onutGLAPI.onutVertexStream3sATI(stream, x, y, z);
}
#define glVertexStream3sATI _onutVertexStream3sATI

ONUT_FORCE_INLINE void _onutVertexStream3svATI(GLenum stream, const GLshort *coords) {
    onutGLAPI.onutVertexStream3svATI(stream, coords);
}
#define glVertexStream3svATI _onutVertexStream3svATI

ONUT_FORCE_INLINE void _onutVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutVertexStream4dATI(stream, x, y, z, w);
}
#define glVertexStream4dATI _onutVertexStream4dATI

ONUT_FORCE_INLINE void _onutVertexStream4dvATI(GLenum stream, const GLdouble *coords) {
    onutGLAPI.onutVertexStream4dvATI(stream, coords);
}
#define glVertexStream4dvATI _onutVertexStream4dvATI

ONUT_FORCE_INLINE void _onutVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutVertexStream4fATI(stream, x, y, z, w);
}
#define glVertexStream4fATI _onutVertexStream4fATI

ONUT_FORCE_INLINE void _onutVertexStream4fvATI(GLenum stream, const GLfloat *coords) {
    onutGLAPI.onutVertexStream4fvATI(stream, coords);
}
#define glVertexStream4fvATI _onutVertexStream4fvATI

ONUT_FORCE_INLINE void _onutVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w) {
    onutGLAPI.onutVertexStream4iATI(stream, x, y, z, w);
}
#define glVertexStream4iATI _onutVertexStream4iATI

ONUT_FORCE_INLINE void _onutVertexStream4ivATI(GLenum stream, const GLint *coords) {
    onutGLAPI.onutVertexStream4ivATI(stream, coords);
}
#define glVertexStream4ivATI _onutVertexStream4ivATI

ONUT_FORCE_INLINE void _onutVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w) {
    onutGLAPI.onutVertexStream4sATI(stream, x, y, z, w);
}
#define glVertexStream4sATI _onutVertexStream4sATI

ONUT_FORCE_INLINE void _onutVertexStream4svATI(GLenum stream, const GLshort *coords) {
    onutGLAPI.onutVertexStream4svATI(stream, coords);
}
#define glVertexStream4svATI _onutVertexStream4svATI

ONUT_FORCE_INLINE void _onutVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutVertexWeightPointerEXT(size, type, stride, pointer);
}
#define glVertexWeightPointerEXT _onutVertexWeightPointerEXT

ONUT_FORCE_INLINE void _onutVertexWeightfEXT(GLfloat weight) {
    onutGLAPI.onutVertexWeightfEXT(weight);
}
#define glVertexWeightfEXT _onutVertexWeightfEXT

ONUT_FORCE_INLINE void _onutVertexWeightfvEXT(const GLfloat *weight) {
    onutGLAPI.onutVertexWeightfvEXT(weight);
}
#define glVertexWeightfvEXT _onutVertexWeightfvEXT

ONUT_FORCE_INLINE void _onutVertexWeighthNV(GLhalfNV weight) {
    onutGLAPI.onutVertexWeighthNV(weight);
}
#define glVertexWeighthNV _onutVertexWeighthNV

ONUT_FORCE_INLINE void _onutVertexWeighthvNV(const GLhalfNV *weight) {
    onutGLAPI.onutVertexWeighthvNV(weight);
}
#define glVertexWeighthvNV _onutVertexWeighthvNV

ONUT_FORCE_INLINE GLenum _onutVideoCaptureNV(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time) {
    return onutGLAPI.onutVideoCaptureNV(video_capture_slot, sequence_num, capture_time);
}
#define glVideoCaptureNV _onutVideoCaptureNV

ONUT_FORCE_INLINE void _onutVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params) {
    onutGLAPI.onutVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params);
}
#define glVideoCaptureStreamParameterdvNV _onutVideoCaptureStreamParameterdvNV

ONUT_FORCE_INLINE void _onutVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params) {
    onutGLAPI.onutVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params);
}
#define glVideoCaptureStreamParameterfvNV _onutVideoCaptureStreamParameterfvNV

ONUT_FORCE_INLINE void _onutVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params) {
    onutGLAPI.onutVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params);
}
#define glVideoCaptureStreamParameterivNV _onutVideoCaptureStreamParameterivNV

ONUT_FORCE_INLINE void _onutViewportArrayvNV(GLuint first, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutViewportArrayvNV(first, count, v);
}
#define glViewportArrayvNV _onutViewportArrayvNV

ONUT_FORCE_INLINE void _onutViewportArrayvOES(GLuint first, GLsizei count, const GLfloat *v) {
    onutGLAPI.onutViewportArrayvOES(first, count, v);
}
#define glViewportArrayvOES _onutViewportArrayvOES

ONUT_FORCE_INLINE void _onutViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h) {
    onutGLAPI.onutViewportIndexedfNV(index, x, y, w, h);
}
#define glViewportIndexedfNV _onutViewportIndexedfNV

ONUT_FORCE_INLINE void _onutViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h) {
    onutGLAPI.onutViewportIndexedfOES(index, x, y, w, h);
}
#define glViewportIndexedfOES _onutViewportIndexedfOES

ONUT_FORCE_INLINE void _onutViewportIndexedfvNV(GLuint index, const GLfloat *v) {
    onutGLAPI.onutViewportIndexedfvNV(index, v);
}
#define glViewportIndexedfvNV _onutViewportIndexedfvNV

ONUT_FORCE_INLINE void _onutViewportIndexedfvOES(GLuint index, const GLfloat *v) {
    onutGLAPI.onutViewportIndexedfvOES(index, v);
}
#define glViewportIndexedfvOES _onutViewportIndexedfvOES

ONUT_FORCE_INLINE void _onutViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff) {
    onutGLAPI.onutViewportPositionWScaleNV(index, xcoeff, ycoeff);
}
#define glViewportPositionWScaleNV _onutViewportPositionWScaleNV

ONUT_FORCE_INLINE void _onutViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew) {
    onutGLAPI.onutViewportSwizzleNV(index, swizzlex, swizzley, swizzlez, swizzlew);
}
#define glViewportSwizzleNV _onutViewportSwizzleNV

ONUT_FORCE_INLINE void _onutWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts) {
    onutGLAPI.onutWaitSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts);
}
#define glWaitSemaphoreEXT _onutWaitSemaphoreEXT

ONUT_FORCE_INLINE void _onutWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout) {
    onutGLAPI.onutWaitSyncAPPLE(sync, flags, timeout);
}
#define glWaitSyncAPPLE _onutWaitSyncAPPLE

ONUT_FORCE_INLINE void _onutWaitVkSemaphoreNV(GLuint64 vkSemaphore) {
    onutGLAPI.onutWaitVkSemaphoreNV(vkSemaphore);
}
#define glWaitVkSemaphoreNV _onutWaitVkSemaphoreNV

ONUT_FORCE_INLINE void _onutWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights) {
    onutGLAPI.onutWeightPathsNV(resultPath, numPaths, paths, weights);
}
#define glWeightPathsNV _onutWeightPathsNV

ONUT_FORCE_INLINE void _onutWeightPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer) {
    onutGLAPI.onutWeightPointerARB(size, type, stride, pointer);
}
#define glWeightPointerARB _onutWeightPointerARB

ONUT_FORCE_INLINE void _onutWeightbvARB(GLint size, const GLbyte *weights) {
    onutGLAPI.onutWeightbvARB(size, weights);
}
#define glWeightbvARB _onutWeightbvARB

ONUT_FORCE_INLINE void _onutWeightdvARB(GLint size, const GLdouble *weights) {
    onutGLAPI.onutWeightdvARB(size, weights);
}
#define glWeightdvARB _onutWeightdvARB

ONUT_FORCE_INLINE void _onutWeightfvARB(GLint size, const GLfloat *weights) {
    onutGLAPI.onutWeightfvARB(size, weights);
}
#define glWeightfvARB _onutWeightfvARB

ONUT_FORCE_INLINE void _onutWeightivARB(GLint size, const GLint *weights) {
    onutGLAPI.onutWeightivARB(size, weights);
}
#define glWeightivARB _onutWeightivARB

ONUT_FORCE_INLINE void _onutWeightsvARB(GLint size, const GLshort *weights) {
    onutGLAPI.onutWeightsvARB(size, weights);
}
#define glWeightsvARB _onutWeightsvARB

ONUT_FORCE_INLINE void _onutWeightubvARB(GLint size, const GLubyte *weights) {
    onutGLAPI.onutWeightubvARB(size, weights);
}
#define glWeightubvARB _onutWeightubvARB

ONUT_FORCE_INLINE void _onutWeightuivARB(GLint size, const GLuint *weights) {
    onutGLAPI.onutWeightuivARB(size, weights);
}
#define glWeightuivARB _onutWeightuivARB

ONUT_FORCE_INLINE void _onutWeightusvARB(GLint size, const GLushort *weights) {
    onutGLAPI.onutWeightusvARB(size, weights);
}
#define glWeightusvARB _onutWeightusvARB

ONUT_FORCE_INLINE void _onutWindowPos2dARB(GLdouble x, GLdouble y) {
    onutGLAPI.onutWindowPos2dARB(x, y);
}
#define glWindowPos2dARB _onutWindowPos2dARB

ONUT_FORCE_INLINE void _onutWindowPos2dMESA(GLdouble x, GLdouble y) {
    onutGLAPI.onutWindowPos2dMESA(x, y);
}
#define glWindowPos2dMESA _onutWindowPos2dMESA

ONUT_FORCE_INLINE void _onutWindowPos2dvARB(const GLdouble *v) {
    onutGLAPI.onutWindowPos2dvARB(v);
}
#define glWindowPos2dvARB _onutWindowPos2dvARB

ONUT_FORCE_INLINE void _onutWindowPos2dvMESA(const GLdouble *v) {
    onutGLAPI.onutWindowPos2dvMESA(v);
}
#define glWindowPos2dvMESA _onutWindowPos2dvMESA

ONUT_FORCE_INLINE void _onutWindowPos2fARB(GLfloat x, GLfloat y) {
    onutGLAPI.onutWindowPos2fARB(x, y);
}
#define glWindowPos2fARB _onutWindowPos2fARB

ONUT_FORCE_INLINE void _onutWindowPos2fMESA(GLfloat x, GLfloat y) {
    onutGLAPI.onutWindowPos2fMESA(x, y);
}
#define glWindowPos2fMESA _onutWindowPos2fMESA

ONUT_FORCE_INLINE void _onutWindowPos2fvARB(const GLfloat *v) {
    onutGLAPI.onutWindowPos2fvARB(v);
}
#define glWindowPos2fvARB _onutWindowPos2fvARB

ONUT_FORCE_INLINE void _onutWindowPos2fvMESA(const GLfloat *v) {
    onutGLAPI.onutWindowPos2fvMESA(v);
}
#define glWindowPos2fvMESA _onutWindowPos2fvMESA

ONUT_FORCE_INLINE void _onutWindowPos2iARB(GLint x, GLint y) {
    onutGLAPI.onutWindowPos2iARB(x, y);
}
#define glWindowPos2iARB _onutWindowPos2iARB

ONUT_FORCE_INLINE void _onutWindowPos2iMESA(GLint x, GLint y) {
    onutGLAPI.onutWindowPos2iMESA(x, y);
}
#define glWindowPos2iMESA _onutWindowPos2iMESA

ONUT_FORCE_INLINE void _onutWindowPos2ivARB(const GLint *v) {
    onutGLAPI.onutWindowPos2ivARB(v);
}
#define glWindowPos2ivARB _onutWindowPos2ivARB

ONUT_FORCE_INLINE void _onutWindowPos2ivMESA(const GLint *v) {
    onutGLAPI.onutWindowPos2ivMESA(v);
}
#define glWindowPos2ivMESA _onutWindowPos2ivMESA

ONUT_FORCE_INLINE void _onutWindowPos2sARB(GLshort x, GLshort y) {
    onutGLAPI.onutWindowPos2sARB(x, y);
}
#define glWindowPos2sARB _onutWindowPos2sARB

ONUT_FORCE_INLINE void _onutWindowPos2sMESA(GLshort x, GLshort y) {
    onutGLAPI.onutWindowPos2sMESA(x, y);
}
#define glWindowPos2sMESA _onutWindowPos2sMESA

ONUT_FORCE_INLINE void _onutWindowPos2svARB(const GLshort *v) {
    onutGLAPI.onutWindowPos2svARB(v);
}
#define glWindowPos2svARB _onutWindowPos2svARB

ONUT_FORCE_INLINE void _onutWindowPos2svMESA(const GLshort *v) {
    onutGLAPI.onutWindowPos2svMESA(v);
}
#define glWindowPos2svMESA _onutWindowPos2svMESA

ONUT_FORCE_INLINE void _onutWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutWindowPos3dARB(x, y, z);
}
#define glWindowPos3dARB _onutWindowPos3dARB

ONUT_FORCE_INLINE void _onutWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z) {
    onutGLAPI.onutWindowPos3dMESA(x, y, z);
}
#define glWindowPos3dMESA _onutWindowPos3dMESA

ONUT_FORCE_INLINE void _onutWindowPos3dvARB(const GLdouble *v) {
    onutGLAPI.onutWindowPos3dvARB(v);
}
#define glWindowPos3dvARB _onutWindowPos3dvARB

ONUT_FORCE_INLINE void _onutWindowPos3dvMESA(const GLdouble *v) {
    onutGLAPI.onutWindowPos3dvMESA(v);
}
#define glWindowPos3dvMESA _onutWindowPos3dvMESA

ONUT_FORCE_INLINE void _onutWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutWindowPos3fARB(x, y, z);
}
#define glWindowPos3fARB _onutWindowPos3fARB

ONUT_FORCE_INLINE void _onutWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z) {
    onutGLAPI.onutWindowPos3fMESA(x, y, z);
}
#define glWindowPos3fMESA _onutWindowPos3fMESA

ONUT_FORCE_INLINE void _onutWindowPos3fvARB(const GLfloat *v) {
    onutGLAPI.onutWindowPos3fvARB(v);
}
#define glWindowPos3fvARB _onutWindowPos3fvARB

ONUT_FORCE_INLINE void _onutWindowPos3fvMESA(const GLfloat *v) {
    onutGLAPI.onutWindowPos3fvMESA(v);
}
#define glWindowPos3fvMESA _onutWindowPos3fvMESA

ONUT_FORCE_INLINE void _onutWindowPos3iARB(GLint x, GLint y, GLint z) {
    onutGLAPI.onutWindowPos3iARB(x, y, z);
}
#define glWindowPos3iARB _onutWindowPos3iARB

ONUT_FORCE_INLINE void _onutWindowPos3iMESA(GLint x, GLint y, GLint z) {
    onutGLAPI.onutWindowPos3iMESA(x, y, z);
}
#define glWindowPos3iMESA _onutWindowPos3iMESA

ONUT_FORCE_INLINE void _onutWindowPos3ivARB(const GLint *v) {
    onutGLAPI.onutWindowPos3ivARB(v);
}
#define glWindowPos3ivARB _onutWindowPos3ivARB

ONUT_FORCE_INLINE void _onutWindowPos3ivMESA(const GLint *v) {
    onutGLAPI.onutWindowPos3ivMESA(v);
}
#define glWindowPos3ivMESA _onutWindowPos3ivMESA

ONUT_FORCE_INLINE void _onutWindowPos3sARB(GLshort x, GLshort y, GLshort z) {
    onutGLAPI.onutWindowPos3sARB(x, y, z);
}
#define glWindowPos3sARB _onutWindowPos3sARB

ONUT_FORCE_INLINE void _onutWindowPos3sMESA(GLshort x, GLshort y, GLshort z) {
    onutGLAPI.onutWindowPos3sMESA(x, y, z);
}
#define glWindowPos3sMESA _onutWindowPos3sMESA

ONUT_FORCE_INLINE void _onutWindowPos3svARB(const GLshort *v) {
    onutGLAPI.onutWindowPos3svARB(v);
}
#define glWindowPos3svARB _onutWindowPos3svARB

ONUT_FORCE_INLINE void _onutWindowPos3svMESA(const GLshort *v) {
    onutGLAPI.onutWindowPos3svMESA(v);
}
#define glWindowPos3svMESA _onutWindowPos3svMESA

ONUT_FORCE_INLINE void _onutWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w) {
    onutGLAPI.onutWindowPos4dMESA(x, y, z, w);
}
#define glWindowPos4dMESA _onutWindowPos4dMESA

ONUT_FORCE_INLINE void _onutWindowPos4dvMESA(const GLdouble *v) {
    onutGLAPI.onutWindowPos4dvMESA(v);
}
#define glWindowPos4dvMESA _onutWindowPos4dvMESA

ONUT_FORCE_INLINE void _onutWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w) {
    onutGLAPI.onutWindowPos4fMESA(x, y, z, w);
}
#define glWindowPos4fMESA _onutWindowPos4fMESA

ONUT_FORCE_INLINE void _onutWindowPos4fvMESA(const GLfloat *v) {
    onutGLAPI.onutWindowPos4fvMESA(v);
}
#define glWindowPos4fvMESA _onutWindowPos4fvMESA

ONUT_FORCE_INLINE void _onutWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w) {
    onutGLAPI.onutWindowPos4iMESA(x, y, z, w);
}
#define glWindowPos4iMESA _onutWindowPos4iMESA

ONUT_FORCE_INLINE void _onutWindowPos4ivMESA(const GLint *v) {
    onutGLAPI.onutWindowPos4ivMESA(v);
}
#define glWindowPos4ivMESA _onutWindowPos4ivMESA

ONUT_FORCE_INLINE void _onutWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w) {
    onutGLAPI.onutWindowPos4sMESA(x, y, z, w);
}
#define glWindowPos4sMESA _onutWindowPos4sMESA

ONUT_FORCE_INLINE void _onutWindowPos4svMESA(const GLshort *v) {
    onutGLAPI.onutWindowPos4svMESA(v);
}
#define glWindowPos4svMESA _onutWindowPos4svMESA

ONUT_FORCE_INLINE void _onutWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint *box) {
    onutGLAPI.onutWindowRectanglesEXT(mode, count, box);
}
#define glWindowRectanglesEXT _onutWindowRectanglesEXT

ONUT_FORCE_INLINE void _onutWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW) {
    onutGLAPI.onutWriteMaskEXT(res, in, outX, outY, outZ, outW);
}
#define glWriteMaskEXT _onutWriteMaskEXT

    
#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ONUT_GL_WRANGLER_ENABLED */

#endif /* _ONUT_GL_EXT_H_ */
    
